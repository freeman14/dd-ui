{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///dd-ui.js","webpack:///webpack/bootstrap 406b28fa8ef9c27933f3?cd4a","webpack:///./~/css-loader/lib/css-base.js?da04","webpack:///./~/style-loader/addStyles.js?b980","webpack:///./src/index.ts","webpack:///external \"angular\"","webpack:///./src/directives/directives.module.ts","webpack:///./src/directives/directives.less?6316","webpack:///./src/directives/directives.less","webpack:///./src/directives/input/limit.ts","webpack:///./src/directives/checkbox/checkbox.directive.ts","webpack:///./src/directives/checkbox/checkbox.partial.html","webpack:///./src/tooltip/tooltip.module.ts","webpack:///./~/angular-ui-bootstrap/src/popover/index-nocss.js","webpack:///./~/angular-ui-bootstrap/src/tooltip/index-nocss.js","webpack:///./~/angular-ui-bootstrap/src/position/index-nocss.js","webpack:///./~/angular-ui-bootstrap/src/position/position.js","webpack:///./~/angular-ui-bootstrap/src/stackedMap/index.js","webpack:///./~/angular-ui-bootstrap/src/stackedMap/stackedMap.js","webpack:///./~/angular-ui-bootstrap/template/tooltip/tooltip-popup.html.js","webpack:///./~/angular-ui-bootstrap/template/tooltip/tooltip-html-popup.html.js","webpack:///./~/angular-ui-bootstrap/template/tooltip/tooltip-template-popup.html.js","webpack:///./~/angular-ui-bootstrap/src/tooltip/tooltip.js","webpack:///./~/angular-ui-bootstrap/template/popover/popover.html.js","webpack:///./~/angular-ui-bootstrap/template/popover/popover-html.html.js","webpack:///./~/angular-ui-bootstrap/template/popover/popover-template.html.js","webpack:///./~/angular-ui-bootstrap/src/popover/popover.js","webpack:///./~/angular-ui-bootstrap/src/tooltip/tooltip.css?4aa5","webpack:///./~/angular-ui-bootstrap/src/tooltip/tooltip.css","webpack:///./src/tooltip/tooltip.less?f90e","webpack:///./src/tooltip/tooltip.less","webpack:///./src/tooltip/tooltip.run.ts","webpack:///./src/tooltip/tooltip.config.ts","webpack:///./src/toggleButtons/toggleButtons.module.ts","webpack:///./~/angular-ui-bootstrap/src/buttons/index.js","webpack:///./~/angular-ui-bootstrap/src/buttons/buttons.js","webpack:///./src/modal/modal.module.ts","webpack:///./~/angular-ui-bootstrap/src/modal/index-nocss.js","webpack:///./~/angular-ui-bootstrap/template/modal/window.html.js","webpack:///./~/angular-ui-bootstrap/src/modal/modal.js","webpack:///./~/angular-ui-bootstrap/src/position/position.css?4d02","webpack:///./~/angular-ui-bootstrap/src/position/position.css","webpack:///./src/modal/modal.less?902d","webpack:///./src/modal/modal.less","webpack:///./src/modal/modal.run.ts","webpack:///./src/carousel/carousel.module.ts","webpack:///./~/angular-animate/index.js","webpack:///./~/angular-animate/angular-animate.js","webpack:///./~/angular-ui-bootstrap/src/carousel/index.js","webpack:///./~/angular-ui-bootstrap/src/carousel/carousel.css?7db2","webpack:///./~/angular-ui-bootstrap/src/carousel/carousel.css","webpack:///./~/angular-ui-bootstrap/src/carousel/index-nocss.js","webpack:///./~/angular-ui-bootstrap/template/carousel/carousel.html.js","webpack:///./~/angular-ui-bootstrap/template/carousel/slide.html.js","webpack:///./~/angular-ui-bootstrap/src/carousel/carousel.js","webpack:///./src/carousel/carousel.less?9d28","webpack:///./src/carousel/carousel.less","webpack:///./src/carousel/carousel.run.ts","webpack:///./src/timestamp/timestamp.module.ts","webpack:///./src/timestamp/timestamp.component.ts","webpack:///./src/timestamp/timestamp.controller.ts","webpack:///./src/timestampsRange/timestampsRange.module.ts","webpack:///./src/timestampsRange/timestampsRange.component.ts","webpack:///./src/timestampsRange/timestampsRange.controller.ts","webpack:///./src/timestampsRange/timestampsRange.less?b5a8","webpack:///./src/timestampsRange/timestampsRange.less"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_30__","__WEBPACK_EXTERNAL_MODULE_86__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","list","toString","result","length","item","push","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","createLinkElement","linkElement","rel","obj","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","angular","directives_module_1","tooltip_module_1","toggleButtons_module_1","modal_module_1","carousel_module_1","timestamp_module_1","timestampsRange_module_1","Object","defineProperty","value","name","limit_1","checkbox_directive_1","directive","InputLimit","instance","content","locals","$compile","$timeout","_this","restrict","scope","ngModel","link","element","attrs","indicator","self","textLimit","parent","addClass","after","countText","event","setTimeout","$inject","prototype","modelText","val","attr","replace","transclude","template","model","$formatters","unshift","isChecked","toggle","$setViewValue","tooltip_run_1","tooltip_config_1","run","config","MODULE_NAME","$document","$window","SCROLLBAR_WIDTH","BODY_SCROLLBAR_WIDTH","OVERFLOW_REGEX","normal","hidden","PLACEMENT_REGEX","auto","primary","secondary","vertical","BODY_REGEX","getRawNode","elem","nodeName","parseStyle","parseFloat","isFinite","offsetParent","isStaticPositioned","el","getComputedStyle","position","documentElement","scrollbarWidth","isBody","isUndefined","bodyElem","find","innerWidth","clientWidth","removeClass","scrollElem","append","offsetWidth","scrollbarPadding","elemStyle","paddingRight","paddingBottom","scrollParent","tagName","widthOverflow","scrollWidth","right","originalRight","heightOverflow","scrollHeight","clientHeight","bottom","originalBottom","isScrollable","includeHidden","overflowRegex","overflow","overflowY","overflowX","includeSelf","documentEl","excludeStatic","parentElement","spStyle","includeMagins","elemOffset","offset","top","marginTop","left","marginLeft","parentOffset","clientTop","scrollTop","clientLeft","scrollLeft","width","Math","round","isNumber","height","offsetHeight","elemBCR","getBoundingClientRect","pageYOffset","pageXOffset","viewportOffset","useDocument","includePadding","offsetBCR","offsetParentBCR","offsetParentStyle","paddingTop","paddingLeft","parsePlacement","placement","autoPlace","split","positionElements","hostElem","targetElem","appendToBody","targetWidth","isDefined","prop","targetHeight","hostElemPos","targetElemPos","targetElemStyle","adjustedSize","abs","marginRight","marginBottom","xOverflow","yOverflow","adjustTop","placementClasses","containerPosition","initialHeight","currentHeight","positionArrow","innerElem","querySelector","isTooltip","hasClass","arrowElem","arrowCss","borderProp","borderWidth","borderRadiusProp","borderRadius","createNew","stack","add","key","get","keys","removeTop","pop","$templateCache","put","provider","snake_case","regexp","separator","letter","pos","defaultOptions","placementClassPrefix","animation","popupDelay","popupCloseDelay","useContentExp","triggerMap","mouseenter","click","outsideClick","focus","none","globalOptions","extend","setTriggers","triggers","$get","$position","$interpolate","$rootScope","$parse","$$stackedMap","keypressListener","e","which","last","openedTooltips","close","on","$on","off","ttType","prefix","defaultTriggerShow","getTriggers","trigger","show","hide","map","directiveName","startSym","startSymbol","endSym","endSymbol","compile","tElem","tAttrs","tooltipLinker","tooltipCtrl","toggleTooltipBind","ttScope","isOpen","hideTooltipBind","showTooltipBind","hasEnableExp","$eval","cancelHide","prepareTooltip","showTimeout","cancelShow","hideTimeout","createTooltip","$evalAsync","assignIsOpen","positionTooltip","noop","cancel","positionTimeout","transitionTimeout","removeTooltip","tooltip","tooltipLinkedScope","$new","prepObservers","unregisterObservers","$destroy","title","contentParse","popupClass","lastPlacement","delay","parseInt","closeDelay","isNaN","isOpenParse","isFunction","assign","observers","$watch","repositionScheduled","$$postDigest","$observe","forEach","observer","bodyHideTooltipBind","contains","target","prepTriggers","showTriggers","hideTriggers","unregisterTriggers","isObject","undefined","html","ttPosition","elementPos","adjustment","origScope","contentExp","appendToBodyVal","appendKey","$animate","$sce","$templateRequest","currentScope","previousElement","currentElement","tooltipTemplateTranscludeScope","changeCounter","cleanupLastIncludeContent","leave","then","parseAsResourceUrl","uibTooltipTemplateTransclude","src","thisChangeId","response","newScope","clone","enter","$emit","$uibPosition","tooltipAnimationClass","templateUrl","$uibTooltip","originScope","uibTitle","runFunc","$uibTooltipProvider","constant","activeClass","toggleEvent","controller","buttonConfig","controllerAs","ctrls","buttonsCtrl","ngModelCtrl","uncheckableExpr","uibUncheckable","display","$render","toggleClass","equals","$modelValue","uibBtnRadio","disabled","isActive","uncheckable","$apply","$set","getTrueValue","getCheckboxValue","btnCheckboxTrue","getFalseValue","btnCheckboxFalse","attribute","defaultValue","modal_run_1","entries","hasKey","values","resolve","resolver","setResolver","$injector","$q","invocables","promises","isArray","invoke","isString","all","resolves","resolveObj","resolveIter","$modalStack","linkFn","modalInClass","NOW_CLOSING_EVENT","setIsAsync","done","modalOptions","tElement","backdropClass","$animateCss","windowTopClass","size","evt","modal","getTop","backdrop","currentTarget","preventDefault","stopPropagation","dismiss","$isRendered","modalRenderDeferObj","defer","promise","animationPromise","start","when","modalRendered","activeElement","inputWithAutofocus","modalAnimation","uibModalAnimationClass","$parent","empty","$$multiMap","SNAKE_CASE_REGEXP","isVisible","getClientRects","backdropIndex","topBackdropIndex","opened","openedWindows","topModalIndex","removeModalWindow","modalInstance","elementToReceiveFocus","modalWindow","appendToElement","appendTo","previousTopOpenedModal","modalDomEl","removeAfterAnimate","modalScope","modalBodyClass","openedClass","OPENED_MODAL_CLASS","openedClasses","areAnyOpen","toggleTopWindowClass","closedDeferred","checkRemoveBackdrop","toggleSwitch","backdropDomEl","backdropScopeRef","backdropScope","domEl","afterAnimating","asyncDeferred","asyncPromise","$broadcast","keydownListener","isDefaultPrevented","keyboard","loadFocusElementList","focusChanged","shiftKey","isFocusInFirstItem","isModalFocused","focusLastFocusableElement","isFocusInLastItem","focusFirstFocusableElement","broadcastClosing","resultOrReason","closing","defaultPrevented","tabbableSelector","newBackdropIndex","open","modalOpener","deferred","renderDeferred","currBackdropIndex","class","ng-style","uib-modal-animation-class","modal-in-class","component","modal-instance","angularDomEl","template-url","windowTemplateUrl","window-top-class","role","aria-labelledby","ariaLabelledBy","aria-describedby","ariaDescribedBy","animate","tabindex","windowClass","$$topModalIndex","$$uibDestructionScheduled","reason","reject","dismissAll","topModal","srcElement","modalDomE1","elements","querySelectorAll","Array","$modalProvider","$controller","$uibResolve","getTemplatePromise","$modal","promiseChain","getPromiseChain","resolveWithTemplate","templateAndResolvePromise","modalResultDeferred","modalOpenedDeferred","modalClosedDeferred","modalRenderDeferred","closed","rendered","eq","samePromise","tplAndVars","constructLocals","instanceOnScope","injectable","$scope","$resolve","$uibModalInstance","providedScope","$close","$dismiss","ctrlInstance","ctrlInstantiate","ctrlLocals","bindToController","$onInit","carousel_run_1","assertArg","arg","ngMinErr","mergeClasses","b","packageStyles","to","from","pendClasses","classes","fix","isPrefix","className","klass","removeFromArray","arr","stripCommentsFromElement","jqLite","nodeType","ELEMENT_NODE","extractElementNode","elm","$$addClass","$$jqLite","$$removeClass","applyAnimationClassesFactory","prepareAnimationOptions","$$prepared","domOperation","$$domOperationFired","applyAnimationStyles","applyAnimationFromStyles","applyAnimationToStyles","mergeAnimationDetails","oldAnimation","newAnimation","newOptions","toAdd","toRemove","resolveElementClasses","preparationClasses","concatWithSpace","realDomOperation","existing","splitClassesToLookup","ADD_CLASS","REMOVE_CLASS","flags","allow","getDomNode","applyGeneratedPreparationClasses","EVENT_CLASS_PREFIX","ADD_CLASS_SUFFIX","REMOVE_CLASS_SUFFIX","clearGeneratedClasses","activeClasses","blockTransitions","node","duration","applyInlineStyle","TRANSITION_DELAY_PROP","blockKeyframeAnimations","applyBlock","ANIMATION_PROP","ANIMATION_PLAYSTATE_KEY","styleTuple","style","getCssKeyframeDurationStyle","ANIMATION_DURATION_PROP","getCssDelayStyle","isKeyframeAnimation","ANIMATION_DELAY_PROP","computeCssStyles","properties","create","detectedStyles","formalStyleName","actualStyleName","charAt","parseMaxTime","str","maxValue","substring","max","truthyTimingValue","getCssTransitionDurationStyle","applyOnlyDuration","TRANSITION_PROP","DURATION_KEY","createLocalCacheLookup","cache","flush","count","entry","total","registerRestorableStyles","backup","getPropertyValue","TRANSITIONEND_EVENT","ANIMATIONEND_EVENT","copy","isElement","ACTIVE_CLASS_SUFFIX","PREPARE_CLASS_SUFFIX","NG_ANIMATE_CLASSNAME","NG_ANIMATE_CHILDREN_DATA","CSS_PREFIX","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","PROPERTY_KEY","DELAY_KEY","TIMING_KEY","ANIMATION_ITERATION_COUNT_KEY","SAFE_FAST_FORWARD_DURATION_VALUE","TRANSITION_DURATION_PROP","$$minErr","$$rAFSchedulerFactory","$$rAF","scheduler","tasks","queue","concat","nextTick","items","shift","cancelFn","waitUntilQuiet","$$AnimateChildrenDirective","setData","data","ngAnimateChildren","ANIMATE_TIMER_KEY","ONE_SECOND","ELAPSED_TIME_MAX_DECIMAL_PLACES","CLOSING_TIME_BUFFER","DETECT_CSS_PROPERTIES","transitionDuration","transitionDelay","transitionProperty","animationDuration","animationDelay","animationIterationCount","DETECT_STAGGER_CSS_PROPERTIES","$AnimateCssProvider","$animateProvider","gcsLookup","gcsStaggerLookup","$$AnimateRunner","$$forceReflow","$sniffer","$$rAFScheduler","$$animateQueue","gcsHashFn","extraClasses","KEY","parentID","parentCounter","getAttribute","computeCachedCssStyles","cacheKey","timings","computeCachedCssStaggerStyles","stagger","staggerClassName","callback","rafWaitQueue","pageWidth","computeTimings","aD","tD","maxDelay","maxDuration","applyAnimationClasses","initialOptions","endFn","rejected","animationClosed","animationCompleted","animationPaused","$$skipPreparationClasses","temporaryStyles","restoreStyles","setProperty","removeProperty","onDone","events","onAnimationProgress","animationTimerData","timer","removeData","runner","complete","applyBlocking","blockTransition","blockKeyframeAnimation","closeAndReturnNoopAnimator","end","$$willAnimate","ev","originalEvent","timeStamp","$manualTimeStamp","Date","now","elapsedTime","toFixed","startTime","maxDelayTime","triggerAnimationStart","recalculateTimingStyles","fullClassName","relativeDelay","hasTransitions","hasAnimations","applyAnimationDelay","delayStyle","maxDurationTime","easing","easeProp","easeVal","timerTime","endTime","animationsData","setupFallbackTimer","currentTimerData","expectedEndTime","onAnimationExpired","cleanupStyles","playPause","playAnimation","maxStagger","itemIndex","floor","runnerHost","resume","pause","enabled","animations","transitions","method","isStructural","structural","structuralClassName","addRemoveClassName","applyClassesEarly","trim","hasToStyles","containsKeyframeAnimation","keyframeStyle","staggerVal","transitionStyle","durationStyle","staggerIndex","isFirst","skipBlocking","hasTransitionAll","applyTransitionDuration","applyAnimationDuration","applyTransitionDelay","$$AnimateCssDriverProvider","$$animationProvider","isDocumentFragment","drivers","NG_ANIMATE_SHIM_CLASS_NAME","NG_ANIMATE_ANCHOR_CLASS_NAME","NG_OUT_ANCHOR_CLASS_NAME","NG_IN_ANCHOR_CLASS_NAME","$rootElement","filterCssClasses","getUniqueValues","prepareAnchoredAnimation","outAnchor","inAnchor","calculateAnchorStyles","anchor","coords","bodyNode","prepareOutAnimation","animator","getClassVal","prepareInAnimation","endingClasses","startingClasses","cloneNode","rootBodyElement","animatorIn","animatorOut","startingAnimator","currentAnimation","prepareFromToAnchorAnimation","anchors","fromAnimation","prepareRegularAnimation","toAnimation","anchorAnimations","outElement","inElement","animationRunners","status","animationDetails","body","rootNode","$$AnimateJsProvider","lookupAnimations","matches","flagMap","animationFactory","$$registeredAnimations","applyOptions","executeAnimationFn","args","classesToAdd","classesToRemove","groupEventedAnimations","fnName","operations","ani","endProgressCb","resolved","onAnimationComplete","cancelled","packageAnimations","runners","animateFn","before","afterFn","beforeFn","toUpperCase","substr","onComplete","success","endAnimations","closeActiveAnimations","chain","setHost","$$AnimateJsDriverProvider","$$animateJs","prepareAnimation","endFnFactory","NG_ANIMATE_ATTR_NAME","NG_ANIMATE_PIN_DATA","$$AnimateQueueProvider","makeTruthyCssClassMap","classString","ONE_SPACE","hasMatchingClasses","newClassString","currentClassString","currentClassMap","some","isAllowed","ruleType","previousAnimation","rules","hasAnimationClasses","and","PRE_DIGEST_STATE","RUNNING_STATE","skip","state","nA","nR","cA","cR","$$HashMap","$$animation","postDigestTaskFactory","postDigestCalled","normalizeAnimationDetails","findCallbacks","targetNode","targetParentNode","callbackRegistry","filterFromRegistry","matchContainer","matchCallback","containerNode","isMatch","cleanupEventListeners","phase","queueAnimation","notifyProgress","runInNextPostDigestOrNow","callbacks","progress","isAnimatableClassName","documentHidden","skipAnimations","animationsEnabled","disabledElementsLookup","existingAnimation","activeAnimationsLookup","hasExistingAnimation","areAnimationsAllowed","closeChildAnimations","skipAnimationFlag","cancelAnimationFlag","joinAnimationFlag","isValidAnimation","clearElementAnimationState","counter","markElementAnimationState","animationCancelled","realRunner","children","child","removeAttribute","isMatchingElement","nodeOrElmA","nodeOrElmB","animateChildren","bodyElement","bodyElementDetected","rootElementDetected","parentAnimationDetected","elementDisabled","parentHost","details","parentElementDisabled","allowAnimation","oldValue","newValue","deregisterWatch","totalPendingRequests","isEmpty","classNameFilter","Node","compareDocumentPosition","container","eventType","pin","bool","argCount","hasElement","recordExists","$$AnimationProvider","setRunner","RUNNER_STORAGE_KEY","removeRunner","getRunner","NG_ANIMATE_REF_ATTR","sortAnimations","processNode","processed","elementNode","domNode","lookup","parentEntry","tree","flatten","remainingLevelEntries","nextLevelEntries","row","childEntry","animationQueue","getAnchorNodes","SELECTOR","hasAttribute","groupAnimations","preparedAnimations","refLookup","enterOrMove","anchorNodes","direction","animationID","usedIndicesLookup","anchorGroups","indexKey","lookupKey","group","beforeStart","cssClassesIntersection","out","in","aa","invokeFirstDriver","driverName","has","driver","tempClasses","prepareClassName","updateAnimationRunners","newRunner","handleDestroyedElement","groupedAnimations","toBeSortedAnimations","animationEntry","startAnimationFn","closeFn","targetElement","operation","animationRunner","ngAnimateSwapDirective","terminal","priority","$element","ctrl","$transclude","previousScope","$watchCollection","ngAnimateSwap","$interval","clearBufferedTransitions","bufferedTransitions","setActive","slides","slide","active","goNext","destroyed","currentIndex","$currentTransition","SLIDE_DIRECTION","currentIdx","getCurrentIndex","nextSlide","nextIndex","nextDirection","restartTimer","findSlideIndex","resetTimer","currentInterval","resetTransition","interval","timerFn","isPlaying","next","addSlide","sort","select","play","newIndex","noWrap","prev","removeSlide","bufferedIndex","indexOfSlide","isPrevDisabled","isNextDisabled","noPause","noTransition","actual","carouselCtrl","beforeAddClass","stopped","directionClass","removeClassFn","beforeRemoveClass","timestamp_component_1","timestampComponent","timestamp_controller_1","TimestampController","bindings","date","format","timezone","moment","momentTz","initParams","formatDate","$onChanges","toISOString","tz","formattedDate","timestampsRange_component_1","timestampsRangeComponent","timestampsRange_controller_1","TimestampsRangeController","DATE_FORMAT","TIME_FORMAT","SHORT_TIME_FORMAT","dateFormat","processDates","startMoment","endMoment","isSameDate","isSame","startTimeFormat","getTimeFormat","endTimeFormat","minutes"],"mappings":"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","file":"dd-ui.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"moment\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\"), require(\"moment\")) : factory(root[\"angular\"], root[\"moment\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_86__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"moment\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"moment\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\"), require(\"moment\")) : factory(root[\"angular\"], root[\"moment\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_30__, __WEBPACK_EXTERNAL_MODULE_86__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(29);\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tupdate(obj);\r\n\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\t\tvar oldSrc = linkElement.href;\r\n\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 27 */,\n/* 28 */,\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\tvar directives_module_1 = __webpack_require__(31);\n\tvar tooltip_module_1 = __webpack_require__(37);\n\tvar toggleButtons_module_1 = __webpack_require__(58);\n\tvar modal_module_1 = __webpack_require__(61);\n\tvar carousel_module_1 = __webpack_require__(70);\n\tvar timestamp_module_1 = __webpack_require__(83);\n\tvar timestampsRange_module_1 = __webpack_require__(88);\n\tvar module = angular.module('dd-ui', [\n\t    tooltip_module_1.default,\n\t    toggleButtons_module_1.default,\n\t    modal_module_1.default,\n\t    carousel_module_1.default,\n\t    timestamp_module_1.default,\n\t    timestampsRange_module_1.default,\n\t    directives_module_1.default\n\t]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t__webpack_require__(32);\n\tvar limit_1 = __webpack_require__(34);\n\tvar checkbox_directive_1 = __webpack_require__(35);\n\tvar module = angular.module('directives', []);\n\tmodule.directive('textLimit', limit_1.InputLimit.instance());\n\tmodule.directive('checkbox', checkbox_directive_1.default);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(33);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./directives.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./directives.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".text-limit-wrapper{position:relative}.limit-indicator{position:absolute;right:0;bottom:3px;color:#71bf44}textarea+.limit-indicator{bottom:10px;right:15px}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar InputLimit = (function () {\n\t    function InputLimit($compile, $timeout) {\n\t        var _this = this;\n\t        this.$compile = $compile;\n\t        this.$timeout = $timeout;\n\t        this.restrict = 'A';\n\t        this.scope = {\n\t            ngModel: '<'\n\t        };\n\t        this.link = function (scope, element, attrs) {\n\t            var indicator = _this.$compile(\"<span class='limit-indicator' ng-bind=\\\"textLimit\\\"></span>\")(scope);\n\t            var self = _this;\n\t            scope.textLimit = attrs.textLimit;\n\t            element.parent('div').addClass('dd__limit');\n\t            element.after(indicator);\n\t            self.countText(scope, element, attrs.textLimit);\n\t            element.bind('keyup cut change paste', function (event) {\n\t                setTimeout(function () {\n\t                    self.countText(scope, element, attrs.textLimit);\n\t                });\n\t            });\n\t        };\n\t    }\n\t    InputLimit.instance = function () {\n\t        var directive = function ($compile, $timeout) { return new InputLimit($compile, $timeout); };\n\t        directive.$inject = ['$compile', '$timeout'];\n\t        return directive;\n\t    };\n\t    InputLimit.prototype.countText = function (scope, element, textLimit) {\n\t        this.$timeout(function () {\n\t            var value;\n\t            var modelText = scope.ngModel || element.val();\n\t            if (!modelText) {\n\t                value = 0;\n\t            }\n\t            else {\n\t                value = modelText.length;\n\t            }\n\t            element.attr('maxlength', textLimit);\n\t            scope.textLimit = textLimit - value;\n\t        }, 0);\n\t    };\n\t    return InputLimit;\n\t}());\n\texports.InputLimit = InputLimit;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = function () {\n\t    return {\n\t        restrict: 'E',\n\t        require: 'ngModel',\n\t        replace: true,\n\t        transclude: true,\n\t        template: __webpack_require__(36),\n\t        scope: {\n\t            ngModel: '='\n\t        },\n\t        link: function (scope, element, attrs, model) {\n\t            model.$formatters.unshift(function (value) {\n\t                scope.isChecked = value === true;\n\t                return value;\n\t            });\n\t            scope.toggle = function () {\n\t                scope.isChecked = !scope.isChecked;\n\t                model.$setViewValue(scope.isChecked);\n\t            };\n\t        }\n\t    };\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"dd__checkbox-wrapper\\\">\\n\\t<div class=\\\"dd__checkbox\\\" ng-class=\\\"{'checked': isChecked}\\\" ng-click=\\\"toggle()\\\">\\n\\t\\t<div class=\\\"checkbox__body\\\"></div>\\n\\t\\t<div class=\\\"checkbox__label\\\" ng-transclude></div>\\n\\t</div>\\n</div>\"\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\t__webpack_require__(38);\n\t__webpack_require__(52);\n\t__webpack_require__(54);\n\tvar tooltip_run_1 = __webpack_require__(56);\n\tvar tooltip_config_1 = __webpack_require__(57);\n\tvar module = angular.module('ep.tooltip', [\n\t    'ngSanitize',\n\t    'ui.bootstrap.popover'\n\t]);\n\tmodule.run(tooltip_run_1.default);\n\tmodule.config(tooltip_config_1.default);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(39);\n\t__webpack_require__(48);\n\t__webpack_require__(49);\n\t__webpack_require__(50);\n\t__webpack_require__(51);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.popover';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.popover', 'uib/template/popover/popover.html', 'uib/template/popover/popover-html.html', 'uib/template/popover/popover-template.html']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(40);\n\t__webpack_require__(42);\n\t__webpack_require__(44);\n\t__webpack_require__(45);\n\t__webpack_require__(46);\n\t__webpack_require__(47);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.tooltip';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.tooltip', 'uib/template/tooltip/tooltip-popup.html', 'uib/template/tooltip/tooltip-html-popup.html', 'uib/template/tooltip/tooltip-template-popup.html']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(41);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.position';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.position']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\tangular.module('ui.bootstrap.position', [])\n\n\t/**\n\t * A set of utility methods for working with the DOM.\n\t * It is meant to be used where we need to absolute-position elements in\n\t * relation to another element (this is the case for tooltips, popovers,\n\t * typeahead suggestions etc.).\n\t */\n\t  .factory('$uibPosition', ['$document', '$window', function($document, $window) {\n\t    /**\n\t     * Used by scrollbarWidth() function to cache scrollbar's width.\n\t     * Do not access this variable directly, use scrollbarWidth() instead.\n\t     */\n\t    var SCROLLBAR_WIDTH;\n\t    /**\n\t     * scrollbar on body and html element in IE and Edge overlay\n\t     * content and should be considered 0 width.\n\t     */\n\t    var BODY_SCROLLBAR_WIDTH;\n\t    var OVERFLOW_REGEX = {\n\t      normal: /(auto|scroll)/,\n\t      hidden: /(auto|scroll|hidden)/\n\t    };\n\t    var PLACEMENT_REGEX = {\n\t      auto: /\\s?auto?\\s?/i,\n\t      primary: /^(top|bottom|left|right)$/,\n\t      secondary: /^(top|bottom|left|right|center)$/,\n\t      vertical: /^(top|bottom)$/\n\t    };\n\t    var BODY_REGEX = /(HTML|BODY)/;\n\n\t    return {\n\n\t      /**\n\t       * Provides a raw DOM element from a jQuery/jQLite element.\n\t       *\n\t       * @param {element} elem - The element to convert.\n\t       *\n\t       * @returns {element} A HTML element.\n\t       */\n\t      getRawNode: function(elem) {\n\t        return elem.nodeName ? elem : elem[0] || elem;\n\t      },\n\n\t      /**\n\t       * Provides a parsed number for a style property.  Strips\n\t       * units and casts invalid numbers to 0.\n\t       *\n\t       * @param {string} value - The style value to parse.\n\t       *\n\t       * @returns {number} A valid number.\n\t       */\n\t      parseStyle: function(value) {\n\t        value = parseFloat(value);\n\t        return isFinite(value) ? value : 0;\n\t      },\n\n\t      /**\n\t       * Provides the closest positioned ancestor.\n\t       *\n\t       * @param {element} element - The element to get the offest parent for.\n\t       *\n\t       * @returns {element} The closest positioned ancestor.\n\t       */\n\t      offsetParent: function(elem) {\n\t        elem = this.getRawNode(elem);\n\n\t        var offsetParent = elem.offsetParent || $document[0].documentElement;\n\n\t        function isStaticPositioned(el) {\n\t          return ($window.getComputedStyle(el).position || 'static') === 'static';\n\t        }\n\n\t        while (offsetParent && offsetParent !== $document[0].documentElement && isStaticPositioned(offsetParent)) {\n\t          offsetParent = offsetParent.offsetParent;\n\t        }\n\n\t        return offsetParent || $document[0].documentElement;\n\t      },\n\n\t      /**\n\t       * Provides the scrollbar width, concept from TWBS measureScrollbar()\n\t       * function in https://github.com/twbs/bootstrap/blob/master/js/modal.js\n\t       * In IE and Edge, scollbar on body and html element overlay and should\n\t       * return a width of 0.\n\t       *\n\t       * @returns {number} The width of the browser scollbar.\n\t       */\n\t      scrollbarWidth: function(isBody) {\n\t        if (isBody) {\n\t          if (angular.isUndefined(BODY_SCROLLBAR_WIDTH)) {\n\t            var bodyElem = $document.find('body');\n\t            bodyElem.addClass('uib-position-body-scrollbar-measure');\n\t            BODY_SCROLLBAR_WIDTH = $window.innerWidth - bodyElem[0].clientWidth;\n\t            BODY_SCROLLBAR_WIDTH = isFinite(BODY_SCROLLBAR_WIDTH) ? BODY_SCROLLBAR_WIDTH : 0;\n\t            bodyElem.removeClass('uib-position-body-scrollbar-measure');\n\t          }\n\t          return BODY_SCROLLBAR_WIDTH;\n\t        }\n\n\t        if (angular.isUndefined(SCROLLBAR_WIDTH)) {\n\t          var scrollElem = angular.element('<div class=\"uib-position-scrollbar-measure\"></div>');\n\t          $document.find('body').append(scrollElem);\n\t          SCROLLBAR_WIDTH = scrollElem[0].offsetWidth - scrollElem[0].clientWidth;\n\t          SCROLLBAR_WIDTH = isFinite(SCROLLBAR_WIDTH) ? SCROLLBAR_WIDTH : 0;\n\t          scrollElem.remove();\n\t        }\n\n\t        return SCROLLBAR_WIDTH;\n\t      },\n\n\t      /**\n\t       * Provides the padding required on an element to replace the scrollbar.\n\t       *\n\t       * @returns {object} An object with the following properties:\n\t       *   <ul>\n\t       *     <li>**scrollbarWidth**: the width of the scrollbar</li>\n\t       *     <li>**widthOverflow**: whether the the width is overflowing</li>\n\t       *     <li>**right**: the amount of right padding on the element needed to replace the scrollbar</li>\n\t       *     <li>**rightOriginal**: the amount of right padding currently on the element</li>\n\t       *     <li>**heightOverflow**: whether the the height is overflowing</li>\n\t       *     <li>**bottom**: the amount of bottom padding on the element needed to replace the scrollbar</li>\n\t       *     <li>**bottomOriginal**: the amount of bottom padding currently on the element</li>\n\t       *   </ul>\n\t       */\n\t      scrollbarPadding: function(elem) {\n\t        elem = this.getRawNode(elem);\n\n\t        var elemStyle = $window.getComputedStyle(elem);\n\t        var paddingRight = this.parseStyle(elemStyle.paddingRight);\n\t        var paddingBottom = this.parseStyle(elemStyle.paddingBottom);\n\t        var scrollParent = this.scrollParent(elem, false, true);\n\t        var scrollbarWidth = this.scrollbarWidth(scrollParent, BODY_REGEX.test(scrollParent.tagName));\n\n\t        return {\n\t          scrollbarWidth: scrollbarWidth,\n\t          widthOverflow: scrollParent.scrollWidth > scrollParent.clientWidth,\n\t          right: paddingRight + scrollbarWidth,\n\t          originalRight: paddingRight,\n\t          heightOverflow: scrollParent.scrollHeight > scrollParent.clientHeight,\n\t          bottom: paddingBottom + scrollbarWidth,\n\t          originalBottom: paddingBottom\n\t         };\n\t      },\n\n\t      /**\n\t       * Checks to see if the element is scrollable.\n\t       *\n\t       * @param {element} elem - The element to check.\n\t       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\n\t       *   default is false.\n\t       *\n\t       * @returns {boolean} Whether the element is scrollable.\n\t       */\n\t      isScrollable: function(elem, includeHidden) {\n\t        elem = this.getRawNode(elem);\n\n\t        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\n\t        var elemStyle = $window.getComputedStyle(elem);\n\t        return overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX);\n\t      },\n\n\t      /**\n\t       * Provides the closest scrollable ancestor.\n\t       * A port of the jQuery UI scrollParent method:\n\t       * https://github.com/jquery/jquery-ui/blob/master/ui/scroll-parent.js\n\t       *\n\t       * @param {element} elem - The element to find the scroll parent of.\n\t       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\n\t       *   default is false.\n\t       * @param {boolean=} [includeSelf=false] - Should the element being passed be\n\t       * included in the scrollable llokup.\n\t       *\n\t       * @returns {element} A HTML element.\n\t       */\n\t      scrollParent: function(elem, includeHidden, includeSelf) {\n\t        elem = this.getRawNode(elem);\n\n\t        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\n\t        var documentEl = $document[0].documentElement;\n\t        var elemStyle = $window.getComputedStyle(elem);\n\t        if (includeSelf && overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX)) {\n\t          return elem;\n\t        }\n\t        var excludeStatic = elemStyle.position === 'absolute';\n\t        var scrollParent = elem.parentElement || documentEl;\n\n\t        if (scrollParent === documentEl || elemStyle.position === 'fixed') {\n\t          return documentEl;\n\t        }\n\n\t        while (scrollParent.parentElement && scrollParent !== documentEl) {\n\t          var spStyle = $window.getComputedStyle(scrollParent);\n\t          if (excludeStatic && spStyle.position !== 'static') {\n\t            excludeStatic = false;\n\t          }\n\n\t          if (!excludeStatic && overflowRegex.test(spStyle.overflow + spStyle.overflowY + spStyle.overflowX)) {\n\t            break;\n\t          }\n\t          scrollParent = scrollParent.parentElement;\n\t        }\n\n\t        return scrollParent;\n\t      },\n\n\t      /**\n\t       * Provides read-only equivalent of jQuery's position function:\n\t       * http://api.jquery.com/position/ - distance to closest positioned\n\t       * ancestor.  Does not account for margins by default like jQuery position.\n\t       *\n\t       * @param {element} elem - The element to caclulate the position on.\n\t       * @param {boolean=} [includeMargins=false] - Should margins be accounted\n\t       * for, default is false.\n\t       *\n\t       * @returns {object} An object with the following properties:\n\t       *   <ul>\n\t       *     <li>**width**: the width of the element</li>\n\t       *     <li>**height**: the height of the element</li>\n\t       *     <li>**top**: distance to top edge of offset parent</li>\n\t       *     <li>**left**: distance to left edge of offset parent</li>\n\t       *   </ul>\n\t       */\n\t      position: function(elem, includeMagins) {\n\t        elem = this.getRawNode(elem);\n\n\t        var elemOffset = this.offset(elem);\n\t        if (includeMagins) {\n\t          var elemStyle = $window.getComputedStyle(elem);\n\t          elemOffset.top -= this.parseStyle(elemStyle.marginTop);\n\t          elemOffset.left -= this.parseStyle(elemStyle.marginLeft);\n\t        }\n\t        var parent = this.offsetParent(elem);\n\t        var parentOffset = {top: 0, left: 0};\n\n\t        if (parent !== $document[0].documentElement) {\n\t          parentOffset = this.offset(parent);\n\t          parentOffset.top += parent.clientTop - parent.scrollTop;\n\t          parentOffset.left += parent.clientLeft - parent.scrollLeft;\n\t        }\n\n\t        return {\n\t          width: Math.round(angular.isNumber(elemOffset.width) ? elemOffset.width : elem.offsetWidth),\n\t          height: Math.round(angular.isNumber(elemOffset.height) ? elemOffset.height : elem.offsetHeight),\n\t          top: Math.round(elemOffset.top - parentOffset.top),\n\t          left: Math.round(elemOffset.left - parentOffset.left)\n\t        };\n\t      },\n\n\t      /**\n\t       * Provides read-only equivalent of jQuery's offset function:\n\t       * http://api.jquery.com/offset/ - distance to viewport.  Does\n\t       * not account for borders, margins, or padding on the body\n\t       * element.\n\t       *\n\t       * @param {element} elem - The element to calculate the offset on.\n\t       *\n\t       * @returns {object} An object with the following properties:\n\t       *   <ul>\n\t       *     <li>**width**: the width of the element</li>\n\t       *     <li>**height**: the height of the element</li>\n\t       *     <li>**top**: distance to top edge of viewport</li>\n\t       *     <li>**right**: distance to bottom edge of viewport</li>\n\t       *   </ul>\n\t       */\n\t      offset: function(elem) {\n\t        elem = this.getRawNode(elem);\n\n\t        var elemBCR = elem.getBoundingClientRect();\n\t        return {\n\t          width: Math.round(angular.isNumber(elemBCR.width) ? elemBCR.width : elem.offsetWidth),\n\t          height: Math.round(angular.isNumber(elemBCR.height) ? elemBCR.height : elem.offsetHeight),\n\t          top: Math.round(elemBCR.top + ($window.pageYOffset || $document[0].documentElement.scrollTop)),\n\t          left: Math.round(elemBCR.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft))\n\t        };\n\t      },\n\n\t      /**\n\t       * Provides offset distance to the closest scrollable ancestor\n\t       * or viewport.  Accounts for border and scrollbar width.\n\t       *\n\t       * Right and bottom dimensions represent the distance to the\n\t       * respective edge of the viewport element.  If the element\n\t       * edge extends beyond the viewport, a negative value will be\n\t       * reported.\n\t       *\n\t       * @param {element} elem - The element to get the viewport offset for.\n\t       * @param {boolean=} [useDocument=false] - Should the viewport be the document element instead\n\t       * of the first scrollable element, default is false.\n\t       * @param {boolean=} [includePadding=true] - Should the padding on the offset parent element\n\t       * be accounted for, default is true.\n\t       *\n\t       * @returns {object} An object with the following properties:\n\t       *   <ul>\n\t       *     <li>**top**: distance to the top content edge of viewport element</li>\n\t       *     <li>**bottom**: distance to the bottom content edge of viewport element</li>\n\t       *     <li>**left**: distance to the left content edge of viewport element</li>\n\t       *     <li>**right**: distance to the right content edge of viewport element</li>\n\t       *   </ul>\n\t       */\n\t      viewportOffset: function(elem, useDocument, includePadding) {\n\t        elem = this.getRawNode(elem);\n\t        includePadding = includePadding !== false ? true : false;\n\n\t        var elemBCR = elem.getBoundingClientRect();\n\t        var offsetBCR = {top: 0, left: 0, bottom: 0, right: 0};\n\n\t        var offsetParent = useDocument ? $document[0].documentElement : this.scrollParent(elem);\n\t        var offsetParentBCR = offsetParent.getBoundingClientRect();\n\n\t        offsetBCR.top = offsetParentBCR.top + offsetParent.clientTop;\n\t        offsetBCR.left = offsetParentBCR.left + offsetParent.clientLeft;\n\t        if (offsetParent === $document[0].documentElement) {\n\t          offsetBCR.top += $window.pageYOffset;\n\t          offsetBCR.left += $window.pageXOffset;\n\t        }\n\t        offsetBCR.bottom = offsetBCR.top + offsetParent.clientHeight;\n\t        offsetBCR.right = offsetBCR.left + offsetParent.clientWidth;\n\n\t        if (includePadding) {\n\t          var offsetParentStyle = $window.getComputedStyle(offsetParent);\n\t          offsetBCR.top += this.parseStyle(offsetParentStyle.paddingTop);\n\t          offsetBCR.bottom -= this.parseStyle(offsetParentStyle.paddingBottom);\n\t          offsetBCR.left += this.parseStyle(offsetParentStyle.paddingLeft);\n\t          offsetBCR.right -= this.parseStyle(offsetParentStyle.paddingRight);\n\t        }\n\n\t        return {\n\t          top: Math.round(elemBCR.top - offsetBCR.top),\n\t          bottom: Math.round(offsetBCR.bottom - elemBCR.bottom),\n\t          left: Math.round(elemBCR.left - offsetBCR.left),\n\t          right: Math.round(offsetBCR.right - elemBCR.right)\n\t        };\n\t      },\n\n\t      /**\n\t       * Provides an array of placement values parsed from a placement string.\n\t       * Along with the 'auto' indicator, supported placement strings are:\n\t       *   <ul>\n\t       *     <li>top: element on top, horizontally centered on host element.</li>\n\t       *     <li>top-left: element on top, left edge aligned with host element left edge.</li>\n\t       *     <li>top-right: element on top, lerightft edge aligned with host element right edge.</li>\n\t       *     <li>bottom: element on bottom, horizontally centered on host element.</li>\n\t       *     <li>bottom-left: element on bottom, left edge aligned with host element left edge.</li>\n\t       *     <li>bottom-right: element on bottom, right edge aligned with host element right edge.</li>\n\t       *     <li>left: element on left, vertically centered on host element.</li>\n\t       *     <li>left-top: element on left, top edge aligned with host element top edge.</li>\n\t       *     <li>left-bottom: element on left, bottom edge aligned with host element bottom edge.</li>\n\t       *     <li>right: element on right, vertically centered on host element.</li>\n\t       *     <li>right-top: element on right, top edge aligned with host element top edge.</li>\n\t       *     <li>right-bottom: element on right, bottom edge aligned with host element bottom edge.</li>\n\t       *   </ul>\n\t       * A placement string with an 'auto' indicator is expected to be\n\t       * space separated from the placement, i.e: 'auto bottom-left'  If\n\t       * the primary and secondary placement values do not match 'top,\n\t       * bottom, left, right' then 'top' will be the primary placement and\n\t       * 'center' will be the secondary placement.  If 'auto' is passed, true\n\t       * will be returned as the 3rd value of the array.\n\t       *\n\t       * @param {string} placement - The placement string to parse.\n\t       *\n\t       * @returns {array} An array with the following values\n\t       * <ul>\n\t       *   <li>**[0]**: The primary placement.</li>\n\t       *   <li>**[1]**: The secondary placement.</li>\n\t       *   <li>**[2]**: If auto is passed: true, else undefined.</li>\n\t       * </ul>\n\t       */\n\t      parsePlacement: function(placement) {\n\t        var autoPlace = PLACEMENT_REGEX.auto.test(placement);\n\t        if (autoPlace) {\n\t          placement = placement.replace(PLACEMENT_REGEX.auto, '');\n\t        }\n\n\t        placement = placement.split('-');\n\n\t        placement[0] = placement[0] || 'top';\n\t        if (!PLACEMENT_REGEX.primary.test(placement[0])) {\n\t          placement[0] = 'top';\n\t        }\n\n\t        placement[1] = placement[1] || 'center';\n\t        if (!PLACEMENT_REGEX.secondary.test(placement[1])) {\n\t          placement[1] = 'center';\n\t        }\n\n\t        if (autoPlace) {\n\t          placement[2] = true;\n\t        } else {\n\t          placement[2] = false;\n\t        }\n\n\t        return placement;\n\t      },\n\n\t      /**\n\t       * Provides coordinates for an element to be positioned relative to\n\t       * another element.  Passing 'auto' as part of the placement parameter\n\t       * will enable smart placement - where the element fits. i.e:\n\t       * 'auto left-top' will check to see if there is enough space to the left\n\t       * of the hostElem to fit the targetElem, if not place right (same for secondary\n\t       * top placement).  Available space is calculated using the viewportOffset\n\t       * function.\n\t       *\n\t       * @param {element} hostElem - The element to position against.\n\t       * @param {element} targetElem - The element to position.\n\t       * @param {string=} [placement=top] - The placement for the targetElem,\n\t       *   default is 'top'. 'center' is assumed as secondary placement for\n\t       *   'top', 'left', 'right', and 'bottom' placements.  Available placements are:\n\t       *   <ul>\n\t       *     <li>top</li>\n\t       *     <li>top-right</li>\n\t       *     <li>top-left</li>\n\t       *     <li>bottom</li>\n\t       *     <li>bottom-left</li>\n\t       *     <li>bottom-right</li>\n\t       *     <li>left</li>\n\t       *     <li>left-top</li>\n\t       *     <li>left-bottom</li>\n\t       *     <li>right</li>\n\t       *     <li>right-top</li>\n\t       *     <li>right-bottom</li>\n\t       *   </ul>\n\t       * @param {boolean=} [appendToBody=false] - Should the top and left values returned\n\t       *   be calculated from the body element, default is false.\n\t       *\n\t       * @returns {object} An object with the following properties:\n\t       *   <ul>\n\t       *     <li>**top**: Value for targetElem top.</li>\n\t       *     <li>**left**: Value for targetElem left.</li>\n\t       *     <li>**placement**: The resolved placement.</li>\n\t       *   </ul>\n\t       */\n\t      positionElements: function(hostElem, targetElem, placement, appendToBody) {\n\t        hostElem = this.getRawNode(hostElem);\n\t        targetElem = this.getRawNode(targetElem);\n\n\t        // need to read from prop to support tests.\n\t        var targetWidth = angular.isDefined(targetElem.offsetWidth) ? targetElem.offsetWidth : targetElem.prop('offsetWidth');\n\t        var targetHeight = angular.isDefined(targetElem.offsetHeight) ? targetElem.offsetHeight : targetElem.prop('offsetHeight');\n\n\t        placement = this.parsePlacement(placement);\n\n\t        var hostElemPos = appendToBody ? this.offset(hostElem) : this.position(hostElem);\n\t        var targetElemPos = {top: 0, left: 0, placement: ''};\n\n\t        if (placement[2]) {\n\t          var viewportOffset = this.viewportOffset(hostElem, appendToBody);\n\n\t          var targetElemStyle = $window.getComputedStyle(targetElem);\n\t          var adjustedSize = {\n\t            width: targetWidth + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginLeft) + this.parseStyle(targetElemStyle.marginRight))),\n\t            height: targetHeight + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginTop) + this.parseStyle(targetElemStyle.marginBottom)))\n\t          };\n\n\t          placement[0] = placement[0] === 'top' && adjustedSize.height > viewportOffset.top && adjustedSize.height <= viewportOffset.bottom ? 'bottom' :\n\t                         placement[0] === 'bottom' && adjustedSize.height > viewportOffset.bottom && adjustedSize.height <= viewportOffset.top ? 'top' :\n\t                         placement[0] === 'left' && adjustedSize.width > viewportOffset.left && adjustedSize.width <= viewportOffset.right ? 'right' :\n\t                         placement[0] === 'right' && adjustedSize.width > viewportOffset.right && adjustedSize.width <= viewportOffset.left ? 'left' :\n\t                         placement[0];\n\n\t          placement[1] = placement[1] === 'top' && adjustedSize.height - hostElemPos.height > viewportOffset.bottom && adjustedSize.height - hostElemPos.height <= viewportOffset.top ? 'bottom' :\n\t                         placement[1] === 'bottom' && adjustedSize.height - hostElemPos.height > viewportOffset.top && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom ? 'top' :\n\t                         placement[1] === 'left' && adjustedSize.width - hostElemPos.width > viewportOffset.right && adjustedSize.width - hostElemPos.width <= viewportOffset.left ? 'right' :\n\t                         placement[1] === 'right' && adjustedSize.width - hostElemPos.width > viewportOffset.left && adjustedSize.width - hostElemPos.width <= viewportOffset.right ? 'left' :\n\t                         placement[1];\n\n\t          if (placement[1] === 'center') {\n\t            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n\t              var xOverflow = hostElemPos.width / 2 - targetWidth / 2;\n\t              if (viewportOffset.left + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.right) {\n\t                placement[1] = 'left';\n\t              } else if (viewportOffset.right + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.left) {\n\t                placement[1] = 'right';\n\t              }\n\t            } else {\n\t              var yOverflow = hostElemPos.height / 2 - adjustedSize.height / 2;\n\t              if (viewportOffset.top + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom) {\n\t                placement[1] = 'top';\n\t              } else if (viewportOffset.bottom + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.top) {\n\t                placement[1] = 'bottom';\n\t              }\n\t            }\n\t          }\n\t        }\n\n\t        switch (placement[0]) {\n\t          case 'top':\n\t            targetElemPos.top = hostElemPos.top - targetHeight;\n\t            break;\n\t          case 'bottom':\n\t            targetElemPos.top = hostElemPos.top + hostElemPos.height;\n\t            break;\n\t          case 'left':\n\t            targetElemPos.left = hostElemPos.left - targetWidth;\n\t            break;\n\t          case 'right':\n\t            targetElemPos.left = hostElemPos.left + hostElemPos.width;\n\t            break;\n\t        }\n\n\t        switch (placement[1]) {\n\t          case 'top':\n\t            targetElemPos.top = hostElemPos.top;\n\t            break;\n\t          case 'bottom':\n\t            targetElemPos.top = hostElemPos.top + hostElemPos.height - targetHeight;\n\t            break;\n\t          case 'left':\n\t            targetElemPos.left = hostElemPos.left;\n\t            break;\n\t          case 'right':\n\t            targetElemPos.left = hostElemPos.left + hostElemPos.width - targetWidth;\n\t            break;\n\t          case 'center':\n\t            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n\t              targetElemPos.left = hostElemPos.left + hostElemPos.width / 2 - targetWidth / 2;\n\t            } else {\n\t              targetElemPos.top = hostElemPos.top + hostElemPos.height / 2 - targetHeight / 2;\n\t            }\n\t            break;\n\t        }\n\n\t        targetElemPos.top = Math.round(targetElemPos.top);\n\t        targetElemPos.left = Math.round(targetElemPos.left);\n\t        targetElemPos.placement = placement[1] === 'center' ? placement[0] : placement[0] + '-' + placement[1];\n\n\t        return targetElemPos;\n\t      },\n\n\t      /**\n\t       * Provides a way to adjust the top positioning after first\n\t       * render to correctly align element to top after content\n\t       * rendering causes resized element height\n\t       *\n\t       * @param {array} placementClasses - The array of strings of classes\n\t       * element should have.\n\t       * @param {object} containerPosition - The object with container\n\t       * position information\n\t       * @param {number} initialHeight - The initial height for the elem.\n\t       * @param {number} currentHeight - The current height for the elem.\n\t       */\n\t      adjustTop: function(placementClasses, containerPosition, initialHeight, currentHeight) {\n\t        if (placementClasses.indexOf('top') !== -1 && initialHeight !== currentHeight) {\n\t          return {\n\t            top: containerPosition.top - currentHeight + 'px'\n\t          };\n\t        }\n\t      },\n\n\t      /**\n\t       * Provides a way for positioning tooltip & dropdown\n\t       * arrows when using placement options beyond the standard\n\t       * left, right, top, or bottom.\n\t       *\n\t       * @param {element} elem - The tooltip/dropdown element.\n\t       * @param {string} placement - The placement for the elem.\n\t       */\n\t      positionArrow: function(elem, placement) {\n\t        elem = this.getRawNode(elem);\n\n\t        var innerElem = elem.querySelector('.tooltip-inner, .popover-inner');\n\t        if (!innerElem) {\n\t          return;\n\t        }\n\n\t        var isTooltip = angular.element(innerElem).hasClass('tooltip-inner');\n\n\t        var arrowElem = isTooltip ? elem.querySelector('.tooltip-arrow') : elem.querySelector('.arrow');\n\t        if (!arrowElem) {\n\t          return;\n\t        }\n\n\t        var arrowCss = {\n\t          top: '',\n\t          bottom: '',\n\t          left: '',\n\t          right: ''\n\t        };\n\n\t        placement = this.parsePlacement(placement);\n\t        if (placement[1] === 'center') {\n\t          // no adjustment necessary - just reset styles\n\t          angular.element(arrowElem).css(arrowCss);\n\t          return;\n\t        }\n\n\t        var borderProp = 'border-' + placement[0] + '-width';\n\t        var borderWidth = $window.getComputedStyle(arrowElem)[borderProp];\n\n\t        var borderRadiusProp = 'border-';\n\t        if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n\t          borderRadiusProp += placement[0] + '-' + placement[1];\n\t        } else {\n\t          borderRadiusProp += placement[1] + '-' + placement[0];\n\t        }\n\t        borderRadiusProp += '-radius';\n\t        var borderRadius = $window.getComputedStyle(isTooltip ? innerElem : elem)[borderRadiusProp];\n\n\t        switch (placement[0]) {\n\t          case 'top':\n\t            arrowCss.bottom = isTooltip ? '0' : '-' + borderWidth;\n\t            break;\n\t          case 'bottom':\n\t            arrowCss.top = isTooltip ? '0' : '-' + borderWidth;\n\t            break;\n\t          case 'left':\n\t            arrowCss.right = isTooltip ? '0' : '-' + borderWidth;\n\t            break;\n\t          case 'right':\n\t            arrowCss.left = isTooltip ? '0' : '-' + borderWidth;\n\t            break;\n\t        }\n\n\t        arrowCss[placement[1]] = borderRadius;\n\n\t        angular.element(arrowElem).css(arrowCss);\n\t      }\n\t    };\n\t  }]);\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(43);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.stackedMap';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.stackedMap']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\tangular.module('ui.bootstrap.stackedMap', [])\n\t/**\n\t * A helper, internal data structure that acts as a map but also allows getting / removing\n\t * elements in the LIFO order\n\t */\n\t  .factory('$$stackedMap', function() {\n\t    return {\n\t      createNew: function() {\n\t        var stack = [];\n\n\t        return {\n\t          add: function(key, value) {\n\t            stack.push({\n\t              key: key,\n\t              value: value\n\t            });\n\t          },\n\t          get: function(key) {\n\t            for (var i = 0; i < stack.length; i++) {\n\t              if (key === stack[i].key) {\n\t                return stack[i];\n\t              }\n\t            }\n\t          },\n\t          keys: function() {\n\t            var keys = [];\n\t            for (var i = 0; i < stack.length; i++) {\n\t              keys.push(stack[i].key);\n\t            }\n\t            return keys;\n\t          },\n\t          top: function() {\n\t            return stack[stack.length - 1];\n\t          },\n\t          remove: function(key) {\n\t            var idx = -1;\n\t            for (var i = 0; i < stack.length; i++) {\n\t              if (key === stack[i].key) {\n\t                idx = i;\n\t                break;\n\t              }\n\t            }\n\t            return stack.splice(idx, 1)[0];\n\t          },\n\t          removeTop: function() {\n\t            return stack.pop();\n\t          },\n\t          length: function() {\n\t            return stack.length;\n\t          }\n\t        };\n\t      }\n\t    };\n\t  });\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/tooltip/tooltip-popup.html\",\n\t    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n\t    \"<div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/tooltip/tooltip-html-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/tooltip/tooltip-html-popup.html\",\n\t    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n\t    \"<div class=\\\"tooltip-inner\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/tooltip/tooltip-template-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/tooltip/tooltip-template-popup.html\",\n\t    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n\t    \"<div class=\\\"tooltip-inner\\\"\\n\" +\n\t    \"  uib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n\t    \"  tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The following features are still outstanding: animation as a\n\t * function, placement as a function, inside, support for more triggers than\n\t * just mouse enter/leave, html tooltips, and selector delegation.\n\t */\n\tangular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap'])\n\n\t/**\n\t * The $tooltip service creates tooltip- and popover-like directives as well as\n\t * houses global options for them.\n\t */\n\t.provider('$uibTooltip', function() {\n\t  // The default options tooltip and popover.\n\t  var defaultOptions = {\n\t    placement: 'top',\n\t    placementClassPrefix: '',\n\t    animation: true,\n\t    popupDelay: 0,\n\t    popupCloseDelay: 0,\n\t    useContentExp: false\n\t  };\n\n\t  // Default hide triggers for each show trigger\n\t  var triggerMap = {\n\t    'mouseenter': 'mouseleave',\n\t    'click': 'click',\n\t    'outsideClick': 'outsideClick',\n\t    'focus': 'blur',\n\t    'none': ''\n\t  };\n\n\t  // The options specified to the provider globally.\n\t  var globalOptions = {};\n\n\t  /**\n\t   * `options({})` allows global configuration of all tooltips in the\n\t   * application.\n\t   *\n\t   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n\t   *     // place tooltips left instead of top by default\n\t   *     $tooltipProvider.options( { placement: 'left' } );\n\t   *   });\n\t   */\n\t\tthis.options = function(value) {\n\t\t\tangular.extend(globalOptions, value);\n\t\t};\n\n\t  /**\n\t   * This allows you to extend the set of trigger mappings available. E.g.:\n\t   *\n\t   *   $tooltipProvider.setTriggers( { 'openTrigger': 'closeTrigger' } );\n\t   */\n\t  this.setTriggers = function setTriggers(triggers) {\n\t    angular.extend(triggerMap, triggers);\n\t  };\n\n\t  /**\n\t   * This is a helper function for translating camel-case to snake_case.\n\t   */\n\t  function snake_case(name) {\n\t    var regexp = /[A-Z]/g;\n\t    var separator = '-';\n\t    return name.replace(regexp, function(letter, pos) {\n\t      return (pos ? separator : '') + letter.toLowerCase();\n\t    });\n\t  }\n\n\t  /**\n\t   * Returns the actual instance of the $tooltip service.\n\t   * TODO support multiple triggers\n\t   */\n\t  this.$get = ['$window', '$compile', '$timeout', '$document', '$uibPosition', '$interpolate', '$rootScope', '$parse', '$$stackedMap', function($window, $compile, $timeout, $document, $position, $interpolate, $rootScope, $parse, $$stackedMap) {\n\t    var openedTooltips = $$stackedMap.createNew();\n\t    $document.on('keyup', keypressListener);\n\n\t    $rootScope.$on('$destroy', function() {\n\t      $document.off('keyup', keypressListener);\n\t    });\n\n\t    function keypressListener(e) {\n\t      if (e.which === 27) {\n\t        var last = openedTooltips.top();\n\t        if (last) {\n\t          last.value.close();\n\t          last = null;\n\t        }\n\t      }\n\t    }\n\n\t    return function $tooltip(ttType, prefix, defaultTriggerShow, options) {\n\t      options = angular.extend({}, defaultOptions, globalOptions, options);\n\n\t      /**\n\t       * Returns an object of show and hide triggers.\n\t       *\n\t       * If a trigger is supplied,\n\t       * it is used to show the tooltip; otherwise, it will use the `trigger`\n\t       * option passed to the `$tooltipProvider.options` method; else it will\n\t       * default to the trigger supplied to this directive factory.\n\t       *\n\t       * The hide trigger is based on the show trigger. If the `trigger` option\n\t       * was passed to the `$tooltipProvider.options` method, it will use the\n\t       * mapped trigger from `triggerMap` or the passed trigger if the map is\n\t       * undefined; otherwise, it uses the `triggerMap` value of the show\n\t       * trigger; else it will just use the show trigger.\n\t       */\n\t      function getTriggers(trigger) {\n\t        var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n\t        var hide = show.map(function(trigger) {\n\t          return triggerMap[trigger] || trigger;\n\t        });\n\t        return {\n\t          show: show,\n\t          hide: hide\n\t        };\n\t      }\n\n\t      var directiveName = snake_case(ttType);\n\n\t      var startSym = $interpolate.startSymbol();\n\t      var endSym = $interpolate.endSymbol();\n\t      var template =\n\t        '<div '+ directiveName + '-popup ' +\n\t          'uib-title=\"' + startSym + 'title' + endSym + '\" ' +\n\t          (options.useContentExp ?\n\t            'content-exp=\"contentExp()\" ' :\n\t            'content=\"' + startSym + 'content' + endSym + '\" ') +\n\t          'origin-scope=\"origScope\" ' +\n\t          'class=\"uib-position-measure ' + prefix + '\" ' +\n\t          'tooltip-animation-class=\"fade\"' +\n\t          'uib-tooltip-classes ' +\n\t          'ng-class=\"{ in: isOpen }\" ' +\n\t          '>' +\n\t        '</div>';\n\n\t      return {\n\t        compile: function(tElem, tAttrs) {\n\t          var tooltipLinker = $compile(template);\n\n\t          return function link(scope, element, attrs, tooltipCtrl) {\n\t            var tooltip;\n\t            var tooltipLinkedScope;\n\t            var transitionTimeout;\n\t            var showTimeout;\n\t            var hideTimeout;\n\t            var positionTimeout;\n\t            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n\t            var triggers = getTriggers(undefined);\n\t            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n\t            var ttScope = scope.$new(true);\n\t            var repositionScheduled = false;\n\t            var isOpenParse = angular.isDefined(attrs[prefix + 'IsOpen']) ? $parse(attrs[prefix + 'IsOpen']) : false;\n\t            var contentParse = options.useContentExp ? $parse(attrs[ttType]) : false;\n\t            var observers = [];\n\t            var lastPlacement;\n\n\t            var positionTooltip = function() {\n\t              // check if tooltip exists and is not empty\n\t              if (!tooltip || !tooltip.html()) { return; }\n\n\t              if (!positionTimeout) {\n\t                positionTimeout = $timeout(function() {\n\t                  var ttPosition = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);\n\t                  var initialHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');\n\t                  var elementPos = appendToBody ? $position.offset(element) : $position.position(element);\n\t                  tooltip.css({ top: ttPosition.top + 'px', left: ttPosition.left + 'px' });\n\t                  var placementClasses = ttPosition.placement.split('-');\n\n\t                  if (!tooltip.hasClass(placementClasses[0])) {\n\t                    tooltip.removeClass(lastPlacement.split('-')[0]);\n\t                    tooltip.addClass(placementClasses[0]);\n\t                  }\n\n\t                  if (!tooltip.hasClass(options.placementClassPrefix + ttPosition.placement)) {\n\t                    tooltip.removeClass(options.placementClassPrefix + lastPlacement);\n\t                    tooltip.addClass(options.placementClassPrefix + ttPosition.placement);\n\t                  }\n\n\t                  $timeout(function() {\n\t                    var currentHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');\n\t                    var adjustment = $position.adjustTop(placementClasses, elementPos, initialHeight, currentHeight);\n\t                    if (adjustment) {\n\t                      tooltip.css(adjustment);\n\t                    }\n\t                  }, 0, false);\n\n\t                  // first time through tt element will have the\n\t                  // uib-position-measure class or if the placement\n\t                  // has changed we need to position the arrow.\n\t                  if (tooltip.hasClass('uib-position-measure')) {\n\t                    $position.positionArrow(tooltip, ttPosition.placement);\n\t                    tooltip.removeClass('uib-position-measure');\n\t                  } else if (lastPlacement !== ttPosition.placement) {\n\t                    $position.positionArrow(tooltip, ttPosition.placement);\n\t                  }\n\t                  lastPlacement = ttPosition.placement;\n\n\t                  positionTimeout = null;\n\t                }, 0, false);\n\t              }\n\t            };\n\n\t            // Set up the correct scope to allow transclusion later\n\t            ttScope.origScope = scope;\n\n\t            // By default, the tooltip is not open.\n\t            // TODO add ability to start tooltip opened\n\t            ttScope.isOpen = false;\n\n\t            function toggleTooltipBind() {\n\t              if (!ttScope.isOpen) {\n\t                showTooltipBind();\n\t              } else {\n\t                hideTooltipBind();\n\t              }\n\t            }\n\n\t            // Show the tooltip with delay if specified, otherwise show it immediately\n\t            function showTooltipBind() {\n\t              if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n\t                return;\n\t              }\n\n\t              cancelHide();\n\t              prepareTooltip();\n\n\t              if (ttScope.popupDelay) {\n\t                // Do nothing if the tooltip was already scheduled to pop-up.\n\t                // This happens if show is triggered multiple times before any hide is triggered.\n\t                if (!showTimeout) {\n\t                  showTimeout = $timeout(show, ttScope.popupDelay, false);\n\t                }\n\t              } else {\n\t                show();\n\t              }\n\t            }\n\n\t            function hideTooltipBind() {\n\t              cancelShow();\n\n\t              if (ttScope.popupCloseDelay) {\n\t                if (!hideTimeout) {\n\t                  hideTimeout = $timeout(hide, ttScope.popupCloseDelay, false);\n\t                }\n\t              } else {\n\t                hide();\n\t              }\n\t            }\n\n\t            // Show the tooltip popup element.\n\t            function show() {\n\t              cancelShow();\n\t              cancelHide();\n\n\t              // Don't show empty tooltips.\n\t              if (!ttScope.content) {\n\t                return angular.noop;\n\t              }\n\n\t              createTooltip();\n\n\t              // And show the tooltip.\n\t              ttScope.$evalAsync(function() {\n\t                ttScope.isOpen = true;\n\t                assignIsOpen(true);\n\t                positionTooltip();\n\t              });\n\t            }\n\n\t            function cancelShow() {\n\t              if (showTimeout) {\n\t                $timeout.cancel(showTimeout);\n\t                showTimeout = null;\n\t              }\n\n\t              if (positionTimeout) {\n\t                $timeout.cancel(positionTimeout);\n\t                positionTimeout = null;\n\t              }\n\t            }\n\n\t            // Hide the tooltip popup element.\n\t            function hide() {\n\t              if (!ttScope) {\n\t                return;\n\t              }\n\n\t              // First things first: we don't show it anymore.\n\t              ttScope.$evalAsync(function() {\n\t                if (ttScope) {\n\t                  ttScope.isOpen = false;\n\t                  assignIsOpen(false);\n\t                  // And now we remove it from the DOM. However, if we have animation, we\n\t                  // need to wait for it to expire beforehand.\n\t                  // FIXME: this is a placeholder for a port of the transitions library.\n\t                  // The fade transition in TWBS is 150ms.\n\t                  if (ttScope.animation) {\n\t                    if (!transitionTimeout) {\n\t                      transitionTimeout = $timeout(removeTooltip, 150, false);\n\t                    }\n\t                  } else {\n\t                    removeTooltip();\n\t                  }\n\t                }\n\t              });\n\t            }\n\n\t            function cancelHide() {\n\t              if (hideTimeout) {\n\t                $timeout.cancel(hideTimeout);\n\t                hideTimeout = null;\n\t              }\n\n\t              if (transitionTimeout) {\n\t                $timeout.cancel(transitionTimeout);\n\t                transitionTimeout = null;\n\t              }\n\t            }\n\n\t            function createTooltip() {\n\t              // There can only be one tooltip element per directive shown at once.\n\t              if (tooltip) {\n\t                return;\n\t              }\n\n\t              tooltipLinkedScope = ttScope.$new();\n\t              tooltip = tooltipLinker(tooltipLinkedScope, function(tooltip) {\n\t                if (appendToBody) {\n\t                  $document.find('body').append(tooltip);\n\t                } else {\n\t                  element.after(tooltip);\n\t                }\n\t              });\n\n\t              openedTooltips.add(ttScope, {\n\t                close: hide\n\t              });\n\n\t              prepObservers();\n\t            }\n\n\t            function removeTooltip() {\n\t              cancelShow();\n\t              cancelHide();\n\t              unregisterObservers();\n\n\t              if (tooltip) {\n\t                tooltip.remove();\n\t                tooltip = null;\n\t              }\n\n\t              openedTooltips.remove(ttScope);\n\t              \n\t              if (tooltipLinkedScope) {\n\t                tooltipLinkedScope.$destroy();\n\t                tooltipLinkedScope = null;\n\t              }\n\t            }\n\n\t            /**\n\t             * Set the initial scope values. Once\n\t             * the tooltip is created, the observers\n\t             * will be added to keep things in sync.\n\t             */\n\t            function prepareTooltip() {\n\t              ttScope.title = attrs[prefix + 'Title'];\n\t              if (contentParse) {\n\t                ttScope.content = contentParse(scope);\n\t              } else {\n\t                ttScope.content = attrs[ttType];\n\t              }\n\n\t              ttScope.popupClass = attrs[prefix + 'Class'];\n\t              ttScope.placement = angular.isDefined(attrs[prefix + 'Placement']) ? attrs[prefix + 'Placement'] : options.placement;\n\t              var placement = $position.parsePlacement(ttScope.placement);\n\t              lastPlacement = placement[1] ? placement[0] + '-' + placement[1] : placement[0];\n\n\t              var delay = parseInt(attrs[prefix + 'PopupDelay'], 10);\n\t              var closeDelay = parseInt(attrs[prefix + 'PopupCloseDelay'], 10);\n\t              ttScope.popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n\t              ttScope.popupCloseDelay = !isNaN(closeDelay) ? closeDelay : options.popupCloseDelay;\n\t            }\n\n\t            function assignIsOpen(isOpen) {\n\t              if (isOpenParse && angular.isFunction(isOpenParse.assign)) {\n\t                isOpenParse.assign(scope, isOpen);\n\t              }\n\t            }\n\n\t            ttScope.contentExp = function() {\n\t              return ttScope.content;\n\t            };\n\n\t            /**\n\t             * Observe the relevant attributes.\n\t             */\n\t            attrs.$observe('disabled', function(val) {\n\t              if (val) {\n\t                cancelShow();\n\t              }\n\n\t              if (val && ttScope.isOpen) {\n\t                hide();\n\t              }\n\t            });\n\n\t            if (isOpenParse) {\n\t              scope.$watch(isOpenParse, function(val) {\n\t                if (ttScope && !val === ttScope.isOpen) {\n\t                  toggleTooltipBind();\n\t                }\n\t              });\n\t            }\n\n\t            function prepObservers() {\n\t              observers.length = 0;\n\n\t              if (contentParse) {\n\t                observers.push(\n\t                  scope.$watch(contentParse, function(val) {\n\t                    ttScope.content = val;\n\t                    if (!val && ttScope.isOpen) {\n\t                      hide();\n\t                    }\n\t                  })\n\t                );\n\n\t                observers.push(\n\t                  tooltipLinkedScope.$watch(function() {\n\t                    if (!repositionScheduled) {\n\t                      repositionScheduled = true;\n\t                      tooltipLinkedScope.$$postDigest(function() {\n\t                        repositionScheduled = false;\n\t                        if (ttScope && ttScope.isOpen) {\n\t                          positionTooltip();\n\t                        }\n\t                      });\n\t                    }\n\t                  })\n\t                );\n\t              } else {\n\t                observers.push(\n\t                  attrs.$observe(ttType, function(val) {\n\t                    ttScope.content = val;\n\t                    if (!val && ttScope.isOpen) {\n\t                      hide();\n\t                    } else {\n\t                      positionTooltip();\n\t                    }\n\t                  })\n\t                );\n\t              }\n\n\t              observers.push(\n\t                attrs.$observe(prefix + 'Title', function(val) {\n\t                  ttScope.title = val;\n\t                  if (ttScope.isOpen) {\n\t                    positionTooltip();\n\t                  }\n\t                })\n\t              );\n\n\t              observers.push(\n\t                attrs.$observe(prefix + 'Placement', function(val) {\n\t                  ttScope.placement = val ? val : options.placement;\n\t                  if (ttScope.isOpen) {\n\t                    positionTooltip();\n\t                  }\n\t                })\n\t              );\n\t            }\n\n\t            function unregisterObservers() {\n\t              if (observers.length) {\n\t                angular.forEach(observers, function(observer) {\n\t                  observer();\n\t                });\n\t                observers.length = 0;\n\t              }\n\t            }\n\n\t            // hide tooltips/popovers for outsideClick trigger\n\t            function bodyHideTooltipBind(e) {\n\t              if (!ttScope || !ttScope.isOpen || !tooltip) {\n\t                return;\n\t              }\n\t              // make sure the tooltip/popover link or tool tooltip/popover itself were not clicked\n\t              if (!element[0].contains(e.target) && !tooltip[0].contains(e.target)) {\n\t                hideTooltipBind();\n\t              }\n\t            }\n\n\t            var unregisterTriggers = function() {\n\t              triggers.show.forEach(function(trigger) {\n\t                if (trigger === 'outsideClick') {\n\t                  element.off('click', toggleTooltipBind);\n\t                } else {\n\t                  element.off(trigger, showTooltipBind);\n\t                  element.off(trigger, toggleTooltipBind);\n\t                }\n\t              });\n\t              triggers.hide.forEach(function(trigger) {\n\t                if (trigger === 'outsideClick') {\n\t                  $document.off('click', bodyHideTooltipBind);\n\t                } else {\n\t                  element.off(trigger, hideTooltipBind);\n\t                }\n\t              });\n\t            };\n\n\t            function prepTriggers() {\n\t              var showTriggers = [], hideTriggers = [];\n\t              var val = scope.$eval(attrs[prefix + 'Trigger']);\n\t              unregisterTriggers();\n\n\t              if (angular.isObject(val)) {\n\t                Object.keys(val).forEach(function(key) {\n\t                  showTriggers.push(key);\n\t                  hideTriggers.push(val[key]);\n\t                });\n\t                triggers = {\n\t                  show: showTriggers,\n\t                  hide: hideTriggers\n\t                };\n\t              } else {\n\t                triggers = getTriggers(val);\n\t              }\n\n\t              if (triggers.show !== 'none') {\n\t                triggers.show.forEach(function(trigger, idx) {\n\t                  if (trigger === 'outsideClick') {\n\t                    element.on('click', toggleTooltipBind);\n\t                    $document.on('click', bodyHideTooltipBind);\n\t                  } else if (trigger === triggers.hide[idx]) {\n\t                    element.on(trigger, toggleTooltipBind);\n\t                  } else if (trigger) {\n\t                    element.on(trigger, showTooltipBind);\n\t                    element.on(triggers.hide[idx], hideTooltipBind);\n\t                  }\n\n\t                  element.on('keypress', function(e) {\n\t                    if (e.which === 27) {\n\t                      hideTooltipBind();\n\t                    }\n\t                  });\n\t                });\n\t              }\n\t            }\n\n\t            prepTriggers();\n\n\t            var animation = scope.$eval(attrs[prefix + 'Animation']);\n\t            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;\n\n\t            var appendToBodyVal;\n\t            var appendKey = prefix + 'AppendToBody';\n\t            if (appendKey in attrs && attrs[appendKey] === undefined) {\n\t              appendToBodyVal = true;\n\t            } else {\n\t              appendToBodyVal = scope.$eval(attrs[appendKey]);\n\t            }\n\n\t            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;\n\n\t            // Make sure tooltip is destroyed and removed.\n\t            scope.$on('$destroy', function onDestroyTooltip() {\n\t              unregisterTriggers();\n\t              removeTooltip();\n\t              ttScope = null;\n\t            });\n\t          };\n\t        }\n\t      };\n\t    };\n\t  }];\n\t})\n\n\t// This is mostly ngInclude code but with a custom scope\n\t.directive('uibTooltipTemplateTransclude', [\n\t         '$animate', '$sce', '$compile', '$templateRequest',\n\tfunction ($animate, $sce, $compile, $templateRequest) {\n\t  return {\n\t    link: function(scope, elem, attrs) {\n\t      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);\n\n\t      var changeCounter = 0,\n\t        currentScope,\n\t        previousElement,\n\t        currentElement;\n\n\t      var cleanupLastIncludeContent = function() {\n\t        if (previousElement) {\n\t          previousElement.remove();\n\t          previousElement = null;\n\t        }\n\n\t        if (currentScope) {\n\t          currentScope.$destroy();\n\t          currentScope = null;\n\t        }\n\n\t        if (currentElement) {\n\t          $animate.leave(currentElement).then(function() {\n\t            previousElement = null;\n\t          });\n\t          previousElement = currentElement;\n\t          currentElement = null;\n\t        }\n\t      };\n\n\t      scope.$watch($sce.parseAsResourceUrl(attrs.uibTooltipTemplateTransclude), function(src) {\n\t        var thisChangeId = ++changeCounter;\n\n\t        if (src) {\n\t          //set the 2nd param to true to ignore the template request error so that the inner\n\t          //contents and scope can be cleaned up.\n\t          $templateRequest(src, true).then(function(response) {\n\t            if (thisChangeId !== changeCounter) { return; }\n\t            var newScope = origScope.$new();\n\t            var template = response;\n\n\t            var clone = $compile(template)(newScope, function(clone) {\n\t              cleanupLastIncludeContent();\n\t              $animate.enter(clone, elem);\n\t            });\n\n\t            currentScope = newScope;\n\t            currentElement = clone;\n\n\t            currentScope.$emit('$includeContentLoaded', src);\n\t          }, function() {\n\t            if (thisChangeId === changeCounter) {\n\t              cleanupLastIncludeContent();\n\t              scope.$emit('$includeContentError', src);\n\t            }\n\t          });\n\t          scope.$emit('$includeContentRequested', src);\n\t        } else {\n\t          cleanupLastIncludeContent();\n\t        }\n\t      });\n\n\t      scope.$on('$destroy', cleanupLastIncludeContent);\n\t    }\n\t  };\n\t}])\n\n\t/**\n\t * Note that it's intentional that these classes are *not* applied through $animate.\n\t * They must not be animated as they're expected to be present on the tooltip on\n\t * initialization.\n\t */\n\t.directive('uibTooltipClasses', ['$uibPosition', function($uibPosition) {\n\t  return {\n\t    restrict: 'A',\n\t    link: function(scope, element, attrs) {\n\t      // need to set the primary position so the\n\t      // arrow has space during position measure.\n\t      // tooltip.positionTooltip()\n\t      if (scope.placement) {\n\t        // // There are no top-left etc... classes\n\t        // // in TWBS, so we need the primary position.\n\t        var position = $uibPosition.parsePlacement(scope.placement);\n\t        element.addClass(position[0]);\n\t      }\n\n\t      if (scope.popupClass) {\n\t        element.addClass(scope.popupClass);\n\t      }\n\n\t      if (scope.animation) {\n\t        element.addClass(attrs.tooltipAnimationClass);\n\t      }\n\t    }\n\t  };\n\t}])\n\n\t.directive('uibTooltipPopup', function() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { content: '@' },\n\t    templateUrl: 'uib/template/tooltip/tooltip-popup.html'\n\t  };\n\t})\n\n\t.directive('uibTooltip', [ '$uibTooltip', function($uibTooltip) {\n\t  return $uibTooltip('uibTooltip', 'tooltip', 'mouseenter');\n\t}])\n\n\t.directive('uibTooltipTemplatePopup', function() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { contentExp: '&', originScope: '&' },\n\t    templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'\n\t  };\n\t})\n\n\t.directive('uibTooltipTemplate', ['$uibTooltip', function($uibTooltip) {\n\t  return $uibTooltip('uibTooltipTemplate', 'tooltip', 'mouseenter', {\n\t    useContentExp: true\n\t  });\n\t}])\n\n\t.directive('uibTooltipHtmlPopup', function() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { contentExp: '&' },\n\t    templateUrl: 'uib/template/tooltip/tooltip-html-popup.html'\n\t  };\n\t})\n\n\t.directive('uibTooltipHtml', ['$uibTooltip', function($uibTooltip) {\n\t  return $uibTooltip('uibTooltipHtml', 'tooltip', 'mouseenter', {\n\t    useContentExp: true\n\t  });\n\t}]);\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/popover/popover.html\",\n\t    \"<div class=\\\"arrow\\\"></div>\\n\" +\n\t    \"\\n\" +\n\t    \"<div class=\\\"popover-inner\\\">\\n\" +\n\t    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n\t    \"    <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n\t    \"</div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/popover/popover-html.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/popover/popover-html.html\",\n\t    \"<div class=\\\"arrow\\\"></div>\\n\" +\n\t    \"\\n\" +\n\t    \"<div class=\\\"popover-inner\\\">\\n\" +\n\t    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n\t    \"    <div class=\\\"popover-content\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n\t    \"</div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/popover/popover-template.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/popover/popover-template.html\",\n\t    \"<div class=\\\"arrow\\\"></div>\\n\" +\n\t    \"\\n\" +\n\t    \"<div class=\\\"popover-inner\\\">\\n\" +\n\t    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n\t    \"    <div class=\\\"popover-content\\\"\\n\" +\n\t    \"      uib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n\t    \"      tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n\t    \"</div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The following features are still outstanding: popup delay, animation as a\n\t * function, placement as a function, inside, support for more triggers than\n\t * just mouse enter/leave, and selector delegatation.\n\t */\n\tangular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip'])\n\n\t.directive('uibPopoverTemplatePopup', function() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { uibTitle: '@', contentExp: '&', originScope: '&' },\n\t    templateUrl: 'uib/template/popover/popover-template.html'\n\t  };\n\t})\n\n\t.directive('uibPopoverTemplate', ['$uibTooltip', function($uibTooltip) {\n\t  return $uibTooltip('uibPopoverTemplate', 'popover', 'click', {\n\t    useContentExp: true\n\t  });\n\t}])\n\n\t.directive('uibPopoverHtmlPopup', function() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { contentExp: '&', uibTitle: '@' },\n\t    templateUrl: 'uib/template/popover/popover-html.html'\n\t  };\n\t})\n\n\t.directive('uibPopoverHtml', ['$uibTooltip', function($uibTooltip) {\n\t  return $uibTooltip('uibPopoverHtml', 'popover', 'click', {\n\t    useContentExp: true\n\t  });\n\t}])\n\n\t.directive('uibPopoverPopup', function() {\n\t  return {\n\t    restrict: 'A',\n\t    scope: { uibTitle: '@', content: '@' },\n\t    templateUrl: 'uib/template/popover/popover.html'\n\t  };\n\t})\n\n\t.directive('uibPopover', ['$uibTooltip', function($uibTooltip) {\n\t  return $uibTooltip('uibPopover', 'popover', 'click');\n\t}]);\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(53);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../css-loader/index.js!./tooltip.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../css-loader/index.js!./tooltip.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \"[uib-popover-html-popup].popover.bottom-left>.arrow,[uib-popover-html-popup].popover.bottom-right>.arrow,[uib-popover-html-popup].popover.left-bottom>.arrow,[uib-popover-html-popup].popover.left-top>.arrow,[uib-popover-html-popup].popover.right-bottom>.arrow,[uib-popover-html-popup].popover.right-top>.arrow,[uib-popover-html-popup].popover.top-left>.arrow,[uib-popover-html-popup].popover.top-right>.arrow,[uib-popover-popup].popover.bottom-left>.arrow,[uib-popover-popup].popover.bottom-right>.arrow,[uib-popover-popup].popover.left-bottom>.arrow,[uib-popover-popup].popover.left-top>.arrow,[uib-popover-popup].popover.right-bottom>.arrow,[uib-popover-popup].popover.right-top>.arrow,[uib-popover-popup].popover.top-left>.arrow,[uib-popover-popup].popover.top-right>.arrow,[uib-popover-template-popup].popover.bottom-left>.arrow,[uib-popover-template-popup].popover.bottom-right>.arrow,[uib-popover-template-popup].popover.left-bottom>.arrow,[uib-popover-template-popup].popover.left-top>.arrow,[uib-popover-template-popup].popover.right-bottom>.arrow,[uib-popover-template-popup].popover.right-top>.arrow,[uib-popover-template-popup].popover.top-left>.arrow,[uib-popover-template-popup].popover.top-right>.arrow,[uib-tooltip-html-popup].tooltip.bottom-left>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right>.tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left>.tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right>.tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom>.tooltip-arrow,[uib-tooltip-popup].tooltip.left-top>.tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom>.tooltip-arrow,[uib-tooltip-popup].tooltip.right-top>.tooltip-arrow,[uib-tooltip-popup].tooltip.top-left>.tooltip-arrow,[uib-tooltip-popup].tooltip.top-right>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right>.tooltip-arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0}[uib-popover-html-popup].popover,[uib-popover-popup].popover,[uib-popover-template-popup].popover{display:block!important}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(55);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./tooltip.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./tooltip.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".popover{position:absolute;top:0;left:0;z-index:1060;display:none;max-width:400px;padding:1px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;word-wrap:normal;font-size:14px;background-color:#fff;background-clip:padding-box;border:1px solid #dedede;border-radius:6px;box-shadow:0 1px 7px rgba(0,0,0,.2)}.popover.top{margin-top:-10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-left:-10px}.popover-title{margin:0;padding:8px 14px;font-size:14px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px;font-weight:lighter}.popover-content a{color:#02baf2;text-decoration:none}.popover>.arrow,.popover>.arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover>.arrow{border-width:11px}.popover>.arrow:after{border-width:10px;content:\\\"\\\"}.popover.top>.arrow{left:50%;margin-left:-11px;border-bottom-width:0;border-top-color:rgba(0,0,0,.12);bottom:-11px}.popover.top>.arrow:after{content:\\\" \\\";bottom:1px;margin-left:-10px;border-bottom-width:0;border-top-color:#fff}.popover.right>.arrow{top:50%;left:-11px;margin-top:-11px;border-left-width:0;border-right-color:rgba(0,0,0,.12)}.popover.right>.arrow:after{content:\\\" \\\";left:1px;bottom:-10px;border-left-width:0;border-right-color:#fff}.popover.bottom>.arrow{left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:rgba(0,0,0,.12);top:-11px}.popover.bottom>.arrow:after{content:\\\" \\\";top:1px;margin-left:-10px;border-top-width:0;border-bottom-color:#fff}.popover.left>.arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:rgba(0,0,0,.12)}.popover.left>.arrow:after{content:\\\" \\\";right:1px;border-right-width:0;border-left-color:#fff;bottom:-10px}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\trunFunc.$inject = [\"$templateCache\"];\n\tfunction runFunc($templateCache) {\n\t    'ngInject';\n\t    $templateCache.put('uib/template/popover/popover-template.html', \"<div class=\\\"arrow\\\"></div>\\n\\t\\t<div class=\\\"popover-inner\\\">\\n\\t\\t\\t<h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\\t\\t\\t<div class=\\\"popover-content\\\"\\n\\t\\t\\t\\tuib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\\t\\t\\t\\ttooltip-template-transclude-scope=\\\"originScope()\\\">\\n\\t\\t\\t</div>\\n\\t\\t</div>\");\n\t    $templateCache.put('uib/template/popover/popover.html', \"<div class=\\\"arrow\\\"></div>\\n\\t\\t<div class=\\\"popover-inner\\\">\\n\\t\\t\\t<h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\\t\\t\\t<div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\\t\\t</div>\");\n\t    $templateCache.put('uib/template/popover/popover-html.html', \"<div class=\\\"arrow\\\"></div>\\n\\t\\t<div class=\\\"popover-inner\\\">\\n\\t\\t\\t<h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\\t\\t\\t<div class=\\\"popover-content\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\\t\\t</div>\");\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = runFunc;\n\t;\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tconfig.$inject = [\"$uibTooltipProvider\"];\n\tfunction config($uibTooltipProvider) {\n\t    'ngInject';\n\t    $uibTooltipProvider.options({\n\t        animation: false,\n\t        appendToBody: true,\n\t        trigger: 'mouseenter'\n\t    });\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = config;\n\t;\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\t__webpack_require__(59);\n\tvar module = angular.module('ep.toggleButtons', [\n\t    'ui.bootstrap.buttons'\n\t]);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(60);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.buttons';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.buttons']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\tangular.module('ui.bootstrap.buttons', [])\n\n\t.constant('uibButtonConfig', {\n\t  activeClass: 'active',\n\t  toggleEvent: 'click'\n\t})\n\n\t.controller('UibButtonsController', ['uibButtonConfig', function(buttonConfig) {\n\t  this.activeClass = buttonConfig.activeClass || 'active';\n\t  this.toggleEvent = buttonConfig.toggleEvent || 'click';\n\t}])\n\n\t.directive('uibBtnRadio', ['$parse', function($parse) {\n\t  return {\n\t    require: ['uibBtnRadio', 'ngModel'],\n\t    controller: 'UibButtonsController',\n\t    controllerAs: 'buttons',\n\t    link: function(scope, element, attrs, ctrls) {\n\t      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\t      var uncheckableExpr = $parse(attrs.uibUncheckable);\n\n\t      element.find('input').css({display: 'none'});\n\n\t      //model -> UI\n\t      ngModelCtrl.$render = function() {\n\t        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.uibBtnRadio)));\n\t      };\n\n\t      //ui->model\n\t      element.on(buttonsCtrl.toggleEvent, function() {\n\t        if (attrs.disabled) {\n\t          return;\n\t        }\n\n\t        var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n\t        if (!isActive || angular.isDefined(attrs.uncheckable)) {\n\t          scope.$apply(function() {\n\t            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.uibBtnRadio));\n\t            ngModelCtrl.$render();\n\t          });\n\t        }\n\t      });\n\n\t      if (attrs.uibUncheckable) {\n\t        scope.$watch(uncheckableExpr, function(uncheckable) {\n\t          attrs.$set('uncheckable', uncheckable ? '' : undefined);\n\t        });\n\t      }\n\t    }\n\t  };\n\t}])\n\n\t.directive('uibBtnCheckbox', function() {\n\t  return {\n\t    require: ['uibBtnCheckbox', 'ngModel'],\n\t    controller: 'UibButtonsController',\n\t    controllerAs: 'button',\n\t    link: function(scope, element, attrs, ctrls) {\n\t      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n\t      element.find('input').css({display: 'none'});\n\n\t      function getTrueValue() {\n\t        return getCheckboxValue(attrs.btnCheckboxTrue, true);\n\t      }\n\n\t      function getFalseValue() {\n\t        return getCheckboxValue(attrs.btnCheckboxFalse, false);\n\t      }\n\n\t      function getCheckboxValue(attribute, defaultValue) {\n\t        return angular.isDefined(attribute) ? scope.$eval(attribute) : defaultValue;\n\t      }\n\n\t      //model -> UI\n\t      ngModelCtrl.$render = function() {\n\t        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n\t      };\n\n\t      //ui->model\n\t      element.on(buttonsCtrl.toggleEvent, function() {\n\t        if (attrs.disabled) {\n\t          return;\n\t        }\n\n\t        scope.$apply(function() {\n\t          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n\t          ngModelCtrl.$render();\n\t        });\n\t      });\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\t__webpack_require__(62);\n\t__webpack_require__(65);\n\t__webpack_require__(67);\n\tvar modal_run_1 = __webpack_require__(69);\n\tvar module = angular.module('ep.modal', [\n\t    'ngSanitize',\n\t    'ui.bootstrap.modal'\n\t]);\n\tmodule.run(modal_run_1.default);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(40);\n\t__webpack_require__(42);\n\t__webpack_require__(63);\n\t__webpack_require__(64);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.modal';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.modal', 'uib/template/modal/window.html']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/modal/window.html\",\n\t    \"<div class=\\\"modal-dialog {{size ? 'modal-' + size : ''}}\\\"><div class=\\\"modal-content\\\" uib-modal-transclude></div></div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports) {\n\n\tangular.module('ui.bootstrap.modal', ['ui.bootstrap.stackedMap', 'ui.bootstrap.position'])\n\t/**\n\t * A helper, internal data structure that stores all references attached to key\n\t */\n\t  .factory('$$multiMap', function() {\n\t    return {\n\t      createNew: function() {\n\t        var map = {};\n\n\t        return {\n\t          entries: function() {\n\t            return Object.keys(map).map(function(key) {\n\t              return {\n\t                key: key,\n\t                value: map[key]\n\t              };\n\t            });\n\t          },\n\t          get: function(key) {\n\t            return map[key];\n\t          },\n\t          hasKey: function(key) {\n\t            return !!map[key];\n\t          },\n\t          keys: function() {\n\t            return Object.keys(map);\n\t          },\n\t          put: function(key, value) {\n\t            if (!map[key]) {\n\t              map[key] = [];\n\t            }\n\n\t            map[key].push(value);\n\t          },\n\t          remove: function(key, value) {\n\t            var values = map[key];\n\n\t            if (!values) {\n\t              return;\n\t            }\n\n\t            var idx = values.indexOf(value);\n\n\t            if (idx !== -1) {\n\t              values.splice(idx, 1);\n\t            }\n\n\t            if (!values.length) {\n\t              delete map[key];\n\t            }\n\t          }\n\t        };\n\t      }\n\t    };\n\t  })\n\n\t/**\n\t * Pluggable resolve mechanism for the modal resolve resolution\n\t * Supports UI Router's $resolve service\n\t */\n\t  .provider('$uibResolve', function() {\n\t    var resolve = this;\n\t    this.resolver = null;\n\n\t    this.setResolver = function(resolver) {\n\t      this.resolver = resolver;\n\t    };\n\n\t    this.$get = ['$injector', '$q', function($injector, $q) {\n\t      var resolver = resolve.resolver ? $injector.get(resolve.resolver) : null;\n\t      return {\n\t        resolve: function(invocables, locals, parent, self) {\n\t          if (resolver) {\n\t            return resolver.resolve(invocables, locals, parent, self);\n\t          }\n\n\t          var promises = [];\n\n\t          angular.forEach(invocables, function(value) {\n\t            if (angular.isFunction(value) || angular.isArray(value)) {\n\t              promises.push($q.resolve($injector.invoke(value)));\n\t            } else if (angular.isString(value)) {\n\t              promises.push($q.resolve($injector.get(value)));\n\t            } else {\n\t              promises.push($q.resolve(value));\n\t            }\n\t          });\n\n\t          return $q.all(promises).then(function(resolves) {\n\t            var resolveObj = {};\n\t            var resolveIter = 0;\n\t            angular.forEach(invocables, function(value, key) {\n\t              resolveObj[key] = resolves[resolveIter++];\n\t            });\n\n\t            return resolveObj;\n\t          });\n\t        }\n\t      };\n\t    }];\n\t  })\n\n\t/**\n\t * A helper directive for the $modal service. It creates a backdrop element.\n\t */\n\t  .directive('uibModalBackdrop', ['$animate', '$injector', '$uibModalStack',\n\t  function($animate, $injector, $modalStack) {\n\t    return {\n\t      restrict: 'A',\n\t      compile: function(tElement, tAttrs) {\n\t        tElement.addClass(tAttrs.backdropClass);\n\t        return linkFn;\n\t      }\n\t    };\n\n\t    function linkFn(scope, element, attrs) {\n\t      if (attrs.modalInClass) {\n\t        $animate.addClass(element, attrs.modalInClass);\n\n\t        scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n\t          var done = setIsAsync();\n\t          if (scope.modalOptions.animation) {\n\t            $animate.removeClass(element, attrs.modalInClass).then(done);\n\t          } else {\n\t            done();\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }])\n\n\t  .directive('uibModalWindow', ['$uibModalStack', '$q', '$animateCss', '$document',\n\t  function($modalStack, $q, $animateCss, $document) {\n\t    return {\n\t      scope: {\n\t        index: '@'\n\t      },\n\t      restrict: 'A',\n\t      transclude: true,\n\t      templateUrl: function(tElement, tAttrs) {\n\t        return tAttrs.templateUrl || 'uib/template/modal/window.html';\n\t      },\n\t      link: function(scope, element, attrs) {\n\t        element.addClass(attrs.windowTopClass || '');\n\t        scope.size = attrs.size;\n\n\t        scope.close = function(evt) {\n\t          var modal = $modalStack.getTop();\n\t          if (modal && modal.value.backdrop &&\n\t            modal.value.backdrop !== 'static' &&\n\t            evt.target === evt.currentTarget) {\n\t            evt.preventDefault();\n\t            evt.stopPropagation();\n\t            $modalStack.dismiss(modal.key, 'backdrop click');\n\t          }\n\t        };\n\n\t        // moved from template to fix issue #2280\n\t        element.on('click', scope.close);\n\n\t        // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n\t        // We can detect that by using this property in the template associated with this directive and then use\n\t        // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n\t        scope.$isRendered = true;\n\n\t        // Deferred object that will be resolved when this modal is render.\n\t        var modalRenderDeferObj = $q.defer();\n\t        // Resolve render promise post-digest\n\t        scope.$$postDigest(function() {\n\t          modalRenderDeferObj.resolve();\n\t        });\n\n\t        modalRenderDeferObj.promise.then(function() {\n\t          var animationPromise = null;\n\n\t          if (attrs.modalInClass) {\n\t            animationPromise = $animateCss(element, {\n\t              addClass: attrs.modalInClass\n\t            }).start();\n\n\t            scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n\t              var done = setIsAsync();\n\t              $animateCss(element, {\n\t                removeClass: attrs.modalInClass\n\t              }).start().then(done);\n\t            });\n\t          }\n\n\n\t          $q.when(animationPromise).then(function() {\n\t            // Notify {@link $modalStack} that modal is rendered.\n\t            var modal = $modalStack.getTop();\n\t            if (modal) {\n\t              $modalStack.modalRendered(modal.key);\n\t            }\n\n\t            /**\n\t             * If something within the freshly-opened modal already has focus (perhaps via a\n\t             * directive that causes focus). then no need to try and focus anything.\n\t             */\n\t            if (!($document[0].activeElement && element[0].contains($document[0].activeElement))) {\n\t              var inputWithAutofocus = element[0].querySelector('[autofocus]');\n\t              /**\n\t               * Auto-focusing of a freshly-opened modal element causes any child elements\n\t               * with the autofocus attribute to lose focus. This is an issue on touch\n\t               * based devices which will show and then hide the onscreen keyboard.\n\t               * Attempts to refocus the autofocus element via JavaScript will not reopen\n\t               * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n\t               * the modal element if the modal does not contain an autofocus element.\n\t               */\n\t              if (inputWithAutofocus) {\n\t                inputWithAutofocus.focus();\n\t              } else {\n\t                element[0].focus();\n\t              }\n\t            }\n\t          });\n\t        });\n\t      }\n\t    };\n\t  }])\n\n\t  .directive('uibModalAnimationClass', function() {\n\t    return {\n\t      compile: function(tElement, tAttrs) {\n\t        if (tAttrs.modalAnimation) {\n\t          tElement.addClass(tAttrs.uibModalAnimationClass);\n\t        }\n\t      }\n\t    };\n\t  })\n\n\t  .directive('uibModalTransclude', ['$animate', function($animate) {\n\t    return {\n\t      link: function(scope, element, attrs, controller, transclude) {\n\t        transclude(scope.$parent, function(clone) {\n\t          element.empty();\n\t          $animate.enter(clone, element);\n\t        });\n\t      }\n\t    };\n\t  }])\n\n\t  .factory('$uibModalStack', ['$animate', '$animateCss', '$document',\n\t    '$compile', '$rootScope', '$q', '$$multiMap', '$$stackedMap', '$uibPosition',\n\t    function($animate, $animateCss, $document, $compile, $rootScope, $q, $$multiMap, $$stackedMap, $uibPosition) {\n\t      var OPENED_MODAL_CLASS = 'modal-open';\n\n\t      var backdropDomEl, backdropScope;\n\t      var openedWindows = $$stackedMap.createNew();\n\t      var openedClasses = $$multiMap.createNew();\n\t      var $modalStack = {\n\t        NOW_CLOSING_EVENT: 'modal.stack.now-closing'\n\t      };\n\t      var topModalIndex = 0;\n\t      var previousTopOpenedModal = null;\n\n\t      //Modal focus behavior\n\t      var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' +\n\t        'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' +\n\t        'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n\t      var scrollbarPadding;\n\t      var SNAKE_CASE_REGEXP = /[A-Z]/g;\n\n\t      // TODO: extract into common dependency with tooltip\n\t      function snake_case(name) {\n\t        var separator = '-';\n\t        return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n\t          return (pos ? separator : '') + letter.toLowerCase();\n\t        });\n\t      }\n\n\t      function isVisible(element) {\n\t        return !!(element.offsetWidth ||\n\t          element.offsetHeight ||\n\t          element.getClientRects().length);\n\t      }\n\n\t      function backdropIndex() {\n\t        var topBackdropIndex = -1;\n\t        var opened = openedWindows.keys();\n\t        for (var i = 0; i < opened.length; i++) {\n\t          if (openedWindows.get(opened[i]).value.backdrop) {\n\t            topBackdropIndex = i;\n\t          }\n\t        }\n\n\t        // If any backdrop exist, ensure that it's index is always\n\t        // right below the top modal\n\t        if (topBackdropIndex > -1 && topBackdropIndex < topModalIndex) {\n\t          topBackdropIndex = topModalIndex;\n\t        }\n\t        return topBackdropIndex;\n\t      }\n\n\t      $rootScope.$watch(backdropIndex, function(newBackdropIndex) {\n\t        if (backdropScope) {\n\t          backdropScope.index = newBackdropIndex;\n\t        }\n\t      });\n\n\t      function removeModalWindow(modalInstance, elementToReceiveFocus) {\n\t        var modalWindow = openedWindows.get(modalInstance).value;\n\t        var appendToElement = modalWindow.appendTo;\n\n\t        //clean up the stack\n\t        openedWindows.remove(modalInstance);\n\t        previousTopOpenedModal = openedWindows.top();\n\t        if (previousTopOpenedModal) {\n\t          topModalIndex = parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10);\n\t        }\n\n\t        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function() {\n\t          var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;\n\t          openedClasses.remove(modalBodyClass, modalInstance);\n\t          var areAnyOpen = openedClasses.hasKey(modalBodyClass);\n\t          appendToElement.toggleClass(modalBodyClass, areAnyOpen);\n\t          if (!areAnyOpen && scrollbarPadding && scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n\t            if (scrollbarPadding.originalRight) {\n\t              appendToElement.css({paddingRight: scrollbarPadding.originalRight + 'px'});\n\t            } else {\n\t              appendToElement.css({paddingRight: ''});\n\t            }\n\t            scrollbarPadding = null;\n\t          }\n\t          toggleTopWindowClass(true);\n\t        }, modalWindow.closedDeferred);\n\t        checkRemoveBackdrop();\n\n\t        //move focus to specified element if available, or else to body\n\t        if (elementToReceiveFocus && elementToReceiveFocus.focus) {\n\t          elementToReceiveFocus.focus();\n\t        } else if (appendToElement.focus) {\n\t          appendToElement.focus();\n\t        }\n\t      }\n\n\t      // Add or remove \"windowTopClass\" from the top window in the stack\n\t      function toggleTopWindowClass(toggleSwitch) {\n\t        var modalWindow;\n\n\t        if (openedWindows.length() > 0) {\n\t          modalWindow = openedWindows.top().value;\n\t          modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);\n\t        }\n\t      }\n\n\t      function checkRemoveBackdrop() {\n\t        //remove backdrop if no longer needed\n\t        if (backdropDomEl && backdropIndex() === -1) {\n\t          var backdropScopeRef = backdropScope;\n\t          removeAfterAnimate(backdropDomEl, backdropScope, function() {\n\t            backdropScopeRef = null;\n\t          });\n\t          backdropDomEl = undefined;\n\t          backdropScope = undefined;\n\t        }\n\t      }\n\n\t      function removeAfterAnimate(domEl, scope, done, closedDeferred) {\n\t        var asyncDeferred;\n\t        var asyncPromise = null;\n\t        var setIsAsync = function() {\n\t          if (!asyncDeferred) {\n\t            asyncDeferred = $q.defer();\n\t            asyncPromise = asyncDeferred.promise;\n\t          }\n\n\t          return function asyncDone() {\n\t            asyncDeferred.resolve();\n\t          };\n\t        };\n\t        scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);\n\n\t        // Note that it's intentional that asyncPromise might be null.\n\t        // That's when setIsAsync has not been called during the\n\t        // NOW_CLOSING_EVENT broadcast.\n\t        return $q.when(asyncPromise).then(afterAnimating);\n\n\t        function afterAnimating() {\n\t          if (afterAnimating.done) {\n\t            return;\n\t          }\n\t          afterAnimating.done = true;\n\n\t          $animate.leave(domEl).then(function() {\n\t            if (done) {\n\t              done();\n\t            }\n\n\t            domEl.remove();\n\t            if (closedDeferred) {\n\t              closedDeferred.resolve();\n\t            }\n\t          });\n\n\t          scope.$destroy();\n\t        }\n\t      }\n\n\t      $document.on('keydown', keydownListener);\n\n\t      $rootScope.$on('$destroy', function() {\n\t        $document.off('keydown', keydownListener);\n\t      });\n\n\t      function keydownListener(evt) {\n\t        if (evt.isDefaultPrevented()) {\n\t          return evt;\n\t        }\n\n\t        var modal = openedWindows.top();\n\t        if (modal) {\n\t          switch (evt.which) {\n\t            case 27: {\n\t              if (modal.value.keyboard) {\n\t                evt.preventDefault();\n\t                $rootScope.$apply(function() {\n\t                  $modalStack.dismiss(modal.key, 'escape key press');\n\t                });\n\t              }\n\t              break;\n\t            }\n\t            case 9: {\n\t              var list = $modalStack.loadFocusElementList(modal);\n\t              var focusChanged = false;\n\t              if (evt.shiftKey) {\n\t                if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n\t                  focusChanged = $modalStack.focusLastFocusableElement(list);\n\t                }\n\t              } else {\n\t                if ($modalStack.isFocusInLastItem(evt, list)) {\n\t                  focusChanged = $modalStack.focusFirstFocusableElement(list);\n\t                }\n\t              }\n\n\t              if (focusChanged) {\n\t                evt.preventDefault();\n\t                evt.stopPropagation();\n\t              }\n\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\n\t      $modalStack.open = function(modalInstance, modal) {\n\t        var modalOpener = $document[0].activeElement,\n\t          modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;\n\n\t        toggleTopWindowClass(false);\n\n\t        // Store the current top first, to determine what index we ought to use\n\t        // for the current top modal\n\t        previousTopOpenedModal = openedWindows.top();\n\n\t        openedWindows.add(modalInstance, {\n\t          deferred: modal.deferred,\n\t          renderDeferred: modal.renderDeferred,\n\t          closedDeferred: modal.closedDeferred,\n\t          modalScope: modal.scope,\n\t          backdrop: modal.backdrop,\n\t          keyboard: modal.keyboard,\n\t          openedClass: modal.openedClass,\n\t          windowTopClass: modal.windowTopClass,\n\t          animation: modal.animation,\n\t          appendTo: modal.appendTo\n\t        });\n\n\t        openedClasses.put(modalBodyClass, modalInstance);\n\n\t        var appendToElement = modal.appendTo,\n\t            currBackdropIndex = backdropIndex();\n\n\t        if (!appendToElement.length) {\n\t          throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');\n\t        }\n\n\t        if (currBackdropIndex >= 0 && !backdropDomEl) {\n\t          backdropScope = $rootScope.$new(true);\n\t          backdropScope.modalOptions = modal;\n\t          backdropScope.index = currBackdropIndex;\n\t          backdropDomEl = angular.element('<div uib-modal-backdrop=\"modal-backdrop\"></div>');\n\t          backdropDomEl.attr({\n\t            'class': 'modal-backdrop',\n\t            'ng-style': '{\\'z-index\\': 1040 + (index && 1 || 0) + index*10}',\n\t            'uib-modal-animation-class': 'fade',\n\t            'modal-in-class': 'in'\n\t          });\n\t          if (modal.backdropClass) {\n\t            backdropDomEl.addClass(modal.backdropClass);\n\t          }\n\n\t          if (modal.animation) {\n\t            backdropDomEl.attr('modal-animation', 'true');\n\t          }\n\t          $compile(backdropDomEl)(backdropScope);\n\t          $animate.enter(backdropDomEl, appendToElement);\n\t          if ($uibPosition.isScrollable(appendToElement)) {\n\t            scrollbarPadding = $uibPosition.scrollbarPadding(appendToElement);\n\t            if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n\t              appendToElement.css({paddingRight: scrollbarPadding.right + 'px'});\n\t            }\n\t          }\n\t        }\n\n\t        var content;\n\t        if (modal.component) {\n\t          content = document.createElement(snake_case(modal.component.name));\n\t          content = angular.element(content);\n\t          content.attr({\n\t            resolve: '$resolve',\n\t            'modal-instance': '$uibModalInstance',\n\t            close: '$close($value)',\n\t            dismiss: '$dismiss($value)'\n\t          });\n\t        } else {\n\t          content = modal.content;\n\t        }\n\n\t        // Set the top modal index based on the index of the previous top modal\n\t        topModalIndex = previousTopOpenedModal ? parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10) + 1 : 0;\n\t        var angularDomEl = angular.element('<div uib-modal-window=\"modal-window\"></div>');\n\t        angularDomEl.attr({\n\t          'class': 'modal',\n\t          'template-url': modal.windowTemplateUrl,\n\t          'window-top-class': modal.windowTopClass,\n\t          'role': 'dialog',\n\t          'aria-labelledby': modal.ariaLabelledBy,\n\t          'aria-describedby': modal.ariaDescribedBy,\n\t          'size': modal.size,\n\t          'index': topModalIndex,\n\t          'animate': 'animate',\n\t          'ng-style': '{\\'z-index\\': 1050 + $$topModalIndex*10, display: \\'block\\'}',\n\t          'tabindex': -1,\n\t          'uib-modal-animation-class': 'fade',\n\t          'modal-in-class': 'in'\n\t        }).append(content);\n\t        if (modal.windowClass) {\n\t          angularDomEl.addClass(modal.windowClass);\n\t        }\n\n\t        if (modal.animation) {\n\t          angularDomEl.attr('modal-animation', 'true');\n\t        }\n\n\t        appendToElement.addClass(modalBodyClass);\n\t        if (modal.scope) {\n\t          // we need to explicitly add the modal index to the modal scope\n\t          // because it is needed by ngStyle to compute the zIndex property.\n\t          modal.scope.$$topModalIndex = topModalIndex;\n\t        }\n\t        $animate.enter($compile(angularDomEl)(modal.scope), appendToElement);\n\n\t        openedWindows.top().value.modalDomEl = angularDomEl;\n\t        openedWindows.top().value.modalOpener = modalOpener;\n\t      };\n\n\t      function broadcastClosing(modalWindow, resultOrReason, closing) {\n\t        return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;\n\t      }\n\n\t      $modalStack.close = function(modalInstance, result) {\n\t        var modalWindow = openedWindows.get(modalInstance);\n\t        if (modalWindow && broadcastClosing(modalWindow, result, true)) {\n\t          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n\t          modalWindow.value.deferred.resolve(result);\n\t          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n\t          return true;\n\t        }\n\t        return !modalWindow;\n\t      };\n\n\t      $modalStack.dismiss = function(modalInstance, reason) {\n\t        var modalWindow = openedWindows.get(modalInstance);\n\t        if (modalWindow && broadcastClosing(modalWindow, reason, false)) {\n\t          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n\t          modalWindow.value.deferred.reject(reason);\n\t          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n\t          return true;\n\t        }\n\t        return !modalWindow;\n\t      };\n\n\t      $modalStack.dismissAll = function(reason) {\n\t        var topModal = this.getTop();\n\t        while (topModal && this.dismiss(topModal.key, reason)) {\n\t          topModal = this.getTop();\n\t        }\n\t      };\n\n\t      $modalStack.getTop = function() {\n\t        return openedWindows.top();\n\t      };\n\n\t      $modalStack.modalRendered = function(modalInstance) {\n\t        var modalWindow = openedWindows.get(modalInstance);\n\t        if (modalWindow) {\n\t          modalWindow.value.renderDeferred.resolve();\n\t        }\n\t      };\n\n\t      $modalStack.focusFirstFocusableElement = function(list) {\n\t        if (list.length > 0) {\n\t          list[0].focus();\n\t          return true;\n\t        }\n\t        return false;\n\t      };\n\n\t      $modalStack.focusLastFocusableElement = function(list) {\n\t        if (list.length > 0) {\n\t          list[list.length - 1].focus();\n\t          return true;\n\t        }\n\t        return false;\n\t      };\n\n\t      $modalStack.isModalFocused = function(evt, modalWindow) {\n\t        if (evt && modalWindow) {\n\t          var modalDomEl = modalWindow.value.modalDomEl;\n\t          if (modalDomEl && modalDomEl.length) {\n\t            return (evt.target || evt.srcElement) === modalDomEl[0];\n\t          }\n\t        }\n\t        return false;\n\t      };\n\n\t      $modalStack.isFocusInFirstItem = function(evt, list) {\n\t        if (list.length > 0) {\n\t          return (evt.target || evt.srcElement) === list[0];\n\t        }\n\t        return false;\n\t      };\n\n\t      $modalStack.isFocusInLastItem = function(evt, list) {\n\t        if (list.length > 0) {\n\t          return (evt.target || evt.srcElement) === list[list.length - 1];\n\t        }\n\t        return false;\n\t      };\n\n\t      $modalStack.loadFocusElementList = function(modalWindow) {\n\t        if (modalWindow) {\n\t          var modalDomE1 = modalWindow.value.modalDomEl;\n\t          if (modalDomE1 && modalDomE1.length) {\n\t            var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n\t            return elements ?\n\t              Array.prototype.filter.call(elements, function(element) {\n\t                return isVisible(element);\n\t              }) : elements;\n\t          }\n\t        }\n\t      };\n\n\t      return $modalStack;\n\t    }])\n\n\t  .provider('$uibModal', function() {\n\t    var $modalProvider = {\n\t      options: {\n\t        animation: true,\n\t        backdrop: true, //can also be false or 'static'\n\t        keyboard: true\n\t      },\n\t      $get: ['$rootScope', '$q', '$document', '$templateRequest', '$controller', '$uibResolve', '$uibModalStack',\n\t        function ($rootScope, $q, $document, $templateRequest, $controller, $uibResolve, $modalStack) {\n\t          var $modal = {};\n\n\t          function getTemplatePromise(options) {\n\t            return options.template ? $q.when(options.template) :\n\t              $templateRequest(angular.isFunction(options.templateUrl) ?\n\t                options.templateUrl() : options.templateUrl);\n\t          }\n\n\t          var promiseChain = null;\n\t          $modal.getPromiseChain = function() {\n\t            return promiseChain;\n\t          };\n\n\t          $modal.open = function(modalOptions) {\n\t            var modalResultDeferred = $q.defer();\n\t            var modalOpenedDeferred = $q.defer();\n\t            var modalClosedDeferred = $q.defer();\n\t            var modalRenderDeferred = $q.defer();\n\n\t            //prepare an instance of a modal to be injected into controllers and returned to a caller\n\t            var modalInstance = {\n\t              result: modalResultDeferred.promise,\n\t              opened: modalOpenedDeferred.promise,\n\t              closed: modalClosedDeferred.promise,\n\t              rendered: modalRenderDeferred.promise,\n\t              close: function (result) {\n\t                return $modalStack.close(modalInstance, result);\n\t              },\n\t              dismiss: function (reason) {\n\t                return $modalStack.dismiss(modalInstance, reason);\n\t              }\n\t            };\n\n\t            //merge and clean up options\n\t            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);\n\t            modalOptions.resolve = modalOptions.resolve || {};\n\t            modalOptions.appendTo = modalOptions.appendTo || $document.find('body').eq(0);\n\n\t            //verify options\n\t            if (!modalOptions.component && !modalOptions.template && !modalOptions.templateUrl) {\n\t              throw new Error('One of component or template or templateUrl options is required.');\n\t            }\n\n\t            var templateAndResolvePromise;\n\t            if (modalOptions.component) {\n\t              templateAndResolvePromise = $q.when($uibResolve.resolve(modalOptions.resolve, {}, null, null));\n\t            } else {\n\t              templateAndResolvePromise =\n\t                $q.all([getTemplatePromise(modalOptions), $uibResolve.resolve(modalOptions.resolve, {}, null, null)]);\n\t            }\n\n\t            function resolveWithTemplate() {\n\t              return templateAndResolvePromise;\n\t            }\n\n\t            // Wait for the resolution of the existing promise chain.\n\t            // Then switch to our own combined promise dependency (regardless of how the previous modal fared).\n\t            // Then add to $modalStack and resolve opened.\n\t            // Finally clean up the chain variable if no subsequent modal has overwritten it.\n\t            var samePromise;\n\t            samePromise = promiseChain = $q.all([promiseChain])\n\t              .then(resolveWithTemplate, resolveWithTemplate)\n\t              .then(function resolveSuccess(tplAndVars) {\n\t                var providedScope = modalOptions.scope || $rootScope;\n\n\t                var modalScope = providedScope.$new();\n\t                modalScope.$close = modalInstance.close;\n\t                modalScope.$dismiss = modalInstance.dismiss;\n\n\t                modalScope.$on('$destroy', function() {\n\t                  if (!modalScope.$$uibDestructionScheduled) {\n\t                    modalScope.$dismiss('$uibUnscheduledDestruction');\n\t                  }\n\t                });\n\n\t                var modal = {\n\t                  scope: modalScope,\n\t                  deferred: modalResultDeferred,\n\t                  renderDeferred: modalRenderDeferred,\n\t                  closedDeferred: modalClosedDeferred,\n\t                  animation: modalOptions.animation,\n\t                  backdrop: modalOptions.backdrop,\n\t                  keyboard: modalOptions.keyboard,\n\t                  backdropClass: modalOptions.backdropClass,\n\t                  windowTopClass: modalOptions.windowTopClass,\n\t                  windowClass: modalOptions.windowClass,\n\t                  windowTemplateUrl: modalOptions.windowTemplateUrl,\n\t                  ariaLabelledBy: modalOptions.ariaLabelledBy,\n\t                  ariaDescribedBy: modalOptions.ariaDescribedBy,\n\t                  size: modalOptions.size,\n\t                  openedClass: modalOptions.openedClass,\n\t                  appendTo: modalOptions.appendTo\n\t                };\n\n\t                var component = {};\n\t                var ctrlInstance, ctrlInstantiate, ctrlLocals = {};\n\n\t                if (modalOptions.component) {\n\t                  constructLocals(component, false, true, false);\n\t                  component.name = modalOptions.component;\n\t                  modal.component = component;\n\t                } else if (modalOptions.controller) {\n\t                  constructLocals(ctrlLocals, true, false, true);\n\n\t                  // the third param will make the controller instantiate later,private api\n\t                  // @see https://github.com/angular/angular.js/blob/master/src/ng/controller.js#L126\n\t                  ctrlInstantiate = $controller(modalOptions.controller, ctrlLocals, true, modalOptions.controllerAs);\n\t                  if (modalOptions.controllerAs && modalOptions.bindToController) {\n\t                    ctrlInstance = ctrlInstantiate.instance;\n\t                    ctrlInstance.$close = modalScope.$close;\n\t                    ctrlInstance.$dismiss = modalScope.$dismiss;\n\t                    angular.extend(ctrlInstance, {\n\t                      $resolve: ctrlLocals.$scope.$resolve\n\t                    }, providedScope);\n\t                  }\n\n\t                  ctrlInstance = ctrlInstantiate();\n\n\t                  if (angular.isFunction(ctrlInstance.$onInit)) {\n\t                    ctrlInstance.$onInit();\n\t                  }\n\t                }\n\n\t                if (!modalOptions.component) {\n\t                  modal.content = tplAndVars[0];\n\t                }\n\n\t                $modalStack.open(modalInstance, modal);\n\t                modalOpenedDeferred.resolve(true);\n\n\t                function constructLocals(obj, template, instanceOnScope, injectable) {\n\t                  obj.$scope = modalScope;\n\t                  obj.$scope.$resolve = {};\n\t                  if (instanceOnScope) {\n\t                    obj.$scope.$uibModalInstance = modalInstance;\n\t                  } else {\n\t                    obj.$uibModalInstance = modalInstance;\n\t                  }\n\n\t                  var resolves = template ? tplAndVars[1] : tplAndVars;\n\t                  angular.forEach(resolves, function(value, key) {\n\t                    if (injectable) {\n\t                      obj[key] = value;\n\t                    }\n\n\t                    obj.$scope.$resolve[key] = value;\n\t                  });\n\t                }\n\t            }, function resolveError(reason) {\n\t              modalOpenedDeferred.reject(reason);\n\t              modalResultDeferred.reject(reason);\n\t            })['finally'](function() {\n\t              if (promiseChain === samePromise) {\n\t                promiseChain = null;\n\t              }\n\t            });\n\n\t            return modalInstance;\n\t          };\n\n\t          return $modal;\n\t        }\n\t      ]\n\t    };\n\n\t    return $modalProvider;\n\t  });\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(66);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../css-loader/index.js!./position.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../css-loader/index.js!./position.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".uib-position-measure{display:block!important;visibility:hidden!important;position:absolute!important;top:-9999px!important;left:-9999px!important}.uib-position-scrollbar-measure{position:absolute!important;top:-9999px!important;width:50px!important;height:50px!important;overflow:scroll!important}.uib-position-body-scrollbar-measure{overflow:scroll!important}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(68);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./modal.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./modal.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".modal,.modal-open{overflow:hidden}.modal{display:none;position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;-webkit-overflow-scrolling:touch;outline:0}.modal.fade .modal-dialog{-webkit-transform:translateY(-25%);transform:translateY(-25%);-webkit-transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out}.modal.in .modal-dialog{-webkit-transform:translate(0);transform:translate(0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;border:1px solid #999;border:1px solid rgba(0,0,0,.2);border-radius:6px;box-shadow:0 3px 9px rgba(0,0,0,.5);background-clip:padding-box;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0;filter:alpha(opacity=0)}.modal-backdrop.in{opacity:.5;filter:alpha(opacity=50)}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.42857143}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer .btn+.btn{margin-left:5px;margin-bottom:0}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.modal-footer .btn-block+.btn-block{margin-left:0}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:768px){.modal-dialog{width:600px;margin:30px auto}.modal-content{box-shadow:0 5px 15px rgba(0,0,0,.5)}.modal-sm{width:300px}}@media (min-width:992px){.modal-lg{width:900px}}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\trunFunc.$inject = [\"$templateCache\"];\n\tfunction runFunc($templateCache) {\n\t    'ngInject';\n\t    $templateCache.put('uib/template/modal/window.html', \"<div class=\\\"modal-dialog {{size ? 'modal-' + size : ''}}\\\">\\n      <div class=\\\"modal-content\\\" uib-modal-transclude></div>\\n    </div>\");\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = runFunc;\n\t;\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\t__webpack_require__(71);\n\t__webpack_require__(73);\n\t__webpack_require__(80);\n\tvar carousel_run_1 = __webpack_require__(82);\n\tvar module = angular.module('ep.carousel', [\n\t    'ngSanitize',\n\t    'ngAnimate',\n\t    'ui.bootstrap.carousel'\n\t]);\n\tmodule.run(carousel_run_1.default);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(72);\n\tmodule.exports = 'ngAnimate';\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports) {\n\n\t/**\n\t * @license AngularJS v1.5.5\n\t * (c) 2010-2016 Google, Inc. http://angularjs.org\n\t * License: MIT\n\t */\n\t(function(window, angular) {'use strict';\n\n\t/* jshint ignore:start */\n\tvar noop        = angular.noop;\n\tvar copy        = angular.copy;\n\tvar extend      = angular.extend;\n\tvar jqLite      = angular.element;\n\tvar forEach     = angular.forEach;\n\tvar isArray     = angular.isArray;\n\tvar isString    = angular.isString;\n\tvar isObject    = angular.isObject;\n\tvar isUndefined = angular.isUndefined;\n\tvar isDefined   = angular.isDefined;\n\tvar isFunction  = angular.isFunction;\n\tvar isElement   = angular.isElement;\n\n\tvar ELEMENT_NODE = 1;\n\tvar COMMENT_NODE = 8;\n\n\tvar ADD_CLASS_SUFFIX = '-add';\n\tvar REMOVE_CLASS_SUFFIX = '-remove';\n\tvar EVENT_CLASS_PREFIX = 'ng-';\n\tvar ACTIVE_CLASS_SUFFIX = '-active';\n\tvar PREPARE_CLASS_SUFFIX = '-prepare';\n\n\tvar NG_ANIMATE_CLASSNAME = 'ng-animate';\n\tvar NG_ANIMATE_CHILDREN_DATA = '$$ngAnimateChildren';\n\n\t// Detect proper transitionend/animationend event names.\n\tvar CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;\n\n\t// If unprefixed events are not supported but webkit-prefixed are, use the latter.\n\t// Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.\n\t// Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`\n\t// but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.\n\t// Register both events in case `window.onanimationend` is not supported because of that,\n\t// do the same for `transitionend` as Safari is likely to exhibit similar behavior.\n\t// Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit\n\t// therefore there is no reason to test anymore for other vendor prefixes:\n\t// http://caniuse.com/#search=transition\n\tif (isUndefined(window.ontransitionend) && isDefined(window.onwebkittransitionend)) {\n\t  CSS_PREFIX = '-webkit-';\n\t  TRANSITION_PROP = 'WebkitTransition';\n\t  TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\n\t} else {\n\t  TRANSITION_PROP = 'transition';\n\t  TRANSITIONEND_EVENT = 'transitionend';\n\t}\n\n\tif (isUndefined(window.onanimationend) && isDefined(window.onwebkitanimationend)) {\n\t  CSS_PREFIX = '-webkit-';\n\t  ANIMATION_PROP = 'WebkitAnimation';\n\t  ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';\n\t} else {\n\t  ANIMATION_PROP = 'animation';\n\t  ANIMATIONEND_EVENT = 'animationend';\n\t}\n\n\tvar DURATION_KEY = 'Duration';\n\tvar PROPERTY_KEY = 'Property';\n\tvar DELAY_KEY = 'Delay';\n\tvar TIMING_KEY = 'TimingFunction';\n\tvar ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';\n\tvar ANIMATION_PLAYSTATE_KEY = 'PlayState';\n\tvar SAFE_FAST_FORWARD_DURATION_VALUE = 9999;\n\n\tvar ANIMATION_DELAY_PROP = ANIMATION_PROP + DELAY_KEY;\n\tvar ANIMATION_DURATION_PROP = ANIMATION_PROP + DURATION_KEY;\n\tvar TRANSITION_DELAY_PROP = TRANSITION_PROP + DELAY_KEY;\n\tvar TRANSITION_DURATION_PROP = TRANSITION_PROP + DURATION_KEY;\n\n\tvar isPromiseLike = function(p) {\n\t  return p && p.then ? true : false;\n\t};\n\n\tvar ngMinErr = angular.$$minErr('ng');\n\tfunction assertArg(arg, name, reason) {\n\t  if (!arg) {\n\t    throw ngMinErr('areq', \"Argument '{0}' is {1}\", (name || '?'), (reason || \"required\"));\n\t  }\n\t  return arg;\n\t}\n\n\tfunction mergeClasses(a,b) {\n\t  if (!a && !b) return '';\n\t  if (!a) return b;\n\t  if (!b) return a;\n\t  if (isArray(a)) a = a.join(' ');\n\t  if (isArray(b)) b = b.join(' ');\n\t  return a + ' ' + b;\n\t}\n\n\tfunction packageStyles(options) {\n\t  var styles = {};\n\t  if (options && (options.to || options.from)) {\n\t    styles.to = options.to;\n\t    styles.from = options.from;\n\t  }\n\t  return styles;\n\t}\n\n\tfunction pendClasses(classes, fix, isPrefix) {\n\t  var className = '';\n\t  classes = isArray(classes)\n\t      ? classes\n\t      : classes && isString(classes) && classes.length\n\t          ? classes.split(/\\s+/)\n\t          : [];\n\t  forEach(classes, function(klass, i) {\n\t    if (klass && klass.length > 0) {\n\t      className += (i > 0) ? ' ' : '';\n\t      className += isPrefix ? fix + klass\n\t                            : klass + fix;\n\t    }\n\t  });\n\t  return className;\n\t}\n\n\tfunction removeFromArray(arr, val) {\n\t  var index = arr.indexOf(val);\n\t  if (val >= 0) {\n\t    arr.splice(index, 1);\n\t  }\n\t}\n\n\tfunction stripCommentsFromElement(element) {\n\t  if (element instanceof jqLite) {\n\t    switch (element.length) {\n\t      case 0:\n\t        return [];\n\t        break;\n\n\t      case 1:\n\t        // there is no point of stripping anything if the element\n\t        // is the only element within the jqLite wrapper.\n\t        // (it's important that we retain the element instance.)\n\t        if (element[0].nodeType === ELEMENT_NODE) {\n\t          return element;\n\t        }\n\t        break;\n\n\t      default:\n\t        return jqLite(extractElementNode(element));\n\t        break;\n\t    }\n\t  }\n\n\t  if (element.nodeType === ELEMENT_NODE) {\n\t    return jqLite(element);\n\t  }\n\t}\n\n\tfunction extractElementNode(element) {\n\t  if (!element[0]) return element;\n\t  for (var i = 0; i < element.length; i++) {\n\t    var elm = element[i];\n\t    if (elm.nodeType == ELEMENT_NODE) {\n\t      return elm;\n\t    }\n\t  }\n\t}\n\n\tfunction $$addClass($$jqLite, element, className) {\n\t  forEach(element, function(elm) {\n\t    $$jqLite.addClass(elm, className);\n\t  });\n\t}\n\n\tfunction $$removeClass($$jqLite, element, className) {\n\t  forEach(element, function(elm) {\n\t    $$jqLite.removeClass(elm, className);\n\t  });\n\t}\n\n\tfunction applyAnimationClassesFactory($$jqLite) {\n\t  return function(element, options) {\n\t    if (options.addClass) {\n\t      $$addClass($$jqLite, element, options.addClass);\n\t      options.addClass = null;\n\t    }\n\t    if (options.removeClass) {\n\t      $$removeClass($$jqLite, element, options.removeClass);\n\t      options.removeClass = null;\n\t    }\n\t  }\n\t}\n\n\tfunction prepareAnimationOptions(options) {\n\t  options = options || {};\n\t  if (!options.$$prepared) {\n\t    var domOperation = options.domOperation || noop;\n\t    options.domOperation = function() {\n\t      options.$$domOperationFired = true;\n\t      domOperation();\n\t      domOperation = noop;\n\t    };\n\t    options.$$prepared = true;\n\t  }\n\t  return options;\n\t}\n\n\tfunction applyAnimationStyles(element, options) {\n\t  applyAnimationFromStyles(element, options);\n\t  applyAnimationToStyles(element, options);\n\t}\n\n\tfunction applyAnimationFromStyles(element, options) {\n\t  if (options.from) {\n\t    element.css(options.from);\n\t    options.from = null;\n\t  }\n\t}\n\n\tfunction applyAnimationToStyles(element, options) {\n\t  if (options.to) {\n\t    element.css(options.to);\n\t    options.to = null;\n\t  }\n\t}\n\n\tfunction mergeAnimationDetails(element, oldAnimation, newAnimation) {\n\t  var target = oldAnimation.options || {};\n\t  var newOptions = newAnimation.options || {};\n\n\t  var toAdd = (target.addClass || '') + ' ' + (newOptions.addClass || '');\n\t  var toRemove = (target.removeClass || '') + ' ' + (newOptions.removeClass || '');\n\t  var classes = resolveElementClasses(element.attr('class'), toAdd, toRemove);\n\n\t  if (newOptions.preparationClasses) {\n\t    target.preparationClasses = concatWithSpace(newOptions.preparationClasses, target.preparationClasses);\n\t    delete newOptions.preparationClasses;\n\t  }\n\n\t  // noop is basically when there is no callback; otherwise something has been set\n\t  var realDomOperation = target.domOperation !== noop ? target.domOperation : null;\n\n\t  extend(target, newOptions);\n\n\t  // TODO(matsko or sreeramu): proper fix is to maintain all animation callback in array and call at last,but now only leave has the callback so no issue with this.\n\t  if (realDomOperation) {\n\t    target.domOperation = realDomOperation;\n\t  }\n\n\t  if (classes.addClass) {\n\t    target.addClass = classes.addClass;\n\t  } else {\n\t    target.addClass = null;\n\t  }\n\n\t  if (classes.removeClass) {\n\t    target.removeClass = classes.removeClass;\n\t  } else {\n\t    target.removeClass = null;\n\t  }\n\n\t  oldAnimation.addClass = target.addClass;\n\t  oldAnimation.removeClass = target.removeClass;\n\n\t  return target;\n\t}\n\n\tfunction resolveElementClasses(existing, toAdd, toRemove) {\n\t  var ADD_CLASS = 1;\n\t  var REMOVE_CLASS = -1;\n\n\t  var flags = {};\n\t  existing = splitClassesToLookup(existing);\n\n\t  toAdd = splitClassesToLookup(toAdd);\n\t  forEach(toAdd, function(value, key) {\n\t    flags[key] = ADD_CLASS;\n\t  });\n\n\t  toRemove = splitClassesToLookup(toRemove);\n\t  forEach(toRemove, function(value, key) {\n\t    flags[key] = flags[key] === ADD_CLASS ? null : REMOVE_CLASS;\n\t  });\n\n\t  var classes = {\n\t    addClass: '',\n\t    removeClass: ''\n\t  };\n\n\t  forEach(flags, function(val, klass) {\n\t    var prop, allow;\n\t    if (val === ADD_CLASS) {\n\t      prop = 'addClass';\n\t      allow = !existing[klass];\n\t    } else if (val === REMOVE_CLASS) {\n\t      prop = 'removeClass';\n\t      allow = existing[klass];\n\t    }\n\t    if (allow) {\n\t      if (classes[prop].length) {\n\t        classes[prop] += ' ';\n\t      }\n\t      classes[prop] += klass;\n\t    }\n\t  });\n\n\t  function splitClassesToLookup(classes) {\n\t    if (isString(classes)) {\n\t      classes = classes.split(' ');\n\t    }\n\n\t    var obj = {};\n\t    forEach(classes, function(klass) {\n\t      // sometimes the split leaves empty string values\n\t      // incase extra spaces were applied to the options\n\t      if (klass.length) {\n\t        obj[klass] = true;\n\t      }\n\t    });\n\t    return obj;\n\t  }\n\n\t  return classes;\n\t}\n\n\tfunction getDomNode(element) {\n\t  return (element instanceof angular.element) ? element[0] : element;\n\t}\n\n\tfunction applyGeneratedPreparationClasses(element, event, options) {\n\t  var classes = '';\n\t  if (event) {\n\t    classes = pendClasses(event, EVENT_CLASS_PREFIX, true);\n\t  }\n\t  if (options.addClass) {\n\t    classes = concatWithSpace(classes, pendClasses(options.addClass, ADD_CLASS_SUFFIX));\n\t  }\n\t  if (options.removeClass) {\n\t    classes = concatWithSpace(classes, pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX));\n\t  }\n\t  if (classes.length) {\n\t    options.preparationClasses = classes;\n\t    element.addClass(classes);\n\t  }\n\t}\n\n\tfunction clearGeneratedClasses(element, options) {\n\t  if (options.preparationClasses) {\n\t    element.removeClass(options.preparationClasses);\n\t    options.preparationClasses = null;\n\t  }\n\t  if (options.activeClasses) {\n\t    element.removeClass(options.activeClasses);\n\t    options.activeClasses = null;\n\t  }\n\t}\n\n\tfunction blockTransitions(node, duration) {\n\t  // we use a negative delay value since it performs blocking\n\t  // yet it doesn't kill any existing transitions running on the\n\t  // same element which makes this safe for class-based animations\n\t  var value = duration ? '-' + duration + 's' : '';\n\t  applyInlineStyle(node, [TRANSITION_DELAY_PROP, value]);\n\t  return [TRANSITION_DELAY_PROP, value];\n\t}\n\n\tfunction blockKeyframeAnimations(node, applyBlock) {\n\t  var value = applyBlock ? 'paused' : '';\n\t  var key = ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY;\n\t  applyInlineStyle(node, [key, value]);\n\t  return [key, value];\n\t}\n\n\tfunction applyInlineStyle(node, styleTuple) {\n\t  var prop = styleTuple[0];\n\t  var value = styleTuple[1];\n\t  node.style[prop] = value;\n\t}\n\n\tfunction concatWithSpace(a,b) {\n\t  if (!a) return b;\n\t  if (!b) return a;\n\t  return a + ' ' + b;\n\t}\n\n\tvar $$rAFSchedulerFactory = ['$$rAF', function($$rAF) {\n\t  var queue, cancelFn;\n\n\t  function scheduler(tasks) {\n\t    // we make a copy since RAFScheduler mutates the state\n\t    // of the passed in array variable and this would be difficult\n\t    // to track down on the outside code\n\t    queue = queue.concat(tasks);\n\t    nextTick();\n\t  }\n\n\t  queue = scheduler.queue = [];\n\n\t  /* waitUntilQuiet does two things:\n\t   * 1. It will run the FINAL `fn` value only when an uncanceled RAF has passed through\n\t   * 2. It will delay the next wave of tasks from running until the quiet `fn` has run.\n\t   *\n\t   * The motivation here is that animation code can request more time from the scheduler\n\t   * before the next wave runs. This allows for certain DOM properties such as classes to\n\t   * be resolved in time for the next animation to run.\n\t   */\n\t  scheduler.waitUntilQuiet = function(fn) {\n\t    if (cancelFn) cancelFn();\n\n\t    cancelFn = $$rAF(function() {\n\t      cancelFn = null;\n\t      fn();\n\t      nextTick();\n\t    });\n\t  };\n\n\t  return scheduler;\n\n\t  function nextTick() {\n\t    if (!queue.length) return;\n\n\t    var items = queue.shift();\n\t    for (var i = 0; i < items.length; i++) {\n\t      items[i]();\n\t    }\n\n\t    if (!cancelFn) {\n\t      $$rAF(function() {\n\t        if (!cancelFn) nextTick();\n\t      });\n\t    }\n\t  }\n\t}];\n\n\t/**\n\t * @ngdoc directive\n\t * @name ngAnimateChildren\n\t * @restrict AE\n\t * @element ANY\n\t *\n\t * @description\n\t *\n\t * ngAnimateChildren allows you to specify that children of this element should animate even if any\n\t * of the children's parents are currently animating. By default, when an element has an active `enter`, `leave`, or `move`\n\t * (structural) animation, child elements that also have an active structural animation are not animated.\n\t *\n\t * Note that even if `ngAnimteChildren` is set, no child animations will run when the parent element is removed from the DOM (`leave` animation).\n\t *\n\t *\n\t * @param {string} ngAnimateChildren If the value is empty, `true` or `on`,\n\t *     then child animations are allowed. If the value is `false`, child animations are not allowed.\n\t *\n\t * @example\n\t * <example module=\"ngAnimateChildren\" name=\"ngAnimateChildren\" deps=\"angular-animate.js\" animations=\"true\">\n\t     <file name=\"index.html\">\n\t       <div ng-controller=\"mainController as main\">\n\t         <label>Show container? <input type=\"checkbox\" ng-model=\"main.enterElement\" /></label>\n\t         <label>Animate children? <input type=\"checkbox\" ng-model=\"main.animateChildren\" /></label>\n\t         <hr>\n\t         <div ng-animate-children=\"{{main.animateChildren}}\">\n\t           <div ng-if=\"main.enterElement\" class=\"container\">\n\t             List of items:\n\t             <div ng-repeat=\"item in [0, 1, 2, 3]\" class=\"item\">Item {{item}}</div>\n\t           </div>\n\t         </div>\n\t       </div>\n\t     </file>\n\t     <file name=\"animations.css\">\n\n\t      .container.ng-enter,\n\t      .container.ng-leave {\n\t        transition: all ease 1.5s;\n\t      }\n\n\t      .container.ng-enter,\n\t      .container.ng-leave-active {\n\t        opacity: 0;\n\t      }\n\n\t      .container.ng-leave,\n\t      .container.ng-enter-active {\n\t        opacity: 1;\n\t      }\n\n\t      .item {\n\t        background: firebrick;\n\t        color: #FFF;\n\t        margin-bottom: 10px;\n\t      }\n\n\t      .item.ng-enter,\n\t      .item.ng-leave {\n\t        transition: transform 1.5s ease;\n\t      }\n\n\t      .item.ng-enter {\n\t        transform: translateX(50px);\n\t      }\n\n\t      .item.ng-enter-active {\n\t        transform: translateX(0);\n\t      }\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('ngAnimateChildren', ['ngAnimate'])\n\t        .controller('mainController', function() {\n\t          this.animateChildren = false;\n\t          this.enterElement = false;\n\t        });\n\t    </file>\n\t  </example>\n\t */\n\tvar $$AnimateChildrenDirective = ['$interpolate', function($interpolate) {\n\t  return {\n\t    link: function(scope, element, attrs) {\n\t      var val = attrs.ngAnimateChildren;\n\t      if (angular.isString(val) && val.length === 0) { //empty attribute\n\t        element.data(NG_ANIMATE_CHILDREN_DATA, true);\n\t      } else {\n\t        // Interpolate and set the value, so that it is available to\n\t        // animations that run right after compilation\n\t        setData($interpolate(val)(scope));\n\t        attrs.$observe('ngAnimateChildren', setData);\n\t      }\n\n\t      function setData(value) {\n\t        value = value === 'on' || value === 'true';\n\t        element.data(NG_ANIMATE_CHILDREN_DATA, value);\n\t      }\n\t    }\n\t  };\n\t}];\n\n\tvar ANIMATE_TIMER_KEY = '$$animateCss';\n\n\t/**\n\t * @ngdoc service\n\t * @name $animateCss\n\t * @kind object\n\t *\n\t * @description\n\t * The `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes\n\t * from a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT\n\t * to side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or\n\t * directives to create more complex animations that can be purely driven using CSS code.\n\t *\n\t * Note that only browsers that support CSS transitions and/or keyframe animations are capable of\n\t * rendering animations triggered via `$animateCss` (bad news for IE9 and lower).\n\t *\n\t * ## Usage\n\t * Once again, `$animateCss` is designed to be used inside of a registered JavaScript animation that\n\t * is powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,\n\t * any automatic control over cancelling animations and/or preventing animations from being run on\n\t * child elements will not be handled by Angular. For this to work as expected, please use `$animate` to\n\t * trigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger\n\t * the CSS animation.\n\t *\n\t * The example below shows how we can create a folding animation on an element using `ng-if`:\n\t *\n\t * ```html\n\t * <!-- notice the `fold-animation` CSS class -->\n\t * <div ng-if=\"onOff\" class=\"fold-animation\">\n\t *   This element will go BOOM\n\t * </div>\n\t * <button ng-click=\"onOff=true\">Fold In</button>\n\t * ```\n\t *\n\t * Now we create the **JavaScript animation** that will trigger the CSS transition:\n\t *\n\t * ```js\n\t * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n\t *   return {\n\t *     enter: function(element, doneFn) {\n\t *       var height = element[0].offsetHeight;\n\t *       return $animateCss(element, {\n\t *         from: { height:'0px' },\n\t *         to: { height:height + 'px' },\n\t *         duration: 1 // one second\n\t *       });\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * ## More Advanced Uses\n\t *\n\t * `$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks\n\t * like `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.\n\t *\n\t * This also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,\n\t * applying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with\n\t * `$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order\n\t * to provide a working animation that will run in CSS.\n\t *\n\t * The example below showcases a more advanced version of the `.fold-animation` from the example above:\n\t *\n\t * ```js\n\t * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n\t *   return {\n\t *     enter: function(element, doneFn) {\n\t *       var height = element[0].offsetHeight;\n\t *       return $animateCss(element, {\n\t *         addClass: 'red large-text pulse-twice',\n\t *         easing: 'ease-out',\n\t *         from: { height:'0px' },\n\t *         to: { height:height + 'px' },\n\t *         duration: 1 // one second\n\t *       });\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * Since we're adding/removing CSS classes then the CSS transition will also pick those up:\n\t *\n\t * ```css\n\t * /&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,\n\t * the CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/\n\t * .red { background:red; }\n\t * .large-text { font-size:20px; }\n\t *\n\t * /&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/\n\t * .pulse-twice {\n\t *   animation: 0.5s pulse linear 2;\n\t *   -webkit-animation: 0.5s pulse linear 2;\n\t * }\n\t *\n\t * @keyframes pulse {\n\t *   from { transform: scale(0.5); }\n\t *   to { transform: scale(1.5); }\n\t * }\n\t *\n\t * @-webkit-keyframes pulse {\n\t *   from { -webkit-transform: scale(0.5); }\n\t *   to { -webkit-transform: scale(1.5); }\n\t * }\n\t * ```\n\t *\n\t * Given this complex combination of CSS classes, styles and options, `$animateCss` will figure everything out and make the animation happen.\n\t *\n\t * ## How the Options are handled\n\t *\n\t * `$animateCss` is very versatile and intelligent when it comes to figuring out what configurations to apply to the element to ensure the animation\n\t * works with the options provided. Say for example we were adding a class that contained a keyframe value and we wanted to also animate some inline\n\t * styles using the `from` and `to` properties.\n\t *\n\t * ```js\n\t * var animator = $animateCss(element, {\n\t *   from: { background:'red' },\n\t *   to: { background:'blue' }\n\t * });\n\t * animator.start();\n\t * ```\n\t *\n\t * ```css\n\t * .rotating-animation {\n\t *   animation:0.5s rotate linear;\n\t *   -webkit-animation:0.5s rotate linear;\n\t * }\n\t *\n\t * @keyframes rotate {\n\t *   from { transform: rotate(0deg); }\n\t *   to { transform: rotate(360deg); }\n\t * }\n\t *\n\t * @-webkit-keyframes rotate {\n\t *   from { -webkit-transform: rotate(0deg); }\n\t *   to { -webkit-transform: rotate(360deg); }\n\t * }\n\t * ```\n\t *\n\t * The missing pieces here are that we do not have a transition set (within the CSS code nor within the `$animateCss` options) and the duration of the animation is\n\t * going to be detected from what the keyframe styles on the CSS class are. In this event, `$animateCss` will automatically create an inline transition\n\t * style matching the duration detected from the keyframe style (which is present in the CSS class that is being added) and then prepare both the transition\n\t * and keyframe animations to run in parallel on the element. Then when the animation is underway the provided `from` and `to` CSS styles will be applied\n\t * and spread across the transition and keyframe animation.\n\t *\n\t * ## What is returned\n\t *\n\t * `$animateCss` works in two stages: a preparation phase and an animation phase. Therefore when `$animateCss` is first called it will NOT actually\n\t * start the animation. All that is going on here is that the element is being prepared for the animation (which means that the generated CSS classes are\n\t * added and removed on the element). Once `$animateCss` is called it will return an object with the following properties:\n\t *\n\t * ```js\n\t * var animator = $animateCss(element, { ... });\n\t * ```\n\t *\n\t * Now what do the contents of our `animator` variable look like:\n\t *\n\t * ```js\n\t * {\n\t *   // starts the animation\n\t *   start: Function,\n\t *\n\t *   // ends (aborts) the animation\n\t *   end: Function\n\t * }\n\t * ```\n\t *\n\t * To actually start the animation we need to run `animation.start()` which will then return a promise that we can hook into to detect when the animation ends.\n\t * If we choose not to run the animation then we MUST run `animation.end()` to perform a cleanup on the element (since some CSS classes and styles may have been\n\t * applied to the element during the preparation phase). Note that all other properties such as duration, delay, transitions and keyframes are just properties\n\t * and that changing them will not reconfigure the parameters of the animation.\n\t *\n\t * ### runner.done() vs runner.then()\n\t * It is documented that `animation.start()` will return a promise object and this is true, however, there is also an additional method available on the\n\t * runner called `.done(callbackFn)`. The done method works the same as `.finally(callbackFn)`, however, it does **not trigger a digest to occur**.\n\t * Therefore, for performance reasons, it's always best to use `runner.done(callback)` instead of `runner.then()`, `runner.catch()` or `runner.finally()`\n\t * unless you really need a digest to kick off afterwards.\n\t *\n\t * Keep in mind that, to make this easier, ngAnimate has tweaked the JS animations API to recognize when a runner instance is returned from $animateCss\n\t * (so there is no need to call `runner.done(doneFn)` inside of your JavaScript animation code).\n\t * Check the {@link ngAnimate.$animateCss#usage animation code above} to see how this works.\n\t *\n\t * @param {DOMElement} element the element that will be animated\n\t * @param {object} options the animation-related options that will be applied during the animation\n\t *\n\t * * `event` - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of `ng-EVENT` and `ng-EVENT-active` will be applied\n\t * to the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)\n\t * * `structural` - Indicates that the `ng-` prefix will be added to the event class. Setting to `false` or omitting will turn `ng-EVENT` and\n\t * `ng-EVENT-active` in `EVENT` and `EVENT-active`. Unused if `event` is omitted.\n\t * * `easing` - The CSS easing value that will be applied to the transition or keyframe animation (or both).\n\t * * `transitionStyle` - The raw CSS transition style that will be used (e.g. `1s linear all`).\n\t * * `keyframeStyle` - The raw CSS keyframe animation style that will be used (e.g. `1s my_animation linear`).\n\t * * `from` - The starting CSS styles (a key/value object) that will be applied at the start of the animation.\n\t * * `to` - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.\n\t * * `addClass` - A space separated list of CSS classes that will be added to the element and spread across the animation.\n\t * * `removeClass` - A space separated list of CSS classes that will be removed from the element and spread across the animation.\n\t * * `duration` - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `0`\n\t * is provided then the animation will be skipped entirely.\n\t * * `delay` - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `true` is\n\t * used then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value\n\t * of the element will be `transition-delay: DETECTED_VALUE`). Using `true` is useful when you want the CSS classes and inline styles to all share the same\n\t * CSS delay value.\n\t * * `stagger` - A numeric time value representing the delay between successively animated elements\n\t * ({@link ngAnimate#css-staggering-animations Click here to learn how CSS-based staggering works in ngAnimate.})\n\t * * `staggerIndex` - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a\n\t *   `stagger` option value of `0.1` is used then there will be a stagger delay of `600ms`)\n\t * * `applyClassesEarly` - Whether or not the classes being added or removed will be used when detecting the animation. This is set by `$animate` when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)\n\t * * `cleanupStyles` - Whether or not the provided `from` and `to` styles will be removed once\n\t *    the animation is closed. This is useful for when the styles are used purely for the sake of\n\t *    the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation).\n\t *    By default this value is set to `false`.\n\t *\n\t * @return {object} an object with start and end methods and details about the animation.\n\t *\n\t * * `start` - The method to start the animation. This will return a `Promise` when called.\n\t * * `end` - This method will cancel the animation and remove all applied CSS classes and styles.\n\t */\n\tvar ONE_SECOND = 1000;\n\tvar BASE_TEN = 10;\n\n\tvar ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\n\tvar CLOSING_TIME_BUFFER = 1.5;\n\n\tvar DETECT_CSS_PROPERTIES = {\n\t  transitionDuration:      TRANSITION_DURATION_PROP,\n\t  transitionDelay:         TRANSITION_DELAY_PROP,\n\t  transitionProperty:      TRANSITION_PROP + PROPERTY_KEY,\n\t  animationDuration:       ANIMATION_DURATION_PROP,\n\t  animationDelay:          ANIMATION_DELAY_PROP,\n\t  animationIterationCount: ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY\n\t};\n\n\tvar DETECT_STAGGER_CSS_PROPERTIES = {\n\t  transitionDuration:      TRANSITION_DURATION_PROP,\n\t  transitionDelay:         TRANSITION_DELAY_PROP,\n\t  animationDuration:       ANIMATION_DURATION_PROP,\n\t  animationDelay:          ANIMATION_DELAY_PROP\n\t};\n\n\tfunction getCssKeyframeDurationStyle(duration) {\n\t  return [ANIMATION_DURATION_PROP, duration + 's'];\n\t}\n\n\tfunction getCssDelayStyle(delay, isKeyframeAnimation) {\n\t  var prop = isKeyframeAnimation ? ANIMATION_DELAY_PROP : TRANSITION_DELAY_PROP;\n\t  return [prop, delay + 's'];\n\t}\n\n\tfunction computeCssStyles($window, element, properties) {\n\t  var styles = Object.create(null);\n\t  var detectedStyles = $window.getComputedStyle(element) || {};\n\t  forEach(properties, function(formalStyleName, actualStyleName) {\n\t    var val = detectedStyles[formalStyleName];\n\t    if (val) {\n\t      var c = val.charAt(0);\n\n\t      // only numerical-based values have a negative sign or digit as the first value\n\t      if (c === '-' || c === '+' || c >= 0) {\n\t        val = parseMaxTime(val);\n\t      }\n\n\t      // by setting this to null in the event that the delay is not set or is set directly as 0\n\t      // then we can still allow for negative values to be used later on and not mistake this\n\t      // value for being greater than any other negative value.\n\t      if (val === 0) {\n\t        val = null;\n\t      }\n\t      styles[actualStyleName] = val;\n\t    }\n\t  });\n\n\t  return styles;\n\t}\n\n\tfunction parseMaxTime(str) {\n\t  var maxValue = 0;\n\t  var values = str.split(/\\s*,\\s*/);\n\t  forEach(values, function(value) {\n\t    // it's always safe to consider only second values and omit `ms` values since\n\t    // getComputedStyle will always handle the conversion for us\n\t    if (value.charAt(value.length - 1) == 's') {\n\t      value = value.substring(0, value.length - 1);\n\t    }\n\t    value = parseFloat(value) || 0;\n\t    maxValue = maxValue ? Math.max(value, maxValue) : value;\n\t  });\n\t  return maxValue;\n\t}\n\n\tfunction truthyTimingValue(val) {\n\t  return val === 0 || val != null;\n\t}\n\n\tfunction getCssTransitionDurationStyle(duration, applyOnlyDuration) {\n\t  var style = TRANSITION_PROP;\n\t  var value = duration + 's';\n\t  if (applyOnlyDuration) {\n\t    style += DURATION_KEY;\n\t  } else {\n\t    value += ' linear all';\n\t  }\n\t  return [style, value];\n\t}\n\n\tfunction createLocalCacheLookup() {\n\t  var cache = Object.create(null);\n\t  return {\n\t    flush: function() {\n\t      cache = Object.create(null);\n\t    },\n\n\t    count: function(key) {\n\t      var entry = cache[key];\n\t      return entry ? entry.total : 0;\n\t    },\n\n\t    get: function(key) {\n\t      var entry = cache[key];\n\t      return entry && entry.value;\n\t    },\n\n\t    put: function(key, value) {\n\t      if (!cache[key]) {\n\t        cache[key] = { total: 1, value: value };\n\t      } else {\n\t        cache[key].total++;\n\t      }\n\t    }\n\t  };\n\t}\n\n\t// we do not reassign an already present style value since\n\t// if we detect the style property value again we may be\n\t// detecting styles that were added via the `from` styles.\n\t// We make use of `isDefined` here since an empty string\n\t// or null value (which is what getPropertyValue will return\n\t// for a non-existing style) will still be marked as a valid\n\t// value for the style (a falsy value implies that the style\n\t// is to be removed at the end of the animation). If we had a simple\n\t// \"OR\" statement then it would not be enough to catch that.\n\tfunction registerRestorableStyles(backup, node, properties) {\n\t  forEach(properties, function(prop) {\n\t    backup[prop] = isDefined(backup[prop])\n\t        ? backup[prop]\n\t        : node.style.getPropertyValue(prop);\n\t  });\n\t}\n\n\tvar $AnimateCssProvider = ['$animateProvider', function($animateProvider) {\n\t  var gcsLookup = createLocalCacheLookup();\n\t  var gcsStaggerLookup = createLocalCacheLookup();\n\n\t  this.$get = ['$window', '$$jqLite', '$$AnimateRunner', '$timeout',\n\t               '$$forceReflow', '$sniffer', '$$rAFScheduler', '$$animateQueue',\n\t       function($window,   $$jqLite,   $$AnimateRunner,   $timeout,\n\t                $$forceReflow,   $sniffer,   $$rAFScheduler, $$animateQueue) {\n\n\t    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n\t    var parentCounter = 0;\n\t    function gcsHashFn(node, extraClasses) {\n\t      var KEY = \"$$ngAnimateParentKey\";\n\t      var parentNode = node.parentNode;\n\t      var parentID = parentNode[KEY] || (parentNode[KEY] = ++parentCounter);\n\t      return parentID + '-' + node.getAttribute('class') + '-' + extraClasses;\n\t    }\n\n\t    function computeCachedCssStyles(node, className, cacheKey, properties) {\n\t      var timings = gcsLookup.get(cacheKey);\n\n\t      if (!timings) {\n\t        timings = computeCssStyles($window, node, properties);\n\t        if (timings.animationIterationCount === 'infinite') {\n\t          timings.animationIterationCount = 1;\n\t        }\n\t      }\n\n\t      // we keep putting this in multiple times even though the value and the cacheKey are the same\n\t      // because we're keeping an internal tally of how many duplicate animations are detected.\n\t      gcsLookup.put(cacheKey, timings);\n\t      return timings;\n\t    }\n\n\t    function computeCachedCssStaggerStyles(node, className, cacheKey, properties) {\n\t      var stagger;\n\n\t      // if we have one or more existing matches of matching elements\n\t      // containing the same parent + CSS styles (which is how cacheKey works)\n\t      // then staggering is possible\n\t      if (gcsLookup.count(cacheKey) > 0) {\n\t        stagger = gcsStaggerLookup.get(cacheKey);\n\n\t        if (!stagger) {\n\t          var staggerClassName = pendClasses(className, '-stagger');\n\n\t          $$jqLite.addClass(node, staggerClassName);\n\n\t          stagger = computeCssStyles($window, node, properties);\n\n\t          // force the conversion of a null value to zero incase not set\n\t          stagger.animationDuration = Math.max(stagger.animationDuration, 0);\n\t          stagger.transitionDuration = Math.max(stagger.transitionDuration, 0);\n\n\t          $$jqLite.removeClass(node, staggerClassName);\n\n\t          gcsStaggerLookup.put(cacheKey, stagger);\n\t        }\n\t      }\n\n\t      return stagger || {};\n\t    }\n\n\t    var cancelLastRAFRequest;\n\t    var rafWaitQueue = [];\n\t    function waitUntilQuiet(callback) {\n\t      rafWaitQueue.push(callback);\n\t      $$rAFScheduler.waitUntilQuiet(function() {\n\t        gcsLookup.flush();\n\t        gcsStaggerLookup.flush();\n\n\t        // DO NOT REMOVE THIS LINE OR REFACTOR OUT THE `pageWidth` variable.\n\t        // PLEASE EXAMINE THE `$$forceReflow` service to understand why.\n\t        var pageWidth = $$forceReflow();\n\n\t        // we use a for loop to ensure that if the queue is changed\n\t        // during this looping then it will consider new requests\n\t        for (var i = 0; i < rafWaitQueue.length; i++) {\n\t          rafWaitQueue[i](pageWidth);\n\t        }\n\t        rafWaitQueue.length = 0;\n\t      });\n\t    }\n\n\t    function computeTimings(node, className, cacheKey) {\n\t      var timings = computeCachedCssStyles(node, className, cacheKey, DETECT_CSS_PROPERTIES);\n\t      var aD = timings.animationDelay;\n\t      var tD = timings.transitionDelay;\n\t      timings.maxDelay = aD && tD\n\t          ? Math.max(aD, tD)\n\t          : (aD || tD);\n\t      timings.maxDuration = Math.max(\n\t          timings.animationDuration * timings.animationIterationCount,\n\t          timings.transitionDuration);\n\n\t      return timings;\n\t    }\n\n\t    return function init(element, initialOptions) {\n\t      // all of the animation functions should create\n\t      // a copy of the options data, however, if a\n\t      // parent service has already created a copy then\n\t      // we should stick to using that\n\t      var options = initialOptions || {};\n\t      if (!options.$$prepared) {\n\t        options = prepareAnimationOptions(copy(options));\n\t      }\n\n\t      var restoreStyles = {};\n\t      var node = getDomNode(element);\n\t      if (!node\n\t          || !node.parentNode\n\t          || !$$animateQueue.enabled()) {\n\t        return closeAndReturnNoopAnimator();\n\t      }\n\n\t      var temporaryStyles = [];\n\t      var classes = element.attr('class');\n\t      var styles = packageStyles(options);\n\t      var animationClosed;\n\t      var animationPaused;\n\t      var animationCompleted;\n\t      var runner;\n\t      var runnerHost;\n\t      var maxDelay;\n\t      var maxDelayTime;\n\t      var maxDuration;\n\t      var maxDurationTime;\n\t      var startTime;\n\t      var events = [];\n\n\t      if (options.duration === 0 || (!$sniffer.animations && !$sniffer.transitions)) {\n\t        return closeAndReturnNoopAnimator();\n\t      }\n\n\t      var method = options.event && isArray(options.event)\n\t            ? options.event.join(' ')\n\t            : options.event;\n\n\t      var isStructural = method && options.structural;\n\t      var structuralClassName = '';\n\t      var addRemoveClassName = '';\n\n\t      if (isStructural) {\n\t        structuralClassName = pendClasses(method, EVENT_CLASS_PREFIX, true);\n\t      } else if (method) {\n\t        structuralClassName = method;\n\t      }\n\n\t      if (options.addClass) {\n\t        addRemoveClassName += pendClasses(options.addClass, ADD_CLASS_SUFFIX);\n\t      }\n\n\t      if (options.removeClass) {\n\t        if (addRemoveClassName.length) {\n\t          addRemoveClassName += ' ';\n\t        }\n\t        addRemoveClassName += pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX);\n\t      }\n\n\t      // there may be a situation where a structural animation is combined together\n\t      // with CSS classes that need to resolve before the animation is computed.\n\t      // However this means that there is no explicit CSS code to block the animation\n\t      // from happening (by setting 0s none in the class name). If this is the case\n\t      // we need to apply the classes before the first rAF so we know to continue if\n\t      // there actually is a detected transition or keyframe animation\n\t      if (options.applyClassesEarly && addRemoveClassName.length) {\n\t        applyAnimationClasses(element, options);\n\t      }\n\n\t      var preparationClasses = [structuralClassName, addRemoveClassName].join(' ').trim();\n\t      var fullClassName = classes + ' ' + preparationClasses;\n\t      var activeClasses = pendClasses(preparationClasses, ACTIVE_CLASS_SUFFIX);\n\t      var hasToStyles = styles.to && Object.keys(styles.to).length > 0;\n\t      var containsKeyframeAnimation = (options.keyframeStyle || '').length > 0;\n\n\t      // there is no way we can trigger an animation if no styles and\n\t      // no classes are being applied which would then trigger a transition,\n\t      // unless there a is raw keyframe value that is applied to the element.\n\t      if (!containsKeyframeAnimation\n\t           && !hasToStyles\n\t           && !preparationClasses) {\n\t        return closeAndReturnNoopAnimator();\n\t      }\n\n\t      var cacheKey, stagger;\n\t      if (options.stagger > 0) {\n\t        var staggerVal = parseFloat(options.stagger);\n\t        stagger = {\n\t          transitionDelay: staggerVal,\n\t          animationDelay: staggerVal,\n\t          transitionDuration: 0,\n\t          animationDuration: 0\n\t        };\n\t      } else {\n\t        cacheKey = gcsHashFn(node, fullClassName);\n\t        stagger = computeCachedCssStaggerStyles(node, preparationClasses, cacheKey, DETECT_STAGGER_CSS_PROPERTIES);\n\t      }\n\n\t      if (!options.$$skipPreparationClasses) {\n\t        $$jqLite.addClass(element, preparationClasses);\n\t      }\n\n\t      var applyOnlyDuration;\n\n\t      if (options.transitionStyle) {\n\t        var transitionStyle = [TRANSITION_PROP, options.transitionStyle];\n\t        applyInlineStyle(node, transitionStyle);\n\t        temporaryStyles.push(transitionStyle);\n\t      }\n\n\t      if (options.duration >= 0) {\n\t        applyOnlyDuration = node.style[TRANSITION_PROP].length > 0;\n\t        var durationStyle = getCssTransitionDurationStyle(options.duration, applyOnlyDuration);\n\n\t        // we set the duration so that it will be picked up by getComputedStyle later\n\t        applyInlineStyle(node, durationStyle);\n\t        temporaryStyles.push(durationStyle);\n\t      }\n\n\t      if (options.keyframeStyle) {\n\t        var keyframeStyle = [ANIMATION_PROP, options.keyframeStyle];\n\t        applyInlineStyle(node, keyframeStyle);\n\t        temporaryStyles.push(keyframeStyle);\n\t      }\n\n\t      var itemIndex = stagger\n\t          ? options.staggerIndex >= 0\n\t              ? options.staggerIndex\n\t              : gcsLookup.count(cacheKey)\n\t          : 0;\n\n\t      var isFirst = itemIndex === 0;\n\n\t      // this is a pre-emptive way of forcing the setup classes to be added and applied INSTANTLY\n\t      // without causing any combination of transitions to kick in. By adding a negative delay value\n\t      // it forces the setup class' transition to end immediately. We later then remove the negative\n\t      // transition delay to allow for the transition to naturally do it's thing. The beauty here is\n\t      // that if there is no transition defined then nothing will happen and this will also allow\n\t      // other transitions to be stacked on top of each other without any chopping them out.\n\t      if (isFirst && !options.skipBlocking) {\n\t        blockTransitions(node, SAFE_FAST_FORWARD_DURATION_VALUE);\n\t      }\n\n\t      var timings = computeTimings(node, fullClassName, cacheKey);\n\t      var relativeDelay = timings.maxDelay;\n\t      maxDelay = Math.max(relativeDelay, 0);\n\t      maxDuration = timings.maxDuration;\n\n\t      var flags = {};\n\t      flags.hasTransitions          = timings.transitionDuration > 0;\n\t      flags.hasAnimations           = timings.animationDuration > 0;\n\t      flags.hasTransitionAll        = flags.hasTransitions && timings.transitionProperty == 'all';\n\t      flags.applyTransitionDuration = hasToStyles && (\n\t                                        (flags.hasTransitions && !flags.hasTransitionAll)\n\t                                         || (flags.hasAnimations && !flags.hasTransitions));\n\t      flags.applyAnimationDuration  = options.duration && flags.hasAnimations;\n\t      flags.applyTransitionDelay    = truthyTimingValue(options.delay) && (flags.applyTransitionDuration || flags.hasTransitions);\n\t      flags.applyAnimationDelay     = truthyTimingValue(options.delay) && flags.hasAnimations;\n\t      flags.recalculateTimingStyles = addRemoveClassName.length > 0;\n\n\t      if (flags.applyTransitionDuration || flags.applyAnimationDuration) {\n\t        maxDuration = options.duration ? parseFloat(options.duration) : maxDuration;\n\n\t        if (flags.applyTransitionDuration) {\n\t          flags.hasTransitions = true;\n\t          timings.transitionDuration = maxDuration;\n\t          applyOnlyDuration = node.style[TRANSITION_PROP + PROPERTY_KEY].length > 0;\n\t          temporaryStyles.push(getCssTransitionDurationStyle(maxDuration, applyOnlyDuration));\n\t        }\n\n\t        if (flags.applyAnimationDuration) {\n\t          flags.hasAnimations = true;\n\t          timings.animationDuration = maxDuration;\n\t          temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration));\n\t        }\n\t      }\n\n\t      if (maxDuration === 0 && !flags.recalculateTimingStyles) {\n\t        return closeAndReturnNoopAnimator();\n\t      }\n\n\t      if (options.delay != null) {\n\t        var delayStyle;\n\t        if (typeof options.delay !== \"boolean\") {\n\t          delayStyle = parseFloat(options.delay);\n\t          // number in options.delay means we have to recalculate the delay for the closing timeout\n\t          maxDelay = Math.max(delayStyle, 0);\n\t        }\n\n\t        if (flags.applyTransitionDelay) {\n\t          temporaryStyles.push(getCssDelayStyle(delayStyle));\n\t        }\n\n\t        if (flags.applyAnimationDelay) {\n\t          temporaryStyles.push(getCssDelayStyle(delayStyle, true));\n\t        }\n\t      }\n\n\t      // we need to recalculate the delay value since we used a pre-emptive negative\n\t      // delay value and the delay value is required for the final event checking. This\n\t      // property will ensure that this will happen after the RAF phase has passed.\n\t      if (options.duration == null && timings.transitionDuration > 0) {\n\t        flags.recalculateTimingStyles = flags.recalculateTimingStyles || isFirst;\n\t      }\n\n\t      maxDelayTime = maxDelay * ONE_SECOND;\n\t      maxDurationTime = maxDuration * ONE_SECOND;\n\t      if (!options.skipBlocking) {\n\t        flags.blockTransition = timings.transitionDuration > 0;\n\t        flags.blockKeyframeAnimation = timings.animationDuration > 0 &&\n\t                                       stagger.animationDelay > 0 &&\n\t                                       stagger.animationDuration === 0;\n\t      }\n\n\t      if (options.from) {\n\t        if (options.cleanupStyles) {\n\t          registerRestorableStyles(restoreStyles, node, Object.keys(options.from));\n\t        }\n\t        applyAnimationFromStyles(element, options);\n\t      }\n\n\t      if (flags.blockTransition || flags.blockKeyframeAnimation) {\n\t        applyBlocking(maxDuration);\n\t      } else if (!options.skipBlocking) {\n\t        blockTransitions(node, false);\n\t      }\n\n\t      // TODO(matsko): for 1.5 change this code to have an animator object for better debugging\n\t      return {\n\t        $$willAnimate: true,\n\t        end: endFn,\n\t        start: function() {\n\t          if (animationClosed) return;\n\n\t          runnerHost = {\n\t            end: endFn,\n\t            cancel: cancelFn,\n\t            resume: null, //this will be set during the start() phase\n\t            pause: null\n\t          };\n\n\t          runner = new $$AnimateRunner(runnerHost);\n\n\t          waitUntilQuiet(start);\n\n\t          // we don't have access to pause/resume the animation\n\t          // since it hasn't run yet. AnimateRunner will therefore\n\t          // set noop functions for resume and pause and they will\n\t          // later be overridden once the animation is triggered\n\t          return runner;\n\t        }\n\t      };\n\n\t      function endFn() {\n\t        close();\n\t      }\n\n\t      function cancelFn() {\n\t        close(true);\n\t      }\n\n\t      function close(rejected) { // jshint ignore:line\n\t        // if the promise has been called already then we shouldn't close\n\t        // the animation again\n\t        if (animationClosed || (animationCompleted && animationPaused)) return;\n\t        animationClosed = true;\n\t        animationPaused = false;\n\n\t        if (!options.$$skipPreparationClasses) {\n\t          $$jqLite.removeClass(element, preparationClasses);\n\t        }\n\t        $$jqLite.removeClass(element, activeClasses);\n\n\t        blockKeyframeAnimations(node, false);\n\t        blockTransitions(node, false);\n\n\t        forEach(temporaryStyles, function(entry) {\n\t          // There is only one way to remove inline style properties entirely from elements.\n\t          // By using `removeProperty` this works, but we need to convert camel-cased CSS\n\t          // styles down to hyphenated values.\n\t          node.style[entry[0]] = '';\n\t        });\n\n\t        applyAnimationClasses(element, options);\n\t        applyAnimationStyles(element, options);\n\n\t        if (Object.keys(restoreStyles).length) {\n\t          forEach(restoreStyles, function(value, prop) {\n\t            value ? node.style.setProperty(prop, value)\n\t                  : node.style.removeProperty(prop);\n\t          });\n\t        }\n\n\t        // the reason why we have this option is to allow a synchronous closing callback\n\t        // that is fired as SOON as the animation ends (when the CSS is removed) or if\n\t        // the animation never takes off at all. A good example is a leave animation since\n\t        // the element must be removed just after the animation is over or else the element\n\t        // will appear on screen for one animation frame causing an overbearing flicker.\n\t        if (options.onDone) {\n\t          options.onDone();\n\t        }\n\n\t        if (events && events.length) {\n\t          // Remove the transitionend / animationend listener(s)\n\t          element.off(events.join(' '), onAnimationProgress);\n\t        }\n\n\t        //Cancel the fallback closing timeout and remove the timer data\n\t        var animationTimerData = element.data(ANIMATE_TIMER_KEY);\n\t        if (animationTimerData) {\n\t          $timeout.cancel(animationTimerData[0].timer);\n\t          element.removeData(ANIMATE_TIMER_KEY);\n\t        }\n\n\t        // if the preparation function fails then the promise is not setup\n\t        if (runner) {\n\t          runner.complete(!rejected);\n\t        }\n\t      }\n\n\t      function applyBlocking(duration) {\n\t        if (flags.blockTransition) {\n\t          blockTransitions(node, duration);\n\t        }\n\n\t        if (flags.blockKeyframeAnimation) {\n\t          blockKeyframeAnimations(node, !!duration);\n\t        }\n\t      }\n\n\t      function closeAndReturnNoopAnimator() {\n\t        runner = new $$AnimateRunner({\n\t          end: endFn,\n\t          cancel: cancelFn\n\t        });\n\n\t        // should flush the cache animation\n\t        waitUntilQuiet(noop);\n\t        close();\n\n\t        return {\n\t          $$willAnimate: false,\n\t          start: function() {\n\t            return runner;\n\t          },\n\t          end: endFn\n\t        };\n\t      }\n\n\t      function onAnimationProgress(event) {\n\t        event.stopPropagation();\n\t        var ev = event.originalEvent || event;\n\n\t        // we now always use `Date.now()` due to the recent changes with\n\t        // event.timeStamp in Firefox, Webkit and Chrome (see #13494 for more info)\n\t        var timeStamp = ev.$manualTimeStamp || Date.now();\n\n\t        /* Firefox (or possibly just Gecko) likes to not round values up\n\t         * when a ms measurement is used for the animation */\n\t        var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));\n\n\t        /* $manualTimeStamp is a mocked timeStamp value which is set\n\t         * within browserTrigger(). This is only here so that tests can\n\t         * mock animations properly. Real events fallback to event.timeStamp,\n\t         * or, if they don't, then a timeStamp is automatically created for them.\n\t         * We're checking to see if the timeStamp surpasses the expected delay,\n\t         * but we're using elapsedTime instead of the timeStamp on the 2nd\n\t         * pre-condition since animationPauseds sometimes close off early */\n\t        if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {\n\t          // we set this flag to ensure that if the transition is paused then, when resumed,\n\t          // the animation will automatically close itself since transitions cannot be paused.\n\t          animationCompleted = true;\n\t          close();\n\t        }\n\t      }\n\n\t      function start() {\n\t        if (animationClosed) return;\n\t        if (!node.parentNode) {\n\t          close();\n\t          return;\n\t        }\n\n\t        // even though we only pause keyframe animations here the pause flag\n\t        // will still happen when transitions are used. Only the transition will\n\t        // not be paused since that is not possible. If the animation ends when\n\t        // paused then it will not complete until unpaused or cancelled.\n\t        var playPause = function(playAnimation) {\n\t          if (!animationCompleted) {\n\t            animationPaused = !playAnimation;\n\t            if (timings.animationDuration) {\n\t              var value = blockKeyframeAnimations(node, animationPaused);\n\t              animationPaused\n\t                  ? temporaryStyles.push(value)\n\t                  : removeFromArray(temporaryStyles, value);\n\t            }\n\t          } else if (animationPaused && playAnimation) {\n\t            animationPaused = false;\n\t            close();\n\t          }\n\t        };\n\n\t        // checking the stagger duration prevents an accidentally cascade of the CSS delay style\n\t        // being inherited from the parent. If the transition duration is zero then we can safely\n\t        // rely that the delay value is an intentional stagger delay style.\n\t        var maxStagger = itemIndex > 0\n\t                         && ((timings.transitionDuration && stagger.transitionDuration === 0) ||\n\t                            (timings.animationDuration && stagger.animationDuration === 0))\n\t                         && Math.max(stagger.animationDelay, stagger.transitionDelay);\n\t        if (maxStagger) {\n\t          $timeout(triggerAnimationStart,\n\t                   Math.floor(maxStagger * itemIndex * ONE_SECOND),\n\t                   false);\n\t        } else {\n\t          triggerAnimationStart();\n\t        }\n\n\t        // this will decorate the existing promise runner with pause/resume methods\n\t        runnerHost.resume = function() {\n\t          playPause(true);\n\t        };\n\n\t        runnerHost.pause = function() {\n\t          playPause(false);\n\t        };\n\n\t        function triggerAnimationStart() {\n\t          // just incase a stagger animation kicks in when the animation\n\t          // itself was cancelled entirely\n\t          if (animationClosed) return;\n\n\t          applyBlocking(false);\n\n\t          forEach(temporaryStyles, function(entry) {\n\t            var key = entry[0];\n\t            var value = entry[1];\n\t            node.style[key] = value;\n\t          });\n\n\t          applyAnimationClasses(element, options);\n\t          $$jqLite.addClass(element, activeClasses);\n\n\t          if (flags.recalculateTimingStyles) {\n\t            fullClassName = node.className + ' ' + preparationClasses;\n\t            cacheKey = gcsHashFn(node, fullClassName);\n\n\t            timings = computeTimings(node, fullClassName, cacheKey);\n\t            relativeDelay = timings.maxDelay;\n\t            maxDelay = Math.max(relativeDelay, 0);\n\t            maxDuration = timings.maxDuration;\n\n\t            if (maxDuration === 0) {\n\t              close();\n\t              return;\n\t            }\n\n\t            flags.hasTransitions = timings.transitionDuration > 0;\n\t            flags.hasAnimations = timings.animationDuration > 0;\n\t          }\n\n\t          if (flags.applyAnimationDelay) {\n\t            relativeDelay = typeof options.delay !== \"boolean\" && truthyTimingValue(options.delay)\n\t                  ? parseFloat(options.delay)\n\t                  : relativeDelay;\n\n\t            maxDelay = Math.max(relativeDelay, 0);\n\t            timings.animationDelay = relativeDelay;\n\t            delayStyle = getCssDelayStyle(relativeDelay, true);\n\t            temporaryStyles.push(delayStyle);\n\t            node.style[delayStyle[0]] = delayStyle[1];\n\t          }\n\n\t          maxDelayTime = maxDelay * ONE_SECOND;\n\t          maxDurationTime = maxDuration * ONE_SECOND;\n\n\t          if (options.easing) {\n\t            var easeProp, easeVal = options.easing;\n\t            if (flags.hasTransitions) {\n\t              easeProp = TRANSITION_PROP + TIMING_KEY;\n\t              temporaryStyles.push([easeProp, easeVal]);\n\t              node.style[easeProp] = easeVal;\n\t            }\n\t            if (flags.hasAnimations) {\n\t              easeProp = ANIMATION_PROP + TIMING_KEY;\n\t              temporaryStyles.push([easeProp, easeVal]);\n\t              node.style[easeProp] = easeVal;\n\t            }\n\t          }\n\n\t          if (timings.transitionDuration) {\n\t            events.push(TRANSITIONEND_EVENT);\n\t          }\n\n\t          if (timings.animationDuration) {\n\t            events.push(ANIMATIONEND_EVENT);\n\t          }\n\n\t          startTime = Date.now();\n\t          var timerTime = maxDelayTime + CLOSING_TIME_BUFFER * maxDurationTime;\n\t          var endTime = startTime + timerTime;\n\n\t          var animationsData = element.data(ANIMATE_TIMER_KEY) || [];\n\t          var setupFallbackTimer = true;\n\t          if (animationsData.length) {\n\t            var currentTimerData = animationsData[0];\n\t            setupFallbackTimer = endTime > currentTimerData.expectedEndTime;\n\t            if (setupFallbackTimer) {\n\t              $timeout.cancel(currentTimerData.timer);\n\t            } else {\n\t              animationsData.push(close);\n\t            }\n\t          }\n\n\t          if (setupFallbackTimer) {\n\t            var timer = $timeout(onAnimationExpired, timerTime, false);\n\t            animationsData[0] = {\n\t              timer: timer,\n\t              expectedEndTime: endTime\n\t            };\n\t            animationsData.push(close);\n\t            element.data(ANIMATE_TIMER_KEY, animationsData);\n\t          }\n\n\t          if (events.length) {\n\t            element.on(events.join(' '), onAnimationProgress);\n\t          }\n\n\t          if (options.to) {\n\t            if (options.cleanupStyles) {\n\t              registerRestorableStyles(restoreStyles, node, Object.keys(options.to));\n\t            }\n\t            applyAnimationToStyles(element, options);\n\t          }\n\t        }\n\n\t        function onAnimationExpired() {\n\t          var animationsData = element.data(ANIMATE_TIMER_KEY);\n\n\t          // this will be false in the event that the element was\n\t          // removed from the DOM (via a leave animation or something\n\t          // similar)\n\t          if (animationsData) {\n\t            for (var i = 1; i < animationsData.length; i++) {\n\t              animationsData[i]();\n\t            }\n\t            element.removeData(ANIMATE_TIMER_KEY);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  }];\n\t}];\n\n\tvar $$AnimateCssDriverProvider = ['$$animationProvider', function($$animationProvider) {\n\t  $$animationProvider.drivers.push('$$animateCssDriver');\n\n\t  var NG_ANIMATE_SHIM_CLASS_NAME = 'ng-animate-shim';\n\t  var NG_ANIMATE_ANCHOR_CLASS_NAME = 'ng-anchor';\n\n\t  var NG_OUT_ANCHOR_CLASS_NAME = 'ng-anchor-out';\n\t  var NG_IN_ANCHOR_CLASS_NAME = 'ng-anchor-in';\n\n\t  function isDocumentFragment(node) {\n\t    return node.parentNode && node.parentNode.nodeType === 11;\n\t  }\n\n\t  this.$get = ['$animateCss', '$rootScope', '$$AnimateRunner', '$rootElement', '$sniffer', '$$jqLite', '$document',\n\t       function($animateCss,   $rootScope,   $$AnimateRunner,   $rootElement,   $sniffer,   $$jqLite,   $document) {\n\n\t    // only browsers that support these properties can render animations\n\t    if (!$sniffer.animations && !$sniffer.transitions) return noop;\n\n\t    var bodyNode = $document[0].body;\n\t    var rootNode = getDomNode($rootElement);\n\n\t    var rootBodyElement = jqLite(\n\t      // this is to avoid using something that exists outside of the body\n\t      // we also special case the doc fragment case because our unit test code\n\t      // appends the $rootElement to the body after the app has been bootstrapped\n\t      isDocumentFragment(rootNode) || bodyNode.contains(rootNode) ? rootNode : bodyNode\n\t    );\n\n\t    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n\t    return function initDriverFn(animationDetails) {\n\t      return animationDetails.from && animationDetails.to\n\t          ? prepareFromToAnchorAnimation(animationDetails.from,\n\t                                         animationDetails.to,\n\t                                         animationDetails.classes,\n\t                                         animationDetails.anchors)\n\t          : prepareRegularAnimation(animationDetails);\n\t    };\n\n\t    function filterCssClasses(classes) {\n\t      //remove all the `ng-` stuff\n\t      return classes.replace(/\\bng-\\S+\\b/g, '');\n\t    }\n\n\t    function getUniqueValues(a, b) {\n\t      if (isString(a)) a = a.split(' ');\n\t      if (isString(b)) b = b.split(' ');\n\t      return a.filter(function(val) {\n\t        return b.indexOf(val) === -1;\n\t      }).join(' ');\n\t    }\n\n\t    function prepareAnchoredAnimation(classes, outAnchor, inAnchor) {\n\t      var clone = jqLite(getDomNode(outAnchor).cloneNode(true));\n\t      var startingClasses = filterCssClasses(getClassVal(clone));\n\n\t      outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\t      inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\n\t      clone.addClass(NG_ANIMATE_ANCHOR_CLASS_NAME);\n\n\t      rootBodyElement.append(clone);\n\n\t      var animatorIn, animatorOut = prepareOutAnimation();\n\n\t      // the user may not end up using the `out` animation and\n\t      // only making use of the `in` animation or vice-versa.\n\t      // In either case we should allow this and not assume the\n\t      // animation is over unless both animations are not used.\n\t      if (!animatorOut) {\n\t        animatorIn = prepareInAnimation();\n\t        if (!animatorIn) {\n\t          return end();\n\t        }\n\t      }\n\n\t      var startingAnimator = animatorOut || animatorIn;\n\n\t      return {\n\t        start: function() {\n\t          var runner;\n\n\t          var currentAnimation = startingAnimator.start();\n\t          currentAnimation.done(function() {\n\t            currentAnimation = null;\n\t            if (!animatorIn) {\n\t              animatorIn = prepareInAnimation();\n\t              if (animatorIn) {\n\t                currentAnimation = animatorIn.start();\n\t                currentAnimation.done(function() {\n\t                  currentAnimation = null;\n\t                  end();\n\t                  runner.complete();\n\t                });\n\t                return currentAnimation;\n\t              }\n\t            }\n\t            // in the event that there is no `in` animation\n\t            end();\n\t            runner.complete();\n\t          });\n\n\t          runner = new $$AnimateRunner({\n\t            end: endFn,\n\t            cancel: endFn\n\t          });\n\n\t          return runner;\n\n\t          function endFn() {\n\t            if (currentAnimation) {\n\t              currentAnimation.end();\n\t            }\n\t          }\n\t        }\n\t      };\n\n\t      function calculateAnchorStyles(anchor) {\n\t        var styles = {};\n\n\t        var coords = getDomNode(anchor).getBoundingClientRect();\n\n\t        // we iterate directly since safari messes up and doesn't return\n\t        // all the keys for the coords object when iterated\n\t        forEach(['width','height','top','left'], function(key) {\n\t          var value = coords[key];\n\t          switch (key) {\n\t            case 'top':\n\t              value += bodyNode.scrollTop;\n\t              break;\n\t            case 'left':\n\t              value += bodyNode.scrollLeft;\n\t              break;\n\t          }\n\t          styles[key] = Math.floor(value) + 'px';\n\t        });\n\t        return styles;\n\t      }\n\n\t      function prepareOutAnimation() {\n\t        var animator = $animateCss(clone, {\n\t          addClass: NG_OUT_ANCHOR_CLASS_NAME,\n\t          delay: true,\n\t          from: calculateAnchorStyles(outAnchor)\n\t        });\n\n\t        // read the comment within `prepareRegularAnimation` to understand\n\t        // why this check is necessary\n\t        return animator.$$willAnimate ? animator : null;\n\t      }\n\n\t      function getClassVal(element) {\n\t        return element.attr('class') || '';\n\t      }\n\n\t      function prepareInAnimation() {\n\t        var endingClasses = filterCssClasses(getClassVal(inAnchor));\n\t        var toAdd = getUniqueValues(endingClasses, startingClasses);\n\t        var toRemove = getUniqueValues(startingClasses, endingClasses);\n\n\t        var animator = $animateCss(clone, {\n\t          to: calculateAnchorStyles(inAnchor),\n\t          addClass: NG_IN_ANCHOR_CLASS_NAME + ' ' + toAdd,\n\t          removeClass: NG_OUT_ANCHOR_CLASS_NAME + ' ' + toRemove,\n\t          delay: true\n\t        });\n\n\t        // read the comment within `prepareRegularAnimation` to understand\n\t        // why this check is necessary\n\t        return animator.$$willAnimate ? animator : null;\n\t      }\n\n\t      function end() {\n\t        clone.remove();\n\t        outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\t        inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\t      }\n\t    }\n\n\t    function prepareFromToAnchorAnimation(from, to, classes, anchors) {\n\t      var fromAnimation = prepareRegularAnimation(from, noop);\n\t      var toAnimation = prepareRegularAnimation(to, noop);\n\n\t      var anchorAnimations = [];\n\t      forEach(anchors, function(anchor) {\n\t        var outElement = anchor['out'];\n\t        var inElement = anchor['in'];\n\t        var animator = prepareAnchoredAnimation(classes, outElement, inElement);\n\t        if (animator) {\n\t          anchorAnimations.push(animator);\n\t        }\n\t      });\n\n\t      // no point in doing anything when there are no elements to animate\n\t      if (!fromAnimation && !toAnimation && anchorAnimations.length === 0) return;\n\n\t      return {\n\t        start: function() {\n\t          var animationRunners = [];\n\n\t          if (fromAnimation) {\n\t            animationRunners.push(fromAnimation.start());\n\t          }\n\n\t          if (toAnimation) {\n\t            animationRunners.push(toAnimation.start());\n\t          }\n\n\t          forEach(anchorAnimations, function(animation) {\n\t            animationRunners.push(animation.start());\n\t          });\n\n\t          var runner = new $$AnimateRunner({\n\t            end: endFn,\n\t            cancel: endFn // CSS-driven animations cannot be cancelled, only ended\n\t          });\n\n\t          $$AnimateRunner.all(animationRunners, function(status) {\n\t            runner.complete(status);\n\t          });\n\n\t          return runner;\n\n\t          function endFn() {\n\t            forEach(animationRunners, function(runner) {\n\t              runner.end();\n\t            });\n\t          }\n\t        }\n\t      };\n\t    }\n\n\t    function prepareRegularAnimation(animationDetails) {\n\t      var element = animationDetails.element;\n\t      var options = animationDetails.options || {};\n\n\t      if (animationDetails.structural) {\n\t        options.event = animationDetails.event;\n\t        options.structural = true;\n\t        options.applyClassesEarly = true;\n\n\t        // we special case the leave animation since we want to ensure that\n\t        // the element is removed as soon as the animation is over. Otherwise\n\t        // a flicker might appear or the element may not be removed at all\n\t        if (animationDetails.event === 'leave') {\n\t          options.onDone = options.domOperation;\n\t        }\n\t      }\n\n\t      // We assign the preparationClasses as the actual animation event since\n\t      // the internals of $animateCss will just suffix the event token values\n\t      // with `-active` to trigger the animation.\n\t      if (options.preparationClasses) {\n\t        options.event = concatWithSpace(options.event, options.preparationClasses);\n\t      }\n\n\t      var animator = $animateCss(element, options);\n\n\t      // the driver lookup code inside of $$animation attempts to spawn a\n\t      // driver one by one until a driver returns a.$$willAnimate animator object.\n\t      // $animateCss will always return an object, however, it will pass in\n\t      // a flag as a hint as to whether an animation was detected or not\n\t      return animator.$$willAnimate ? animator : null;\n\t    }\n\t  }];\n\t}];\n\n\t// TODO(matsko): use caching here to speed things up for detection\n\t// TODO(matsko): add documentation\n\t//  by the time...\n\n\tvar $$AnimateJsProvider = ['$animateProvider', function($animateProvider) {\n\t  this.$get = ['$injector', '$$AnimateRunner', '$$jqLite',\n\t       function($injector,   $$AnimateRunner,   $$jqLite) {\n\n\t    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\t         // $animateJs(element, 'enter');\n\t    return function(element, event, classes, options) {\n\t      var animationClosed = false;\n\n\t      // the `classes` argument is optional and if it is not used\n\t      // then the classes will be resolved from the element's className\n\t      // property as well as options.addClass/options.removeClass.\n\t      if (arguments.length === 3 && isObject(classes)) {\n\t        options = classes;\n\t        classes = null;\n\t      }\n\n\t      options = prepareAnimationOptions(options);\n\t      if (!classes) {\n\t        classes = element.attr('class') || '';\n\t        if (options.addClass) {\n\t          classes += ' ' + options.addClass;\n\t        }\n\t        if (options.removeClass) {\n\t          classes += ' ' + options.removeClass;\n\t        }\n\t      }\n\n\t      var classesToAdd = options.addClass;\n\t      var classesToRemove = options.removeClass;\n\n\t      // the lookupAnimations function returns a series of animation objects that are\n\t      // matched up with one or more of the CSS classes. These animation objects are\n\t      // defined via the module.animation factory function. If nothing is detected then\n\t      // we don't return anything which then makes $animation query the next driver.\n\t      var animations = lookupAnimations(classes);\n\t      var before, after;\n\t      if (animations.length) {\n\t        var afterFn, beforeFn;\n\t        if (event == 'leave') {\n\t          beforeFn = 'leave';\n\t          afterFn = 'afterLeave'; // TODO(matsko): get rid of this\n\t        } else {\n\t          beforeFn = 'before' + event.charAt(0).toUpperCase() + event.substr(1);\n\t          afterFn = event;\n\t        }\n\n\t        if (event !== 'enter' && event !== 'move') {\n\t          before = packageAnimations(element, event, options, animations, beforeFn);\n\t        }\n\t        after  = packageAnimations(element, event, options, animations, afterFn);\n\t      }\n\n\t      // no matching animations\n\t      if (!before && !after) return;\n\n\t      function applyOptions() {\n\t        options.domOperation();\n\t        applyAnimationClasses(element, options);\n\t      }\n\n\t      function close() {\n\t        animationClosed = true;\n\t        applyOptions();\n\t        applyAnimationStyles(element, options);\n\t      }\n\n\t      var runner;\n\n\t      return {\n\t        $$willAnimate: true,\n\t        end: function() {\n\t          if (runner) {\n\t            runner.end();\n\t          } else {\n\t            close();\n\t            runner = new $$AnimateRunner();\n\t            runner.complete(true);\n\t          }\n\t          return runner;\n\t        },\n\t        start: function() {\n\t          if (runner) {\n\t            return runner;\n\t          }\n\n\t          runner = new $$AnimateRunner();\n\t          var closeActiveAnimations;\n\t          var chain = [];\n\n\t          if (before) {\n\t            chain.push(function(fn) {\n\t              closeActiveAnimations = before(fn);\n\t            });\n\t          }\n\n\t          if (chain.length) {\n\t            chain.push(function(fn) {\n\t              applyOptions();\n\t              fn(true);\n\t            });\n\t          } else {\n\t            applyOptions();\n\t          }\n\n\t          if (after) {\n\t            chain.push(function(fn) {\n\t              closeActiveAnimations = after(fn);\n\t            });\n\t          }\n\n\t          runner.setHost({\n\t            end: function() {\n\t              endAnimations();\n\t            },\n\t            cancel: function() {\n\t              endAnimations(true);\n\t            }\n\t          });\n\n\t          $$AnimateRunner.chain(chain, onComplete);\n\t          return runner;\n\n\t          function onComplete(success) {\n\t            close(success);\n\t            runner.complete(success);\n\t          }\n\n\t          function endAnimations(cancelled) {\n\t            if (!animationClosed) {\n\t              (closeActiveAnimations || noop)(cancelled);\n\t              onComplete(cancelled);\n\t            }\n\t          }\n\t        }\n\t      };\n\n\t      function executeAnimationFn(fn, element, event, options, onDone) {\n\t        var args;\n\t        switch (event) {\n\t          case 'animate':\n\t            args = [element, options.from, options.to, onDone];\n\t            break;\n\n\t          case 'setClass':\n\t            args = [element, classesToAdd, classesToRemove, onDone];\n\t            break;\n\n\t          case 'addClass':\n\t            args = [element, classesToAdd, onDone];\n\t            break;\n\n\t          case 'removeClass':\n\t            args = [element, classesToRemove, onDone];\n\t            break;\n\n\t          default:\n\t            args = [element, onDone];\n\t            break;\n\t        }\n\n\t        args.push(options);\n\n\t        var value = fn.apply(fn, args);\n\t        if (value) {\n\t          if (isFunction(value.start)) {\n\t            value = value.start();\n\t          }\n\n\t          if (value instanceof $$AnimateRunner) {\n\t            value.done(onDone);\n\t          } else if (isFunction(value)) {\n\t            // optional onEnd / onCancel callback\n\t            return value;\n\t          }\n\t        }\n\n\t        return noop;\n\t      }\n\n\t      function groupEventedAnimations(element, event, options, animations, fnName) {\n\t        var operations = [];\n\t        forEach(animations, function(ani) {\n\t          var animation = ani[fnName];\n\t          if (!animation) return;\n\n\t          // note that all of these animations will run in parallel\n\t          operations.push(function() {\n\t            var runner;\n\t            var endProgressCb;\n\n\t            var resolved = false;\n\t            var onAnimationComplete = function(rejected) {\n\t              if (!resolved) {\n\t                resolved = true;\n\t                (endProgressCb || noop)(rejected);\n\t                runner.complete(!rejected);\n\t              }\n\t            };\n\n\t            runner = new $$AnimateRunner({\n\t              end: function() {\n\t                onAnimationComplete();\n\t              },\n\t              cancel: function() {\n\t                onAnimationComplete(true);\n\t              }\n\t            });\n\n\t            endProgressCb = executeAnimationFn(animation, element, event, options, function(result) {\n\t              var cancelled = result === false;\n\t              onAnimationComplete(cancelled);\n\t            });\n\n\t            return runner;\n\t          });\n\t        });\n\n\t        return operations;\n\t      }\n\n\t      function packageAnimations(element, event, options, animations, fnName) {\n\t        var operations = groupEventedAnimations(element, event, options, animations, fnName);\n\t        if (operations.length === 0) {\n\t          var a,b;\n\t          if (fnName === 'beforeSetClass') {\n\t            a = groupEventedAnimations(element, 'removeClass', options, animations, 'beforeRemoveClass');\n\t            b = groupEventedAnimations(element, 'addClass', options, animations, 'beforeAddClass');\n\t          } else if (fnName === 'setClass') {\n\t            a = groupEventedAnimations(element, 'removeClass', options, animations, 'removeClass');\n\t            b = groupEventedAnimations(element, 'addClass', options, animations, 'addClass');\n\t          }\n\n\t          if (a) {\n\t            operations = operations.concat(a);\n\t          }\n\t          if (b) {\n\t            operations = operations.concat(b);\n\t          }\n\t        }\n\n\t        if (operations.length === 0) return;\n\n\t        // TODO(matsko): add documentation\n\t        return function startAnimation(callback) {\n\t          var runners = [];\n\t          if (operations.length) {\n\t            forEach(operations, function(animateFn) {\n\t              runners.push(animateFn());\n\t            });\n\t          }\n\n\t          runners.length ? $$AnimateRunner.all(runners, callback) : callback();\n\n\t          return function endFn(reject) {\n\t            forEach(runners, function(runner) {\n\t              reject ? runner.cancel() : runner.end();\n\t            });\n\t          };\n\t        };\n\t      }\n\t    };\n\n\t    function lookupAnimations(classes) {\n\t      classes = isArray(classes) ? classes : classes.split(' ');\n\t      var matches = [], flagMap = {};\n\t      for (var i=0; i < classes.length; i++) {\n\t        var klass = classes[i],\n\t            animationFactory = $animateProvider.$$registeredAnimations[klass];\n\t        if (animationFactory && !flagMap[klass]) {\n\t          matches.push($injector.get(animationFactory));\n\t          flagMap[klass] = true;\n\t        }\n\t      }\n\t      return matches;\n\t    }\n\t  }];\n\t}];\n\n\tvar $$AnimateJsDriverProvider = ['$$animationProvider', function($$animationProvider) {\n\t  $$animationProvider.drivers.push('$$animateJsDriver');\n\t  this.$get = ['$$animateJs', '$$AnimateRunner', function($$animateJs, $$AnimateRunner) {\n\t    return function initDriverFn(animationDetails) {\n\t      if (animationDetails.from && animationDetails.to) {\n\t        var fromAnimation = prepareAnimation(animationDetails.from);\n\t        var toAnimation = prepareAnimation(animationDetails.to);\n\t        if (!fromAnimation && !toAnimation) return;\n\n\t        return {\n\t          start: function() {\n\t            var animationRunners = [];\n\n\t            if (fromAnimation) {\n\t              animationRunners.push(fromAnimation.start());\n\t            }\n\n\t            if (toAnimation) {\n\t              animationRunners.push(toAnimation.start());\n\t            }\n\n\t            $$AnimateRunner.all(animationRunners, done);\n\n\t            var runner = new $$AnimateRunner({\n\t              end: endFnFactory(),\n\t              cancel: endFnFactory()\n\t            });\n\n\t            return runner;\n\n\t            function endFnFactory() {\n\t              return function() {\n\t                forEach(animationRunners, function(runner) {\n\t                  // at this point we cannot cancel animations for groups just yet. 1.5+\n\t                  runner.end();\n\t                });\n\t              };\n\t            }\n\n\t            function done(status) {\n\t              runner.complete(status);\n\t            }\n\t          }\n\t        };\n\t      } else {\n\t        return prepareAnimation(animationDetails);\n\t      }\n\t    };\n\n\t    function prepareAnimation(animationDetails) {\n\t      // TODO(matsko): make sure to check for grouped animations and delegate down to normal animations\n\t      var element = animationDetails.element;\n\t      var event = animationDetails.event;\n\t      var options = animationDetails.options;\n\t      var classes = animationDetails.classes;\n\t      return $$animateJs(element, event, classes, options);\n\t    }\n\t  }];\n\t}];\n\n\tvar NG_ANIMATE_ATTR_NAME = 'data-ng-animate';\n\tvar NG_ANIMATE_PIN_DATA = '$ngAnimatePin';\n\tvar $$AnimateQueueProvider = ['$animateProvider', function($animateProvider) {\n\t  var PRE_DIGEST_STATE = 1;\n\t  var RUNNING_STATE = 2;\n\t  var ONE_SPACE = ' ';\n\n\t  var rules = this.rules = {\n\t    skip: [],\n\t    cancel: [],\n\t    join: []\n\t  };\n\n\t  function makeTruthyCssClassMap(classString) {\n\t    if (!classString) {\n\t      return null;\n\t    }\n\n\t    var keys = classString.split(ONE_SPACE);\n\t    var map = Object.create(null);\n\n\t    forEach(keys, function(key) {\n\t      map[key] = true;\n\t    });\n\t    return map;\n\t  }\n\n\t  function hasMatchingClasses(newClassString, currentClassString) {\n\t    if (newClassString && currentClassString) {\n\t      var currentClassMap = makeTruthyCssClassMap(currentClassString);\n\t      return newClassString.split(ONE_SPACE).some(function(className) {\n\t        return currentClassMap[className];\n\t      });\n\t    }\n\t  }\n\n\t  function isAllowed(ruleType, element, currentAnimation, previousAnimation) {\n\t    return rules[ruleType].some(function(fn) {\n\t      return fn(element, currentAnimation, previousAnimation);\n\t    });\n\t  }\n\n\t  function hasAnimationClasses(animation, and) {\n\t    var a = (animation.addClass || '').length > 0;\n\t    var b = (animation.removeClass || '').length > 0;\n\t    return and ? a && b : a || b;\n\t  }\n\n\t  rules.join.push(function(element, newAnimation, currentAnimation) {\n\t    // if the new animation is class-based then we can just tack that on\n\t    return !newAnimation.structural && hasAnimationClasses(newAnimation);\n\t  });\n\n\t  rules.skip.push(function(element, newAnimation, currentAnimation) {\n\t    // there is no need to animate anything if no classes are being added and\n\t    // there is no structural animation that will be triggered\n\t    return !newAnimation.structural && !hasAnimationClasses(newAnimation);\n\t  });\n\n\t  rules.skip.push(function(element, newAnimation, currentAnimation) {\n\t    // why should we trigger a new structural animation if the element will\n\t    // be removed from the DOM anyway?\n\t    return currentAnimation.event == 'leave' && newAnimation.structural;\n\t  });\n\n\t  rules.skip.push(function(element, newAnimation, currentAnimation) {\n\t    // if there is an ongoing current animation then don't even bother running the class-based animation\n\t    return currentAnimation.structural && currentAnimation.state === RUNNING_STATE && !newAnimation.structural;\n\t  });\n\n\t  rules.cancel.push(function(element, newAnimation, currentAnimation) {\n\t    // there can never be two structural animations running at the same time\n\t    return currentAnimation.structural && newAnimation.structural;\n\t  });\n\n\t  rules.cancel.push(function(element, newAnimation, currentAnimation) {\n\t    // if the previous animation is already running, but the new animation will\n\t    // be triggered, but the new animation is structural\n\t    return currentAnimation.state === RUNNING_STATE && newAnimation.structural;\n\t  });\n\n\t  rules.cancel.push(function(element, newAnimation, currentAnimation) {\n\t    // cancel the animation if classes added / removed in both animation cancel each other out,\n\t    // but only if the current animation isn't structural\n\n\t    if (currentAnimation.structural) return false;\n\n\t    var nA = newAnimation.addClass;\n\t    var nR = newAnimation.removeClass;\n\t    var cA = currentAnimation.addClass;\n\t    var cR = currentAnimation.removeClass;\n\n\t    // early detection to save the global CPU shortage :)\n\t    if ((isUndefined(nA) && isUndefined(nR)) || (isUndefined(cA) && isUndefined(cR))) {\n\t      return false;\n\t    }\n\n\t    return hasMatchingClasses(nA, cR) || hasMatchingClasses(nR, cA);\n\t  });\n\n\t  this.$get = ['$$rAF', '$rootScope', '$rootElement', '$document', '$$HashMap',\n\t               '$$animation', '$$AnimateRunner', '$templateRequest', '$$jqLite', '$$forceReflow',\n\t       function($$rAF,   $rootScope,   $rootElement,   $document,   $$HashMap,\n\t                $$animation,   $$AnimateRunner,   $templateRequest,   $$jqLite,   $$forceReflow) {\n\n\t    var activeAnimationsLookup = new $$HashMap();\n\t    var disabledElementsLookup = new $$HashMap();\n\t    var animationsEnabled = null;\n\n\t    function postDigestTaskFactory() {\n\t      var postDigestCalled = false;\n\t      return function(fn) {\n\t        // we only issue a call to postDigest before\n\t        // it has first passed. This prevents any callbacks\n\t        // from not firing once the animation has completed\n\t        // since it will be out of the digest cycle.\n\t        if (postDigestCalled) {\n\t          fn();\n\t        } else {\n\t          $rootScope.$$postDigest(function() {\n\t            postDigestCalled = true;\n\t            fn();\n\t          });\n\t        }\n\t      };\n\t    }\n\n\t    // Wait until all directive and route-related templates are downloaded and\n\t    // compiled. The $templateRequest.totalPendingRequests variable keeps track of\n\t    // all of the remote templates being currently downloaded. If there are no\n\t    // templates currently downloading then the watcher will still fire anyway.\n\t    var deregisterWatch = $rootScope.$watch(\n\t      function() { return $templateRequest.totalPendingRequests === 0; },\n\t      function(isEmpty) {\n\t        if (!isEmpty) return;\n\t        deregisterWatch();\n\n\t        // Now that all templates have been downloaded, $animate will wait until\n\t        // the post digest queue is empty before enabling animations. By having two\n\t        // calls to $postDigest calls we can ensure that the flag is enabled at the\n\t        // very end of the post digest queue. Since all of the animations in $animate\n\t        // use $postDigest, it's important that the code below executes at the end.\n\t        // This basically means that the page is fully downloaded and compiled before\n\t        // any animations are triggered.\n\t        $rootScope.$$postDigest(function() {\n\t          $rootScope.$$postDigest(function() {\n\t            // we check for null directly in the event that the application already called\n\t            // .enabled() with whatever arguments that it provided it with\n\t            if (animationsEnabled === null) {\n\t              animationsEnabled = true;\n\t            }\n\t          });\n\t        });\n\t      }\n\t    );\n\n\t    var callbackRegistry = {};\n\n\t    // remember that the classNameFilter is set during the provider/config\n\t    // stage therefore we can optimize here and setup a helper function\n\t    var classNameFilter = $animateProvider.classNameFilter();\n\t    var isAnimatableClassName = !classNameFilter\n\t              ? function() { return true; }\n\t              : function(className) {\n\t                return classNameFilter.test(className);\n\t              };\n\n\t    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n\t    function normalizeAnimationDetails(element, animation) {\n\t      return mergeAnimationDetails(element, animation, {});\n\t    }\n\n\t    // IE9-11 has no method \"contains\" in SVG element and in Node.prototype. Bug #10259.\n\t    var contains = window.Node.prototype.contains || function(arg) {\n\t      // jshint bitwise: false\n\t      return this === arg || !!(this.compareDocumentPosition(arg) & 16);\n\t      // jshint bitwise: true\n\t    };\n\n\t    function findCallbacks(parent, element, event) {\n\t      var targetNode = getDomNode(element);\n\t      var targetParentNode = getDomNode(parent);\n\n\t      var matches = [];\n\t      var entries = callbackRegistry[event];\n\t      if (entries) {\n\t        forEach(entries, function(entry) {\n\t          if (contains.call(entry.node, targetNode)) {\n\t            matches.push(entry.callback);\n\t          } else if (event === 'leave' && contains.call(entry.node, targetParentNode)) {\n\t            matches.push(entry.callback);\n\t          }\n\t        });\n\t      }\n\n\t      return matches;\n\t    }\n\n\t    function filterFromRegistry(list, matchContainer, matchCallback) {\n\t      var containerNode = extractElementNode(matchContainer);\n\t      return list.filter(function(entry) {\n\t        var isMatch = entry.node === containerNode &&\n\t                        (!matchCallback || entry.callback === matchCallback);\n\t        return !isMatch;\n\t      });\n\t    }\n\n\t    function cleanupEventListeners(phase, element) {\n\t      if (phase === 'close' && !element[0].parentNode) {\n\t        // If the element is not attached to a parentNode, it has been removed by\n\t        // the domOperation, and we can safely remove the event callbacks\n\t        $animate.off(element);\n\t      }\n\t    }\n\n\t    var $animate = {\n\t      on: function(event, container, callback) {\n\t        var node = extractElementNode(container);\n\t        callbackRegistry[event] = callbackRegistry[event] || [];\n\t        callbackRegistry[event].push({\n\t          node: node,\n\t          callback: callback\n\t        });\n\n\t        // Remove the callback when the element is removed from the DOM\n\t        jqLite(container).on('$destroy', function() {\n\t          var animationDetails = activeAnimationsLookup.get(node);\n\n\t          if (!animationDetails) {\n\t            // If there's an animation ongoing, the callback calling code will remove\n\t            // the event listeners. If we'd remove here, the callbacks would be removed\n\t            // before the animation ends\n\t            $animate.off(event, container, callback);\n\t          }\n\t        });\n\t      },\n\n\t      off: function(event, container, callback) {\n\t        if (arguments.length === 1 && !angular.isString(arguments[0])) {\n\t          container = arguments[0];\n\t          for (var eventType in callbackRegistry) {\n\t            callbackRegistry[eventType] = filterFromRegistry(callbackRegistry[eventType], container);\n\t          }\n\n\t          return;\n\t        }\n\n\t        var entries = callbackRegistry[event];\n\t        if (!entries) return;\n\n\t        callbackRegistry[event] = arguments.length === 1\n\t            ? null\n\t            : filterFromRegistry(entries, container, callback);\n\t      },\n\n\t      pin: function(element, parentElement) {\n\t        assertArg(isElement(element), 'element', 'not an element');\n\t        assertArg(isElement(parentElement), 'parentElement', 'not an element');\n\t        element.data(NG_ANIMATE_PIN_DATA, parentElement);\n\t      },\n\n\t      push: function(element, event, options, domOperation) {\n\t        options = options || {};\n\t        options.domOperation = domOperation;\n\t        return queueAnimation(element, event, options);\n\t      },\n\n\t      // this method has four signatures:\n\t      //  () - global getter\n\t      //  (bool) - global setter\n\t      //  (element) - element getter\n\t      //  (element, bool) - element setter<F37>\n\t      enabled: function(element, bool) {\n\t        var argCount = arguments.length;\n\n\t        if (argCount === 0) {\n\t          // () - Global getter\n\t          bool = !!animationsEnabled;\n\t        } else {\n\t          var hasElement = isElement(element);\n\n\t          if (!hasElement) {\n\t            // (bool) - Global setter\n\t            bool = animationsEnabled = !!element;\n\t          } else {\n\t            var node = getDomNode(element);\n\t            var recordExists = disabledElementsLookup.get(node);\n\n\t            if (argCount === 1) {\n\t              // (element) - Element getter\n\t              bool = !recordExists;\n\t            } else {\n\t              // (element, bool) - Element setter\n\t              disabledElementsLookup.put(node, !bool);\n\t            }\n\t          }\n\t        }\n\n\t        return bool;\n\t      }\n\t    };\n\n\t    return $animate;\n\n\t    function queueAnimation(element, event, initialOptions) {\n\t      // we always make a copy of the options since\n\t      // there should never be any side effects on\n\t      // the input data when running `$animateCss`.\n\t      var options = copy(initialOptions);\n\n\t      var node, parent;\n\t      element = stripCommentsFromElement(element);\n\t      if (element) {\n\t        node = getDomNode(element);\n\t        parent = element.parent();\n\t      }\n\n\t      options = prepareAnimationOptions(options);\n\n\t      // we create a fake runner with a working promise.\n\t      // These methods will become available after the digest has passed\n\t      var runner = new $$AnimateRunner();\n\n\t      // this is used to trigger callbacks in postDigest mode\n\t      var runInNextPostDigestOrNow = postDigestTaskFactory();\n\n\t      if (isArray(options.addClass)) {\n\t        options.addClass = options.addClass.join(' ');\n\t      }\n\n\t      if (options.addClass && !isString(options.addClass)) {\n\t        options.addClass = null;\n\t      }\n\n\t      if (isArray(options.removeClass)) {\n\t        options.removeClass = options.removeClass.join(' ');\n\t      }\n\n\t      if (options.removeClass && !isString(options.removeClass)) {\n\t        options.removeClass = null;\n\t      }\n\n\t      if (options.from && !isObject(options.from)) {\n\t        options.from = null;\n\t      }\n\n\t      if (options.to && !isObject(options.to)) {\n\t        options.to = null;\n\t      }\n\n\t      // there are situations where a directive issues an animation for\n\t      // a jqLite wrapper that contains only comment nodes... If this\n\t      // happens then there is no way we can perform an animation\n\t      if (!node) {\n\t        close();\n\t        return runner;\n\t      }\n\n\t      var className = [node.className, options.addClass, options.removeClass].join(' ');\n\t      if (!isAnimatableClassName(className)) {\n\t        close();\n\t        return runner;\n\t      }\n\n\t      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n\t      var documentHidden = $document[0].hidden;\n\n\t      // this is a hard disable of all animations for the application or on\n\t      // the element itself, therefore  there is no need to continue further\n\t      // past this point if not enabled\n\t      // Animations are also disabled if the document is currently hidden (page is not visible\n\t      // to the user), because browsers slow down or do not flush calls to requestAnimationFrame\n\t      var skipAnimations = !animationsEnabled || documentHidden || disabledElementsLookup.get(node);\n\t      var existingAnimation = (!skipAnimations && activeAnimationsLookup.get(node)) || {};\n\t      var hasExistingAnimation = !!existingAnimation.state;\n\n\t      // there is no point in traversing the same collection of parent ancestors if a followup\n\t      // animation will be run on the same element that already did all that checking work\n\t      if (!skipAnimations && (!hasExistingAnimation || existingAnimation.state != PRE_DIGEST_STATE)) {\n\t        skipAnimations = !areAnimationsAllowed(element, parent, event);\n\t      }\n\n\t      if (skipAnimations) {\n\t        // Callbacks should fire even if the document is hidden (regression fix for issue #14120)\n\t        if (documentHidden) notifyProgress(runner, event, 'start');\n\t        close();\n\t        if (documentHidden) notifyProgress(runner, event, 'close');\n\t        return runner;\n\t      }\n\n\t      if (isStructural) {\n\t        closeChildAnimations(element);\n\t      }\n\n\t      var newAnimation = {\n\t        structural: isStructural,\n\t        element: element,\n\t        event: event,\n\t        addClass: options.addClass,\n\t        removeClass: options.removeClass,\n\t        close: close,\n\t        options: options,\n\t        runner: runner\n\t      };\n\n\t      if (hasExistingAnimation) {\n\t        var skipAnimationFlag = isAllowed('skip', element, newAnimation, existingAnimation);\n\t        if (skipAnimationFlag) {\n\t          if (existingAnimation.state === RUNNING_STATE) {\n\t            close();\n\t            return runner;\n\t          } else {\n\t            mergeAnimationDetails(element, existingAnimation, newAnimation);\n\t            return existingAnimation.runner;\n\t          }\n\t        }\n\t        var cancelAnimationFlag = isAllowed('cancel', element, newAnimation, existingAnimation);\n\t        if (cancelAnimationFlag) {\n\t          if (existingAnimation.state === RUNNING_STATE) {\n\t            // this will end the animation right away and it is safe\n\t            // to do so since the animation is already running and the\n\t            // runner callback code will run in async\n\t            existingAnimation.runner.end();\n\t          } else if (existingAnimation.structural) {\n\t            // this means that the animation is queued into a digest, but\n\t            // hasn't started yet. Therefore it is safe to run the close\n\t            // method which will call the runner methods in async.\n\t            existingAnimation.close();\n\t          } else {\n\t            // this will merge the new animation options into existing animation options\n\t            mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n\t            return existingAnimation.runner;\n\t          }\n\t        } else {\n\t          // a joined animation means that this animation will take over the existing one\n\t          // so an example would involve a leave animation taking over an enter. Then when\n\t          // the postDigest kicks in the enter will be ignored.\n\t          var joinAnimationFlag = isAllowed('join', element, newAnimation, existingAnimation);\n\t          if (joinAnimationFlag) {\n\t            if (existingAnimation.state === RUNNING_STATE) {\n\t              normalizeAnimationDetails(element, newAnimation);\n\t            } else {\n\t              applyGeneratedPreparationClasses(element, isStructural ? event : null, options);\n\n\t              event = newAnimation.event = existingAnimation.event;\n\t              options = mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n\t              //we return the same runner since only the option values of this animation will\n\t              //be fed into the `existingAnimation`.\n\t              return existingAnimation.runner;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        // normalization in this case means that it removes redundant CSS classes that\n\t        // already exist (addClass) or do not exist (removeClass) on the element\n\t        normalizeAnimationDetails(element, newAnimation);\n\t      }\n\n\t      // when the options are merged and cleaned up we may end up not having to do\n\t      // an animation at all, therefore we should check this before issuing a post\n\t      // digest callback. Structural animations will always run no matter what.\n\t      var isValidAnimation = newAnimation.structural;\n\t      if (!isValidAnimation) {\n\t        // animate (from/to) can be quickly checked first, otherwise we check if any classes are present\n\t        isValidAnimation = (newAnimation.event === 'animate' && Object.keys(newAnimation.options.to || {}).length > 0)\n\t                            || hasAnimationClasses(newAnimation);\n\t      }\n\n\t      if (!isValidAnimation) {\n\t        close();\n\t        clearElementAnimationState(element);\n\t        return runner;\n\t      }\n\n\t      // the counter keeps track of cancelled animations\n\t      var counter = (existingAnimation.counter || 0) + 1;\n\t      newAnimation.counter = counter;\n\n\t      markElementAnimationState(element, PRE_DIGEST_STATE, newAnimation);\n\n\t      $rootScope.$$postDigest(function() {\n\t        var animationDetails = activeAnimationsLookup.get(node);\n\t        var animationCancelled = !animationDetails;\n\t        animationDetails = animationDetails || {};\n\n\t        // if addClass/removeClass is called before something like enter then the\n\t        // registered parent element may not be present. The code below will ensure\n\t        // that a final value for parent element is obtained\n\t        var parentElement = element.parent() || [];\n\n\t        // animate/structural/class-based animations all have requirements. Otherwise there\n\t        // is no point in performing an animation. The parent node must also be set.\n\t        var isValidAnimation = parentElement.length > 0\n\t                                && (animationDetails.event === 'animate'\n\t                                    || animationDetails.structural\n\t                                    || hasAnimationClasses(animationDetails));\n\n\t        // this means that the previous animation was cancelled\n\t        // even if the follow-up animation is the same event\n\t        if (animationCancelled || animationDetails.counter !== counter || !isValidAnimation) {\n\t          // if another animation did not take over then we need\n\t          // to make sure that the domOperation and options are\n\t          // handled accordingly\n\t          if (animationCancelled) {\n\t            applyAnimationClasses(element, options);\n\t            applyAnimationStyles(element, options);\n\t          }\n\n\t          // if the event changed from something like enter to leave then we do\n\t          // it, otherwise if it's the same then the end result will be the same too\n\t          if (animationCancelled || (isStructural && animationDetails.event !== event)) {\n\t            options.domOperation();\n\t            runner.end();\n\t          }\n\n\t          // in the event that the element animation was not cancelled or a follow-up animation\n\t          // isn't allowed to animate from here then we need to clear the state of the element\n\t          // so that any future animations won't read the expired animation data.\n\t          if (!isValidAnimation) {\n\t            clearElementAnimationState(element);\n\t          }\n\n\t          return;\n\t        }\n\n\t        // this combined multiple class to addClass / removeClass into a setClass event\n\t        // so long as a structural event did not take over the animation\n\t        event = !animationDetails.structural && hasAnimationClasses(animationDetails, true)\n\t            ? 'setClass'\n\t            : animationDetails.event;\n\n\t        markElementAnimationState(element, RUNNING_STATE);\n\t        var realRunner = $$animation(element, event, animationDetails.options);\n\n\t        // this will update the runner's flow-control events based on\n\t        // the `realRunner` object.\n\t        runner.setHost(realRunner);\n\t        notifyProgress(runner, event, 'start', {});\n\n\t        realRunner.done(function(status) {\n\t          close(!status);\n\t          var animationDetails = activeAnimationsLookup.get(node);\n\t          if (animationDetails && animationDetails.counter === counter) {\n\t            clearElementAnimationState(getDomNode(element));\n\t          }\n\t          notifyProgress(runner, event, 'close', {});\n\t        });\n\t      });\n\n\t      return runner;\n\n\t      function notifyProgress(runner, event, phase, data) {\n\t        runInNextPostDigestOrNow(function() {\n\t          var callbacks = findCallbacks(parent, element, event);\n\t          if (callbacks.length) {\n\t            // do not optimize this call here to RAF because\n\t            // we don't know how heavy the callback code here will\n\t            // be and if this code is buffered then this can\n\t            // lead to a performance regression.\n\t            $$rAF(function() {\n\t              forEach(callbacks, function(callback) {\n\t                callback(element, phase, data);\n\t              });\n\t              cleanupEventListeners(phase, element);\n\t            });\n\t          } else {\n\t            cleanupEventListeners(phase, element);\n\t          }\n\t        });\n\t        runner.progress(event, phase, data);\n\t      }\n\n\t      function close(reject) { // jshint ignore:line\n\t        clearGeneratedClasses(element, options);\n\t        applyAnimationClasses(element, options);\n\t        applyAnimationStyles(element, options);\n\t        options.domOperation();\n\t        runner.complete(!reject);\n\t      }\n\t    }\n\n\t    function closeChildAnimations(element) {\n\t      var node = getDomNode(element);\n\t      var children = node.querySelectorAll('[' + NG_ANIMATE_ATTR_NAME + ']');\n\t      forEach(children, function(child) {\n\t        var state = parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME));\n\t        var animationDetails = activeAnimationsLookup.get(child);\n\t        if (animationDetails) {\n\t          switch (state) {\n\t            case RUNNING_STATE:\n\t              animationDetails.runner.end();\n\t              /* falls through */\n\t            case PRE_DIGEST_STATE:\n\t              activeAnimationsLookup.remove(child);\n\t              break;\n\t          }\n\t        }\n\t      });\n\t    }\n\n\t    function clearElementAnimationState(element) {\n\t      var node = getDomNode(element);\n\t      node.removeAttribute(NG_ANIMATE_ATTR_NAME);\n\t      activeAnimationsLookup.remove(node);\n\t    }\n\n\t    function isMatchingElement(nodeOrElmA, nodeOrElmB) {\n\t      return getDomNode(nodeOrElmA) === getDomNode(nodeOrElmB);\n\t    }\n\n\t    /**\n\t     * This fn returns false if any of the following is true:\n\t     * a) animations on any parent element are disabled, and animations on the element aren't explicitly allowed\n\t     * b) a parent element has an ongoing structural animation, and animateChildren is false\n\t     * c) the element is not a child of the body\n\t     * d) the element is not a child of the $rootElement\n\t     */\n\t    function areAnimationsAllowed(element, parentElement, event) {\n\t      var bodyElement = jqLite($document[0].body);\n\t      var bodyElementDetected = isMatchingElement(element, bodyElement) || element[0].nodeName === 'HTML';\n\t      var rootElementDetected = isMatchingElement(element, $rootElement);\n\t      var parentAnimationDetected = false;\n\t      var animateChildren;\n\t      var elementDisabled = disabledElementsLookup.get(getDomNode(element));\n\n\t      var parentHost = jqLite.data(element[0], NG_ANIMATE_PIN_DATA);\n\t      if (parentHost) {\n\t        parentElement = parentHost;\n\t      }\n\n\t      parentElement = getDomNode(parentElement);\n\n\t      while (parentElement) {\n\t        if (!rootElementDetected) {\n\t          // angular doesn't want to attempt to animate elements outside of the application\n\t          // therefore we need to ensure that the rootElement is an ancestor of the current element\n\t          rootElementDetected = isMatchingElement(parentElement, $rootElement);\n\t        }\n\n\t        if (parentElement.nodeType !== ELEMENT_NODE) {\n\t          // no point in inspecting the #document element\n\t          break;\n\t        }\n\n\t        var details = activeAnimationsLookup.get(parentElement) || {};\n\t        // either an enter, leave or move animation will commence\n\t        // therefore we can't allow any animations to take place\n\t        // but if a parent animation is class-based then that's ok\n\t        if (!parentAnimationDetected) {\n\t          var parentElementDisabled = disabledElementsLookup.get(parentElement);\n\n\t          if (parentElementDisabled === true && elementDisabled !== false) {\n\t            // disable animations if the user hasn't explicitly enabled animations on the\n\t            // current element\n\t            elementDisabled = true;\n\t            // element is disabled via parent element, no need to check anything else\n\t            break;\n\t          } else if (parentElementDisabled === false) {\n\t            elementDisabled = false;\n\t          }\n\t          parentAnimationDetected = details.structural;\n\t        }\n\n\t        if (isUndefined(animateChildren) || animateChildren === true) {\n\t          var value = jqLite.data(parentElement, NG_ANIMATE_CHILDREN_DATA);\n\t          if (isDefined(value)) {\n\t            animateChildren = value;\n\t          }\n\t        }\n\n\t        // there is no need to continue traversing at this point\n\t        if (parentAnimationDetected && animateChildren === false) break;\n\n\t        if (!bodyElementDetected) {\n\t          // we also need to ensure that the element is or will be a part of the body element\n\t          // otherwise it is pointless to even issue an animation to be rendered\n\t          bodyElementDetected = isMatchingElement(parentElement, bodyElement);\n\t        }\n\n\t        if (bodyElementDetected && rootElementDetected) {\n\t          // If both body and root have been found, any other checks are pointless,\n\t          // as no animation data should live outside the application\n\t          break;\n\t        }\n\n\t        if (!rootElementDetected) {\n\t          // If no rootElement is detected, check if the parentElement is pinned to another element\n\t          parentHost = jqLite.data(parentElement, NG_ANIMATE_PIN_DATA);\n\t          if (parentHost) {\n\t            // The pin target element becomes the next parent element\n\t            parentElement = getDomNode(parentHost);\n\t            continue;\n\t          }\n\t        }\n\n\t        parentElement = parentElement.parentNode;\n\t      }\n\n\t      var allowAnimation = (!parentAnimationDetected || animateChildren) && elementDisabled !== true;\n\t      return allowAnimation && rootElementDetected && bodyElementDetected;\n\t    }\n\n\t    function markElementAnimationState(element, state, details) {\n\t      details = details || {};\n\t      details.state = state;\n\n\t      var node = getDomNode(element);\n\t      node.setAttribute(NG_ANIMATE_ATTR_NAME, state);\n\n\t      var oldValue = activeAnimationsLookup.get(node);\n\t      var newValue = oldValue\n\t          ? extend(oldValue, details)\n\t          : details;\n\t      activeAnimationsLookup.put(node, newValue);\n\t    }\n\t  }];\n\t}];\n\n\tvar $$AnimationProvider = ['$animateProvider', function($animateProvider) {\n\t  var NG_ANIMATE_REF_ATTR = 'ng-animate-ref';\n\n\t  var drivers = this.drivers = [];\n\n\t  var RUNNER_STORAGE_KEY = '$$animationRunner';\n\n\t  function setRunner(element, runner) {\n\t    element.data(RUNNER_STORAGE_KEY, runner);\n\t  }\n\n\t  function removeRunner(element) {\n\t    element.removeData(RUNNER_STORAGE_KEY);\n\t  }\n\n\t  function getRunner(element) {\n\t    return element.data(RUNNER_STORAGE_KEY);\n\t  }\n\n\t  this.$get = ['$$jqLite', '$rootScope', '$injector', '$$AnimateRunner', '$$HashMap', '$$rAFScheduler',\n\t       function($$jqLite,   $rootScope,   $injector,   $$AnimateRunner,   $$HashMap,   $$rAFScheduler) {\n\n\t    var animationQueue = [];\n\t    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n\t    function sortAnimations(animations) {\n\t      var tree = { children: [] };\n\t      var i, lookup = new $$HashMap();\n\n\t      // this is done first beforehand so that the hashmap\n\t      // is filled with a list of the elements that will be animated\n\t      for (i = 0; i < animations.length; i++) {\n\t        var animation = animations[i];\n\t        lookup.put(animation.domNode, animations[i] = {\n\t          domNode: animation.domNode,\n\t          fn: animation.fn,\n\t          children: []\n\t        });\n\t      }\n\n\t      for (i = 0; i < animations.length; i++) {\n\t        processNode(animations[i]);\n\t      }\n\n\t      return flatten(tree);\n\n\t      function processNode(entry) {\n\t        if (entry.processed) return entry;\n\t        entry.processed = true;\n\n\t        var elementNode = entry.domNode;\n\t        var parentNode = elementNode.parentNode;\n\t        lookup.put(elementNode, entry);\n\n\t        var parentEntry;\n\t        while (parentNode) {\n\t          parentEntry = lookup.get(parentNode);\n\t          if (parentEntry) {\n\t            if (!parentEntry.processed) {\n\t              parentEntry = processNode(parentEntry);\n\t            }\n\t            break;\n\t          }\n\t          parentNode = parentNode.parentNode;\n\t        }\n\n\t        (parentEntry || tree).children.push(entry);\n\t        return entry;\n\t      }\n\n\t      function flatten(tree) {\n\t        var result = [];\n\t        var queue = [];\n\t        var i;\n\n\t        for (i = 0; i < tree.children.length; i++) {\n\t          queue.push(tree.children[i]);\n\t        }\n\n\t        var remainingLevelEntries = queue.length;\n\t        var nextLevelEntries = 0;\n\t        var row = [];\n\n\t        for (i = 0; i < queue.length; i++) {\n\t          var entry = queue[i];\n\t          if (remainingLevelEntries <= 0) {\n\t            remainingLevelEntries = nextLevelEntries;\n\t            nextLevelEntries = 0;\n\t            result.push(row);\n\t            row = [];\n\t          }\n\t          row.push(entry.fn);\n\t          entry.children.forEach(function(childEntry) {\n\t            nextLevelEntries++;\n\t            queue.push(childEntry);\n\t          });\n\t          remainingLevelEntries--;\n\t        }\n\n\t        if (row.length) {\n\t          result.push(row);\n\t        }\n\n\t        return result;\n\t      }\n\t    }\n\n\t    // TODO(matsko): document the signature in a better way\n\t    return function(element, event, options) {\n\t      options = prepareAnimationOptions(options);\n\t      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n\t      // there is no animation at the current moment, however\n\t      // these runner methods will get later updated with the\n\t      // methods leading into the driver's end/cancel methods\n\t      // for now they just stop the animation from starting\n\t      var runner = new $$AnimateRunner({\n\t        end: function() { close(); },\n\t        cancel: function() { close(true); }\n\t      });\n\n\t      if (!drivers.length) {\n\t        close();\n\t        return runner;\n\t      }\n\n\t      setRunner(element, runner);\n\n\t      var classes = mergeClasses(element.attr('class'), mergeClasses(options.addClass, options.removeClass));\n\t      var tempClasses = options.tempClasses;\n\t      if (tempClasses) {\n\t        classes += ' ' + tempClasses;\n\t        options.tempClasses = null;\n\t      }\n\n\t      var prepareClassName;\n\t      if (isStructural) {\n\t        prepareClassName = 'ng-' + event + PREPARE_CLASS_SUFFIX;\n\t        $$jqLite.addClass(element, prepareClassName);\n\t      }\n\n\t      animationQueue.push({\n\t        // this data is used by the postDigest code and passed into\n\t        // the driver step function\n\t        element: element,\n\t        classes: classes,\n\t        event: event,\n\t        structural: isStructural,\n\t        options: options,\n\t        beforeStart: beforeStart,\n\t        close: close\n\t      });\n\n\t      element.on('$destroy', handleDestroyedElement);\n\n\t      // we only want there to be one function called within the post digest\n\t      // block. This way we can group animations for all the animations that\n\t      // were apart of the same postDigest flush call.\n\t      if (animationQueue.length > 1) return runner;\n\n\t      $rootScope.$$postDigest(function() {\n\t        var animations = [];\n\t        forEach(animationQueue, function(entry) {\n\t          // the element was destroyed early on which removed the runner\n\t          // form its storage. This means we can't animate this element\n\t          // at all and it already has been closed due to destruction.\n\t          if (getRunner(entry.element)) {\n\t            animations.push(entry);\n\t          } else {\n\t            entry.close();\n\t          }\n\t        });\n\n\t        // now any future animations will be in another postDigest\n\t        animationQueue.length = 0;\n\n\t        var groupedAnimations = groupAnimations(animations);\n\t        var toBeSortedAnimations = [];\n\n\t        forEach(groupedAnimations, function(animationEntry) {\n\t          toBeSortedAnimations.push({\n\t            domNode: getDomNode(animationEntry.from ? animationEntry.from.element : animationEntry.element),\n\t            fn: function triggerAnimationStart() {\n\t              // it's important that we apply the `ng-animate` CSS class and the\n\t              // temporary classes before we do any driver invoking since these\n\t              // CSS classes may be required for proper CSS detection.\n\t              animationEntry.beforeStart();\n\n\t              var startAnimationFn, closeFn = animationEntry.close;\n\n\t              // in the event that the element was removed before the digest runs or\n\t              // during the RAF sequencing then we should not trigger the animation.\n\t              var targetElement = animationEntry.anchors\n\t                  ? (animationEntry.from.element || animationEntry.to.element)\n\t                  : animationEntry.element;\n\n\t              if (getRunner(targetElement)) {\n\t                var operation = invokeFirstDriver(animationEntry);\n\t                if (operation) {\n\t                  startAnimationFn = operation.start;\n\t                }\n\t              }\n\n\t              if (!startAnimationFn) {\n\t                closeFn();\n\t              } else {\n\t                var animationRunner = startAnimationFn();\n\t                animationRunner.done(function(status) {\n\t                  closeFn(!status);\n\t                });\n\t                updateAnimationRunners(animationEntry, animationRunner);\n\t              }\n\t            }\n\t          });\n\t        });\n\n\t        // we need to sort each of the animations in order of parent to child\n\t        // relationships. This ensures that the child classes are applied at the\n\t        // right time.\n\t        $$rAFScheduler(sortAnimations(toBeSortedAnimations));\n\t      });\n\n\t      return runner;\n\n\t      // TODO(matsko): change to reference nodes\n\t      function getAnchorNodes(node) {\n\t        var SELECTOR = '[' + NG_ANIMATE_REF_ATTR + ']';\n\t        var items = node.hasAttribute(NG_ANIMATE_REF_ATTR)\n\t              ? [node]\n\t              : node.querySelectorAll(SELECTOR);\n\t        var anchors = [];\n\t        forEach(items, function(node) {\n\t          var attr = node.getAttribute(NG_ANIMATE_REF_ATTR);\n\t          if (attr && attr.length) {\n\t            anchors.push(node);\n\t          }\n\t        });\n\t        return anchors;\n\t      }\n\n\t      function groupAnimations(animations) {\n\t        var preparedAnimations = [];\n\t        var refLookup = {};\n\t        forEach(animations, function(animation, index) {\n\t          var element = animation.element;\n\t          var node = getDomNode(element);\n\t          var event = animation.event;\n\t          var enterOrMove = ['enter', 'move'].indexOf(event) >= 0;\n\t          var anchorNodes = animation.structural ? getAnchorNodes(node) : [];\n\n\t          if (anchorNodes.length) {\n\t            var direction = enterOrMove ? 'to' : 'from';\n\n\t            forEach(anchorNodes, function(anchor) {\n\t              var key = anchor.getAttribute(NG_ANIMATE_REF_ATTR);\n\t              refLookup[key] = refLookup[key] || {};\n\t              refLookup[key][direction] = {\n\t                animationID: index,\n\t                element: jqLite(anchor)\n\t              };\n\t            });\n\t          } else {\n\t            preparedAnimations.push(animation);\n\t          }\n\t        });\n\n\t        var usedIndicesLookup = {};\n\t        var anchorGroups = {};\n\t        forEach(refLookup, function(operations, key) {\n\t          var from = operations.from;\n\t          var to = operations.to;\n\n\t          if (!from || !to) {\n\t            // only one of these is set therefore we can't have an\n\t            // anchor animation since all three pieces are required\n\t            var index = from ? from.animationID : to.animationID;\n\t            var indexKey = index.toString();\n\t            if (!usedIndicesLookup[indexKey]) {\n\t              usedIndicesLookup[indexKey] = true;\n\t              preparedAnimations.push(animations[index]);\n\t            }\n\t            return;\n\t          }\n\n\t          var fromAnimation = animations[from.animationID];\n\t          var toAnimation = animations[to.animationID];\n\t          var lookupKey = from.animationID.toString();\n\t          if (!anchorGroups[lookupKey]) {\n\t            var group = anchorGroups[lookupKey] = {\n\t              structural: true,\n\t              beforeStart: function() {\n\t                fromAnimation.beforeStart();\n\t                toAnimation.beforeStart();\n\t              },\n\t              close: function() {\n\t                fromAnimation.close();\n\t                toAnimation.close();\n\t              },\n\t              classes: cssClassesIntersection(fromAnimation.classes, toAnimation.classes),\n\t              from: fromAnimation,\n\t              to: toAnimation,\n\t              anchors: [] // TODO(matsko): change to reference nodes\n\t            };\n\n\t            // the anchor animations require that the from and to elements both have at least\n\t            // one shared CSS class which effectively marries the two elements together to use\n\t            // the same animation driver and to properly sequence the anchor animation.\n\t            if (group.classes.length) {\n\t              preparedAnimations.push(group);\n\t            } else {\n\t              preparedAnimations.push(fromAnimation);\n\t              preparedAnimations.push(toAnimation);\n\t            }\n\t          }\n\n\t          anchorGroups[lookupKey].anchors.push({\n\t            'out': from.element, 'in': to.element\n\t          });\n\t        });\n\n\t        return preparedAnimations;\n\t      }\n\n\t      function cssClassesIntersection(a,b) {\n\t        a = a.split(' ');\n\t        b = b.split(' ');\n\t        var matches = [];\n\n\t        for (var i = 0; i < a.length; i++) {\n\t          var aa = a[i];\n\t          if (aa.substring(0,3) === 'ng-') continue;\n\n\t          for (var j = 0; j < b.length; j++) {\n\t            if (aa === b[j]) {\n\t              matches.push(aa);\n\t              break;\n\t            }\n\t          }\n\t        }\n\n\t        return matches.join(' ');\n\t      }\n\n\t      function invokeFirstDriver(animationDetails) {\n\t        // we loop in reverse order since the more general drivers (like CSS and JS)\n\t        // may attempt more elements, but custom drivers are more particular\n\t        for (var i = drivers.length - 1; i >= 0; i--) {\n\t          var driverName = drivers[i];\n\t          if (!$injector.has(driverName)) continue; // TODO(matsko): remove this check\n\n\t          var factory = $injector.get(driverName);\n\t          var driver = factory(animationDetails);\n\t          if (driver) {\n\t            return driver;\n\t          }\n\t        }\n\t      }\n\n\t      function beforeStart() {\n\t        element.addClass(NG_ANIMATE_CLASSNAME);\n\t        if (tempClasses) {\n\t          $$jqLite.addClass(element, tempClasses);\n\t        }\n\t        if (prepareClassName) {\n\t          $$jqLite.removeClass(element, prepareClassName);\n\t          prepareClassName = null;\n\t        }\n\t      }\n\n\t      function updateAnimationRunners(animation, newRunner) {\n\t        if (animation.from && animation.to) {\n\t          update(animation.from.element);\n\t          update(animation.to.element);\n\t        } else {\n\t          update(animation.element);\n\t        }\n\n\t        function update(element) {\n\t          getRunner(element).setHost(newRunner);\n\t        }\n\t      }\n\n\t      function handleDestroyedElement() {\n\t        var runner = getRunner(element);\n\t        if (runner && (event !== 'leave' || !options.$$domOperationFired)) {\n\t          runner.end();\n\t        }\n\t      }\n\n\t      function close(rejected) { // jshint ignore:line\n\t        element.off('$destroy', handleDestroyedElement);\n\t        removeRunner(element);\n\n\t        applyAnimationClasses(element, options);\n\t        applyAnimationStyles(element, options);\n\t        options.domOperation();\n\n\t        if (tempClasses) {\n\t          $$jqLite.removeClass(element, tempClasses);\n\t        }\n\n\t        element.removeClass(NG_ANIMATE_CLASSNAME);\n\t        runner.complete(!rejected);\n\t      }\n\t    };\n\t  }];\n\t}];\n\n\t/**\n\t * @ngdoc directive\n\t * @name ngAnimateSwap\n\t * @restrict A\n\t * @scope\n\t *\n\t * @description\n\t *\n\t * ngAnimateSwap is a animation-oriented directive that allows for the container to\n\t * be removed and entered in whenever the associated expression changes. A\n\t * common usecase for this directive is a rotating banner or slider component which\n\t * contains one image being present at a time. When the active image changes\n\t * then the old image will perform a `leave` animation and the new element\n\t * will be inserted via an `enter` animation.\n\t *\n\t * @animations\n\t * | Animation                        | Occurs                               |\n\t * |----------------------------------|--------------------------------------|\n\t * | {@link ng.$animate#enter enter}  | when the new element is inserted to the DOM  |\n\t * | {@link ng.$animate#leave leave}  | when the old element is removed from the DOM |\n\t *\n\t * @example\n\t * <example name=\"ngAnimateSwap-directive\" module=\"ngAnimateSwapExample\"\n\t *          deps=\"angular-animate.js\"\n\t *          animations=\"true\" fixBase=\"true\">\n\t *   <file name=\"index.html\">\n\t *     <div class=\"container\" ng-controller=\"AppCtrl\">\n\t *       <div ng-animate-swap=\"number\" class=\"cell swap-animation\" ng-class=\"colorClass(number)\">\n\t *         {{ number }}\n\t *       </div>\n\t *     </div>\n\t *   </file>\n\t *   <file name=\"script.js\">\n\t *     angular.module('ngAnimateSwapExample', ['ngAnimate'])\n\t *       .controller('AppCtrl', ['$scope', '$interval', function($scope, $interval) {\n\t *         $scope.number = 0;\n\t *         $interval(function() {\n\t *           $scope.number++;\n\t *         }, 1000);\n\t *\n\t *         var colors = ['red','blue','green','yellow','orange'];\n\t *         $scope.colorClass = function(number) {\n\t *           return colors[number % colors.length];\n\t *         };\n\t *       }]);\n\t *   </file>\n\t *  <file name=\"animations.css\">\n\t *  .container {\n\t *    height:250px;\n\t *    width:250px;\n\t *    position:relative;\n\t *    overflow:hidden;\n\t *    border:2px solid black;\n\t *  }\n\t *  .container .cell {\n\t *    font-size:150px;\n\t *    text-align:center;\n\t *    line-height:250px;\n\t *    position:absolute;\n\t *    top:0;\n\t *    left:0;\n\t *    right:0;\n\t *    border-bottom:2px solid black;\n\t *  }\n\t *  .swap-animation.ng-enter, .swap-animation.ng-leave {\n\t *    transition:0.5s linear all;\n\t *  }\n\t *  .swap-animation.ng-enter {\n\t *    top:-250px;\n\t *  }\n\t *  .swap-animation.ng-enter-active {\n\t *    top:0px;\n\t *  }\n\t *  .swap-animation.ng-leave {\n\t *    top:0px;\n\t *  }\n\t *  .swap-animation.ng-leave-active {\n\t *    top:250px;\n\t *  }\n\t *  .red { background:red; }\n\t *  .green { background:green; }\n\t *  .blue { background:blue; }\n\t *  .yellow { background:yellow; }\n\t *  .orange { background:orange; }\n\t *  </file>\n\t * </example>\n\t */\n\tvar ngAnimateSwapDirective = ['$animate', '$rootScope', function($animate, $rootScope) {\n\t  return {\n\t    restrict: 'A',\n\t    transclude: 'element',\n\t    terminal: true,\n\t    priority: 600, // we use 600 here to ensure that the directive is caught before others\n\t    link: function(scope, $element, attrs, ctrl, $transclude) {\n\t      var previousElement, previousScope;\n\t      scope.$watchCollection(attrs.ngAnimateSwap || attrs['for'], function(value) {\n\t        if (previousElement) {\n\t          $animate.leave(previousElement);\n\t        }\n\t        if (previousScope) {\n\t          previousScope.$destroy();\n\t          previousScope = null;\n\t        }\n\t        if (value || value === 0) {\n\t          previousScope = scope.$new();\n\t          $transclude(previousScope, function(element) {\n\t            previousElement = element;\n\t            $animate.enter(element, null, $element);\n\t          });\n\t        }\n\t      });\n\t    }\n\t  };\n\t}];\n\n\t/* global angularAnimateModule: true,\n\n\t   ngAnimateSwapDirective,\n\t   $$AnimateAsyncRunFactory,\n\t   $$rAFSchedulerFactory,\n\t   $$AnimateChildrenDirective,\n\t   $$AnimateQueueProvider,\n\t   $$AnimationProvider,\n\t   $AnimateCssProvider,\n\t   $$AnimateCssDriverProvider,\n\t   $$AnimateJsProvider,\n\t   $$AnimateJsDriverProvider,\n\t*/\n\n\t/**\n\t * @ngdoc module\n\t * @name ngAnimate\n\t * @description\n\t *\n\t * The `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via\n\t * callback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an Angular app.\n\t *\n\t * <div doc-module-components=\"ngAnimate\"></div>\n\t *\n\t * # Usage\n\t * Simply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based\n\t * using CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For\n\t * both CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within\n\t * the HTML element that the animation will be triggered on.\n\t *\n\t * ## Directive Support\n\t * The following directives are \"animation aware\":\n\t *\n\t * | Directive                                                                                                | Supported Animations                                                     |\n\t * |----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n\t * | {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |\n\t * | {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |\n\t * | {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |\n\t * | {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |\n\t * | {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |\n\t * | {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |\n\t * | {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |\n\t * | {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |\n\t * | {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |\n\t * | {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |\n\t *\n\t * (More information can be found by visiting each the documentation associated with each directive.)\n\t *\n\t * ## CSS-based Animations\n\t *\n\t * CSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML\n\t * and CSS code we can create an animation that will be picked up by Angular when an the underlying directive performs an operation.\n\t *\n\t * The example below shows how an `enter` animation can be made possible on an element using `ng-if`:\n\t *\n\t * ```html\n\t * <div ng-if=\"bool\" class=\"fade\">\n\t *    Fade me in out\n\t * </div>\n\t * <button ng-click=\"bool=true\">Fade In!</button>\n\t * <button ng-click=\"bool=false\">Fade Out!</button>\n\t * ```\n\t *\n\t * Notice the CSS class **fade**? We can now create the CSS transition code that references this class:\n\t *\n\t * ```css\n\t * /&#42; The starting CSS styles for the enter animation &#42;/\n\t * .fade.ng-enter {\n\t *   transition:0.5s linear all;\n\t *   opacity:0;\n\t * }\n\t *\n\t * /&#42; The finishing CSS styles for the enter animation &#42;/\n\t * .fade.ng-enter.ng-enter-active {\n\t *   opacity:1;\n\t * }\n\t * ```\n\t *\n\t * The key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two\n\t * generated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition\n\t * code **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.\n\t *\n\t * If for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:\n\t *\n\t * ```css\n\t * /&#42; now the element will fade out before it is removed from the DOM &#42;/\n\t * .fade.ng-leave {\n\t *   transition:0.5s linear all;\n\t *   opacity:1;\n\t * }\n\t * .fade.ng-leave.ng-leave-active {\n\t *   opacity:0;\n\t * }\n\t * ```\n\t *\n\t * We can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:\n\t *\n\t * ```css\n\t * /&#42; there is no need to define anything inside of the destination\n\t * CSS class since the keyframe will take charge of the animation &#42;/\n\t * .fade.ng-leave {\n\t *   animation: my_fade_animation 0.5s linear;\n\t *   -webkit-animation: my_fade_animation 0.5s linear;\n\t * }\n\t *\n\t * @keyframes my_fade_animation {\n\t *   from { opacity:1; }\n\t *   to { opacity:0; }\n\t * }\n\t *\n\t * @-webkit-keyframes my_fade_animation {\n\t *   from { opacity:1; }\n\t *   to { opacity:0; }\n\t * }\n\t * ```\n\t *\n\t * Feel free also mix transitions and keyframes together as well as any other CSS classes on the same element.\n\t *\n\t * ### CSS Class-based Animations\n\t *\n\t * Class-based animations (animations that are triggered via `ngClass`, `ngShow`, `ngHide` and some other directives) have a slightly different\n\t * naming convention. Class-based animations are basic enough that a standard transition or keyframe can be referenced on the class being added\n\t * and removed.\n\t *\n\t * For example if we wanted to do a CSS animation for `ngHide` then we place an animation on the `.ng-hide` CSS class:\n\t *\n\t * ```html\n\t * <div ng-show=\"bool\" class=\"fade\">\n\t *   Show and hide me\n\t * </div>\n\t * <button ng-click=\"bool=!bool\">Toggle</button>\n\t *\n\t * <style>\n\t * .fade.ng-hide {\n\t *   transition:0.5s linear all;\n\t *   opacity:0;\n\t * }\n\t * </style>\n\t * ```\n\t *\n\t * All that is going on here with ngShow/ngHide behind the scenes is the `.ng-hide` class is added/removed (when the hidden state is valid). Since\n\t * ngShow and ngHide are animation aware then we can match up a transition and ngAnimate handles the rest.\n\t *\n\t * In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation\n\t * with CSS styles.\n\t *\n\t * ```html\n\t * <div ng-class=\"{on:onOff}\" class=\"highlight\">\n\t *   Highlight this box\n\t * </div>\n\t * <button ng-click=\"onOff=!onOff\">Toggle</button>\n\t *\n\t * <style>\n\t * .highlight {\n\t *   transition:0.5s linear all;\n\t * }\n\t * .highlight.on-add {\n\t *   background:white;\n\t * }\n\t * .highlight.on {\n\t *   background:yellow;\n\t * }\n\t * .highlight.on-remove {\n\t *   background:black;\n\t * }\n\t * </style>\n\t * ```\n\t *\n\t * We can also make use of CSS keyframes by placing them within the CSS classes.\n\t *\n\t *\n\t * ### CSS Staggering Animations\n\t * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a\n\t * curtain-like effect. The ngAnimate module (versions >=1.2) supports staggering animations and the stagger effect can be\n\t * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for\n\t * the animation. The style property expected within the stagger class can either be a **transition-delay** or an\n\t * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).\n\t *\n\t * ```css\n\t * .my-animation.ng-enter {\n\t *   /&#42; standard transition code &#42;/\n\t *   transition: 1s linear all;\n\t *   opacity:0;\n\t * }\n\t * .my-animation.ng-enter-stagger {\n\t *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/\n\t *   transition-delay: 0.1s;\n\t *\n\t *   /&#42; As of 1.4.4, this must always be set: it signals ngAnimate\n\t *     to not accidentally inherit a delay property from another CSS class &#42;/\n\t *   transition-duration: 0s;\n\t * }\n\t * .my-animation.ng-enter.ng-enter-active {\n\t *   /&#42; standard transition styles &#42;/\n\t *   opacity:1;\n\t * }\n\t * ```\n\t *\n\t * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations\n\t * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this\n\t * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation\n\t * will also be reset if one or more animation frames have passed since the multiple calls to `$animate` were fired.\n\t *\n\t * The following code will issue the **ng-leave-stagger** event on the element provided:\n\t *\n\t * ```js\n\t * var kids = parent.children();\n\t *\n\t * $animate.leave(kids[0]); //stagger index=0\n\t * $animate.leave(kids[1]); //stagger index=1\n\t * $animate.leave(kids[2]); //stagger index=2\n\t * $animate.leave(kids[3]); //stagger index=3\n\t * $animate.leave(kids[4]); //stagger index=4\n\t *\n\t * window.requestAnimationFrame(function() {\n\t *   //stagger has reset itself\n\t *   $animate.leave(kids[5]); //stagger index=0\n\t *   $animate.leave(kids[6]); //stagger index=1\n\t *\n\t *   $scope.$digest();\n\t * });\n\t * ```\n\t *\n\t * Stagger animations are currently only supported within CSS-defined animations.\n\t *\n\t * ### The `ng-animate` CSS class\n\t *\n\t * When ngAnimate is animating an element it will apply the `ng-animate` CSS class to the element for the duration of the animation.\n\t * This is a temporary CSS class and it will be removed once the animation is over (for both JavaScript and CSS-based animations).\n\t *\n\t * Therefore, animations can be applied to an element using this temporary class directly via CSS.\n\t *\n\t * ```css\n\t * .zipper.ng-animate {\n\t *   transition:0.5s linear all;\n\t * }\n\t * .zipper.ng-enter {\n\t *   opacity:0;\n\t * }\n\t * .zipper.ng-enter.ng-enter-active {\n\t *   opacity:1;\n\t * }\n\t * .zipper.ng-leave {\n\t *   opacity:1;\n\t * }\n\t * .zipper.ng-leave.ng-leave-active {\n\t *   opacity:0;\n\t * }\n\t * ```\n\t *\n\t * (Note that the `ng-animate` CSS class is reserved and it cannot be applied on an element directly since ngAnimate will always remove\n\t * the CSS class once an animation has completed.)\n\t *\n\t *\n\t * ### The `ng-[event]-prepare` class\n\t *\n\t * This is a special class that can be used to prevent unwanted flickering / flash of content before\n\t * the actual animation starts. The class is added as soon as an animation is initialized, but removed\n\t * before the actual animation starts (after waiting for a $digest).\n\t * It is also only added for *structural* animations (`enter`, `move`, and `leave`).\n\t *\n\t * In practice, flickering can appear when nesting elements with structural animations such as `ngIf`\n\t * into elements that have class-based animations such as `ngClass`.\n\t *\n\t * ```html\n\t * <div ng-class=\"{red: myProp}\">\n\t *   <div ng-class=\"{blue: myProp}\">\n\t *     <div class=\"message\" ng-if=\"myProp\"></div>\n\t *   </div>\n\t * </div>\n\t * ```\n\t *\n\t * It is possible that during the `enter` animation, the `.message` div will be briefly visible before it starts animating.\n\t * In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:\n\t *\n\t * ```css\n\t * .message.ng-enter-prepare {\n\t *   opacity: 0;\n\t * }\n\t *\n\t * ```\n\t *\n\t * ## JavaScript-based Animations\n\t *\n\t * ngAnimate also allows for animations to be consumed by JavaScript code. The approach is similar to CSS-based animations (where there is a shared\n\t * CSS class that is referenced in our HTML code) but in addition we need to register the JavaScript animation on the module. By making use of the\n\t * `module.animation()` module function we can register the animation.\n\t *\n\t * Let's see an example of a enter/leave animation using `ngRepeat`:\n\t *\n\t * ```html\n\t * <div ng-repeat=\"item in items\" class=\"slide\">\n\t *   {{ item }}\n\t * </div>\n\t * ```\n\t *\n\t * See the **slide** CSS class? Let's use that class to define an animation that we'll structure in our module code by using `module.animation`:\n\t *\n\t * ```js\n\t * myModule.animation('.slide', [function() {\n\t *   return {\n\t *     // make note that other events (like addClass/removeClass)\n\t *     // have different function input parameters\n\t *     enter: function(element, doneFn) {\n\t *       jQuery(element).fadeIn(1000, doneFn);\n\t *\n\t *       // remember to call doneFn so that angular\n\t *       // knows that the animation has concluded\n\t *     },\n\t *\n\t *     move: function(element, doneFn) {\n\t *       jQuery(element).fadeIn(1000, doneFn);\n\t *     },\n\t *\n\t *     leave: function(element, doneFn) {\n\t *       jQuery(element).fadeOut(1000, doneFn);\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * The nice thing about JS-based animations is that we can inject other services and make use of advanced animation libraries such as\n\t * greensock.js and velocity.js.\n\t *\n\t * If our animation code class-based (meaning that something like `ngClass`, `ngHide` and `ngShow` triggers it) then we can still define\n\t * our animations inside of the same registered animation, however, the function input arguments are a bit different:\n\t *\n\t * ```html\n\t * <div ng-class=\"color\" class=\"colorful\">\n\t *   this box is moody\n\t * </div>\n\t * <button ng-click=\"color='red'\">Change to red</button>\n\t * <button ng-click=\"color='blue'\">Change to blue</button>\n\t * <button ng-click=\"color='green'\">Change to green</button>\n\t * ```\n\t *\n\t * ```js\n\t * myModule.animation('.colorful', [function() {\n\t *   return {\n\t *     addClass: function(element, className, doneFn) {\n\t *       // do some cool animation and call the doneFn\n\t *     },\n\t *     removeClass: function(element, className, doneFn) {\n\t *       // do some cool animation and call the doneFn\n\t *     },\n\t *     setClass: function(element, addedClass, removedClass, doneFn) {\n\t *       // do some cool animation and call the doneFn\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * ## CSS + JS Animations Together\n\t *\n\t * AngularJS 1.4 and higher has taken steps to make the amalgamation of CSS and JS animations more flexible. However, unlike earlier versions of Angular,\n\t * defining CSS and JS animations to work off of the same CSS class will not work anymore. Therefore the example below will only result in **JS animations taking\n\t * charge of the animation**:\n\t *\n\t * ```html\n\t * <div ng-if=\"bool\" class=\"slide\">\n\t *   Slide in and out\n\t * </div>\n\t * ```\n\t *\n\t * ```js\n\t * myModule.animation('.slide', [function() {\n\t *   return {\n\t *     enter: function(element, doneFn) {\n\t *       jQuery(element).slideIn(1000, doneFn);\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * ```css\n\t * .slide.ng-enter {\n\t *   transition:0.5s linear all;\n\t *   transform:translateY(-100px);\n\t * }\n\t * .slide.ng-enter.ng-enter-active {\n\t *   transform:translateY(0);\n\t * }\n\t * ```\n\t *\n\t * Does this mean that CSS and JS animations cannot be used together? Do JS-based animations always have higher priority? We can make up for the\n\t * lack of CSS animations by using the `$animateCss` service to trigger our own tweaked-out, CSS-based animations directly from\n\t * our own JS-based animation code:\n\t *\n\t * ```js\n\t * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n\t *   return {\n\t *     enter: function(element) {\n\t*        // this will trigger `.slide.ng-enter` and `.slide.ng-enter-active`.\n\t *       return $animateCss(element, {\n\t *         event: 'enter',\n\t *         structural: true\n\t *       });\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * The nice thing here is that we can save bandwidth by sticking to our CSS-based animation code and we don't need to rely on a 3rd-party animation framework.\n\t *\n\t * The `$animateCss` service is very powerful since we can feed in all kinds of extra properties that will be evaluated and fed into a CSS transition or\n\t * keyframe animation. For example if we wanted to animate the height of an element while adding and removing classes then we can do so by providing that\n\t * data into `$animateCss` directly:\n\t *\n\t * ```js\n\t * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n\t *   return {\n\t *     enter: function(element) {\n\t *       return $animateCss(element, {\n\t *         event: 'enter',\n\t *         structural: true,\n\t *         addClass: 'maroon-setting',\n\t *         from: { height:0 },\n\t *         to: { height: 200 }\n\t *       });\n\t *     }\n\t *   }\n\t * }]);\n\t * ```\n\t *\n\t * Now we can fill in the rest via our transition CSS code:\n\t *\n\t * ```css\n\t * /&#42; the transition tells ngAnimate to make the animation happen &#42;/\n\t * .slide.ng-enter { transition:0.5s linear all; }\n\t *\n\t * /&#42; this extra CSS class will be absorbed into the transition\n\t * since the $animateCss code is adding the class &#42;/\n\t * .maroon-setting { background:red; }\n\t * ```\n\t *\n\t * And `$animateCss` will figure out the rest. Just make sure to have the `done()` callback fire the `doneFn` function to signal when the animation is over.\n\t *\n\t * To learn more about what's possible be sure to visit the {@link ngAnimate.$animateCss $animateCss service}.\n\t *\n\t * ## Animation Anchoring (via `ng-animate-ref`)\n\t *\n\t * ngAnimate in AngularJS 1.4 comes packed with the ability to cross-animate elements between\n\t * structural areas of an application (like views) by pairing up elements using an attribute\n\t * called `ng-animate-ref`.\n\t *\n\t * Let's say for example we have two views that are managed by `ng-view` and we want to show\n\t * that there is a relationship between two components situated in within these views. By using the\n\t * `ng-animate-ref` attribute we can identify that the two components are paired together and we\n\t * can then attach an animation, which is triggered when the view changes.\n\t *\n\t * Say for example we have the following template code:\n\t *\n\t * ```html\n\t * <!-- index.html -->\n\t * <div ng-view class=\"view-animation\">\n\t * </div>\n\t *\n\t * <!-- home.html -->\n\t * <a href=\"#/banner-page\">\n\t *   <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n\t * </a>\n\t *\n\t * <!-- banner-page.html -->\n\t * <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n\t * ```\n\t *\n\t * Now, when the view changes (once the link is clicked), ngAnimate will examine the\n\t * HTML contents to see if there is a match reference between any components in the view\n\t * that is leaving and the view that is entering. It will scan both the view which is being\n\t * removed (leave) and inserted (enter) to see if there are any paired DOM elements that\n\t * contain a matching ref value.\n\t *\n\t * The two images match since they share the same ref value. ngAnimate will now create a\n\t * transport element (which is a clone of the first image element) and it will then attempt\n\t * to animate to the position of the second image element in the next view. For the animation to\n\t * work a special CSS class called `ng-anchor` will be added to the transported element.\n\t *\n\t * We can now attach a transition onto the `.banner.ng-anchor` CSS class and then\n\t * ngAnimate will handle the entire transition for us as well as the addition and removal of\n\t * any changes of CSS classes between the elements:\n\t *\n\t * ```css\n\t * .banner.ng-anchor {\n\t *   /&#42; this animation will last for 1 second since there are\n\t *          two phases to the animation (an `in` and an `out` phase) &#42;/\n\t *   transition:0.5s linear all;\n\t * }\n\t * ```\n\t *\n\t * We also **must** include animations for the views that are being entered and removed\n\t * (otherwise anchoring wouldn't be possible since the new view would be inserted right away).\n\t *\n\t * ```css\n\t * .view-animation.ng-enter, .view-animation.ng-leave {\n\t *   transition:0.5s linear all;\n\t *   position:fixed;\n\t *   left:0;\n\t *   top:0;\n\t *   width:100%;\n\t * }\n\t * .view-animation.ng-enter {\n\t *   transform:translateX(100%);\n\t * }\n\t * .view-animation.ng-leave,\n\t * .view-animation.ng-enter.ng-enter-active {\n\t *   transform:translateX(0%);\n\t * }\n\t * .view-animation.ng-leave.ng-leave-active {\n\t *   transform:translateX(-100%);\n\t * }\n\t * ```\n\t *\n\t * Now we can jump back to the anchor animation. When the animation happens, there are two stages that occur:\n\t * an `out` and an `in` stage. The `out` stage happens first and that is when the element is animated away\n\t * from its origin. Once that animation is over then the `in` stage occurs which animates the\n\t * element to its destination. The reason why there are two animations is to give enough time\n\t * for the enter animation on the new element to be ready.\n\t *\n\t * The example above sets up a transition for both the in and out phases, but we can also target the out or\n\t * in phases directly via `ng-anchor-out` and `ng-anchor-in`.\n\t *\n\t * ```css\n\t * .banner.ng-anchor-out {\n\t *   transition: 0.5s linear all;\n\t *\n\t *   /&#42; the scale will be applied during the out animation,\n\t *          but will be animated away when the in animation runs &#42;/\n\t *   transform: scale(1.2);\n\t * }\n\t *\n\t * .banner.ng-anchor-in {\n\t *   transition: 1s linear all;\n\t * }\n\t * ```\n\t *\n\t *\n\t *\n\t *\n\t * ### Anchoring Demo\n\t *\n\t  <example module=\"anchoringExample\"\n\t           name=\"anchoringExample\"\n\t           id=\"anchoringExample\"\n\t           deps=\"angular-animate.js;angular-route.js\"\n\t           animations=\"true\">\n\t    <file name=\"index.html\">\n\t      <a href=\"#/\">Home</a>\n\t      <hr />\n\t      <div class=\"view-container\">\n\t        <div ng-view class=\"view\"></div>\n\t      </div>\n\t    </file>\n\t    <file name=\"script.js\">\n\t      angular.module('anchoringExample', ['ngAnimate', 'ngRoute'])\n\t        .config(['$routeProvider', function($routeProvider) {\n\t          $routeProvider.when('/', {\n\t            templateUrl: 'home.html',\n\t            controller: 'HomeController as home'\n\t          });\n\t          $routeProvider.when('/profile/:id', {\n\t            templateUrl: 'profile.html',\n\t            controller: 'ProfileController as profile'\n\t          });\n\t        }])\n\t        .run(['$rootScope', function($rootScope) {\n\t          $rootScope.records = [\n\t            { id:1, title: \"Miss Beulah Roob\" },\n\t            { id:2, title: \"Trent Morissette\" },\n\t            { id:3, title: \"Miss Ava Pouros\" },\n\t            { id:4, title: \"Rod Pouros\" },\n\t            { id:5, title: \"Abdul Rice\" },\n\t            { id:6, title: \"Laurie Rutherford Sr.\" },\n\t            { id:7, title: \"Nakia McLaughlin\" },\n\t            { id:8, title: \"Jordon Blanda DVM\" },\n\t            { id:9, title: \"Rhoda Hand\" },\n\t            { id:10, title: \"Alexandrea Sauer\" }\n\t          ];\n\t        }])\n\t        .controller('HomeController', [function() {\n\t          //empty\n\t        }])\n\t        .controller('ProfileController', ['$rootScope', '$routeParams', function($rootScope, $routeParams) {\n\t          var index = parseInt($routeParams.id, 10);\n\t          var record = $rootScope.records[index - 1];\n\n\t          this.title = record.title;\n\t          this.id = record.id;\n\t        }]);\n\t    </file>\n\t    <file name=\"home.html\">\n\t      <h2>Welcome to the home page</h1>\n\t      <p>Please click on an element</p>\n\t      <a class=\"record\"\n\t         ng-href=\"#/profile/{{ record.id }}\"\n\t         ng-animate-ref=\"{{ record.id }}\"\n\t         ng-repeat=\"record in records\">\n\t        {{ record.title }}\n\t      </a>\n\t    </file>\n\t    <file name=\"profile.html\">\n\t      <div class=\"profile record\" ng-animate-ref=\"{{ profile.id }}\">\n\t        {{ profile.title }}\n\t      </div>\n\t    </file>\n\t    <file name=\"animations.css\">\n\t      .record {\n\t        display:block;\n\t        font-size:20px;\n\t      }\n\t      .profile {\n\t        background:black;\n\t        color:white;\n\t        font-size:100px;\n\t      }\n\t      .view-container {\n\t        position:relative;\n\t      }\n\t      .view-container > .view.ng-animate {\n\t        position:absolute;\n\t        top:0;\n\t        left:0;\n\t        width:100%;\n\t        min-height:500px;\n\t      }\n\t      .view.ng-enter, .view.ng-leave,\n\t      .record.ng-anchor {\n\t        transition:0.5s linear all;\n\t      }\n\t      .view.ng-enter {\n\t        transform:translateX(100%);\n\t      }\n\t      .view.ng-enter.ng-enter-active, .view.ng-leave {\n\t        transform:translateX(0%);\n\t      }\n\t      .view.ng-leave.ng-leave-active {\n\t        transform:translateX(-100%);\n\t      }\n\t      .record.ng-anchor-out {\n\t        background:red;\n\t      }\n\t    </file>\n\t  </example>\n\t *\n\t * ### How is the element transported?\n\t *\n\t * When an anchor animation occurs, ngAnimate will clone the starting element and position it exactly where the starting\n\t * element is located on screen via absolute positioning. The cloned element will be placed inside of the root element\n\t * of the application (where ng-app was defined) and all of the CSS classes of the starting element will be applied. The\n\t * element will then animate into the `out` and `in` animations and will eventually reach the coordinates and match\n\t * the dimensions of the destination element. During the entire animation a CSS class of `.ng-animate-shim` will be applied\n\t * to both the starting and destination elements in order to hide them from being visible (the CSS styling for the class\n\t * is: `visibility:hidden`). Once the anchor reaches its destination then it will be removed and the destination element\n\t * will become visible since the shim class will be removed.\n\t *\n\t * ### How is the morphing handled?\n\t *\n\t * CSS Anchoring relies on transitions and keyframes and the internal code is intelligent enough to figure out\n\t * what CSS classes differ between the starting element and the destination element. These different CSS classes\n\t * will be added/removed on the anchor element and a transition will be applied (the transition that is provided\n\t * in the anchor class). Long story short, ngAnimate will figure out what classes to add and remove which will\n\t * make the transition of the element as smooth and automatic as possible. Be sure to use simple CSS classes that\n\t * do not rely on DOM nesting structure so that the anchor element appears the same as the starting element (since\n\t * the cloned element is placed inside of root element which is likely close to the body element).\n\t *\n\t * Note that if the root element is on the `<html>` element then the cloned node will be placed inside of body.\n\t *\n\t *\n\t * ## Using $animate in your directive code\n\t *\n\t * So far we've explored how to feed in animations into an Angular application, but how do we trigger animations within our own directives in our application?\n\t * By injecting the `$animate` service into our directive code, we can trigger structural and class-based hooks which can then be consumed by animations. Let's\n\t * imagine we have a greeting box that shows and hides itself when the data changes\n\t *\n\t * ```html\n\t * <greeting-box active=\"onOrOff\">Hi there</greeting-box>\n\t * ```\n\t *\n\t * ```js\n\t * ngModule.directive('greetingBox', ['$animate', function($animate) {\n\t *   return function(scope, element, attrs) {\n\t *     attrs.$observe('active', function(value) {\n\t *       value ? $animate.addClass(element, 'on') : $animate.removeClass(element, 'on');\n\t *     });\n\t *   });\n\t * }]);\n\t * ```\n\t *\n\t * Now the `on` CSS class is added and removed on the greeting box component. Now if we add a CSS class on top of the greeting box element\n\t * in our HTML code then we can trigger a CSS or JS animation to happen.\n\t *\n\t * ```css\n\t * /&#42; normally we would create a CSS class to reference on the element &#42;/\n\t * greeting-box.on { transition:0.5s linear all; background:green; color:white; }\n\t * ```\n\t *\n\t * The `$animate` service contains a variety of other methods like `enter`, `leave`, `animate` and `setClass`. To learn more about what's\n\t * possible be sure to visit the {@link ng.$animate $animate service API page}.\n\t *\n\t *\n\t * ## Callbacks and Promises\n\t *\n\t * When `$animate` is called it returns a promise that can be used to capture when the animation has ended. Therefore if we were to trigger\n\t * an animation (within our directive code) then we can continue performing directive and scope related activities after the animation has\n\t * ended by chaining onto the returned promise that animation method returns.\n\t *\n\t * ```js\n\t * // somewhere within the depths of the directive\n\t * $animate.enter(element, parent).then(function() {\n\t *   //the animation has completed\n\t * });\n\t * ```\n\t *\n\t * (Note that earlier versions of Angular prior to v1.4 required the promise code to be wrapped using `$scope.$apply(...)`. This is not the case\n\t * anymore.)\n\t *\n\t * In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering\n\t * an event listener using the `$animate` service. Let's say for example that an animation was triggered on our view\n\t * routing controller to hook into that:\n\t *\n\t * ```js\n\t * ngModule.controller('HomePageController', ['$animate', function($animate) {\n\t *   $animate.on('enter', ngViewElement, function(element) {\n\t *     // the animation for this route has completed\n\t *   }]);\n\t * }])\n\t * ```\n\t *\n\t * (Note that you will need to trigger a digest within the callback to get angular to notice any scope-related changes.)\n\t */\n\n\t/**\n\t * @ngdoc service\n\t * @name $animate\n\t * @kind object\n\t *\n\t * @description\n\t * The ngAnimate `$animate` service documentation is the same for the core `$animate` service.\n\t *\n\t * Click here {@link ng.$animate to learn more about animations with `$animate`}.\n\t */\n\tangular.module('ngAnimate', [])\n\t  .directive('ngAnimateSwap', ngAnimateSwapDirective)\n\n\t  .directive('ngAnimateChildren', $$AnimateChildrenDirective)\n\t  .factory('$$rAFScheduler', $$rAFSchedulerFactory)\n\n\t  .provider('$$animateQueue', $$AnimateQueueProvider)\n\t  .provider('$$animation', $$AnimationProvider)\n\n\t  .provider('$animateCss', $AnimateCssProvider)\n\t  .provider('$$animateCssDriver', $$AnimateCssDriverProvider)\n\n\t  .provider('$$animateJs', $$AnimateJsProvider)\n\t  .provider('$$animateJsDriver', $$AnimateJsDriverProvider);\n\n\n\t})(window, window.angular);\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(74);\n\tmodule.exports = __webpack_require__(76);\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(75);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../css-loader/index.js!./carousel.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../css-loader/index.js!./carousel.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".ng-animate.item:not(.left):not(.right){-webkit-transition:left 0s ease-in-out;transition:left 0s ease-in-out}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(77);\n\t__webpack_require__(78);\n\t__webpack_require__(79);\n\n\tvar MODULE_NAME = 'ui.bootstrap.module.carousel';\n\n\tangular.module(MODULE_NAME, ['ui.bootstrap.carousel', 'uib/template/carousel/carousel.html', 'uib/template/carousel/slide.html']);\n\n\tmodule.exports = MODULE_NAME;\n\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/carousel/carousel.html\",\n\t    \"<div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n\t    \"<a role=\\\"button\\\" href class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-class=\\\"{ disabled: isPrevDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n\t    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n\" +\n\t    \"  <span class=\\\"sr-only\\\">previous</span>\\n\" +\n\t    \"</a>\\n\" +\n\t    \"<a role=\\\"button\\\" href class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-class=\\\"{ disabled: isNextDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n\t    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n\" +\n\t    \"  <span class=\\\"sr-only\\\">next</span>\\n\" +\n\t    \"</a>\\n\" +\n\t    \"<ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n\t    \"  <li ng-repeat=\\\"slide in slides | orderBy:indexOfSlide track by $index\\\" ng-class=\\\"{ active: isActive(slide) }\\\" ng-click=\\\"select(slide)\\\">\\n\" +\n\t    \"    <span class=\\\"sr-only\\\">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if=\\\"isActive(slide)\\\">, currently active</span></span>\\n\" +\n\t    \"  </li>\\n\" +\n\t    \"</ol>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 78 */\n/***/ function(module, exports) {\n\n\tangular.module(\"uib/template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n\t  $templateCache.put(\"uib/template/carousel/slide.html\",\n\t    \"<div class=\\\"text-center\\\" ng-transclude></div>\\n\" +\n\t    \"\");\n\t}]);\n\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\tangular.module('ui.bootstrap.carousel', [])\n\n\t.controller('UibCarouselController', ['$scope', '$element', '$interval', '$timeout', '$animate', function($scope, $element, $interval, $timeout, $animate) {\n\t  var self = this,\n\t    slides = self.slides = $scope.slides = [],\n\t    SLIDE_DIRECTION = 'uib-slideDirection',\n\t    currentIndex = $scope.active,\n\t    currentInterval, isPlaying, bufferedTransitions = [];\n\n\t  var destroyed = false;\n\t  $element.addClass('carousel');\n\n\t  self.addSlide = function(slide, element) {\n\t    slides.push({\n\t      slide: slide,\n\t      element: element\n\t    });\n\t    slides.sort(function(a, b) {\n\t      return +a.slide.index - +b.slide.index;\n\t    });\n\t    //if this is the first slide or the slide is set to active, select it\n\t    if (slide.index === $scope.active || slides.length === 1 && !angular.isNumber($scope.active)) {\n\t      if ($scope.$currentTransition) {\n\t        $scope.$currentTransition = null;\n\t      }\n\n\t      currentIndex = slide.index;\n\t      $scope.active = slide.index;\n\t      setActive(currentIndex);\n\t      self.select(slides[findSlideIndex(slide)]);\n\t      if (slides.length === 1) {\n\t        $scope.play();\n\t      }\n\t    }\n\t  };\n\n\t  self.getCurrentIndex = function() {\n\t    for (var i = 0; i < slides.length; i++) {\n\t      if (slides[i].slide.index === currentIndex) {\n\t        return i;\n\t      }\n\t    }\n\t  };\n\n\t  self.next = $scope.next = function() {\n\t    var newIndex = (self.getCurrentIndex() + 1) % slides.length;\n\n\t    if (newIndex === 0 && $scope.noWrap()) {\n\t      $scope.pause();\n\t      return;\n\t    }\n\n\t    return self.select(slides[newIndex], 'next');\n\t  };\n\n\t  self.prev = $scope.prev = function() {\n\t    var newIndex = self.getCurrentIndex() - 1 < 0 ? slides.length - 1 : self.getCurrentIndex() - 1;\n\n\t    if ($scope.noWrap() && newIndex === slides.length - 1) {\n\t      $scope.pause();\n\t      return;\n\t    }\n\n\t    return self.select(slides[newIndex], 'prev');\n\t  };\n\n\t  self.removeSlide = function(slide) {\n\t    var index = findSlideIndex(slide);\n\n\t    var bufferedIndex = bufferedTransitions.indexOf(slides[index]);\n\t    if (bufferedIndex !== -1) {\n\t      bufferedTransitions.splice(bufferedIndex, 1);\n\t    }\n\n\t    //get the index of the slide inside the carousel\n\t    slides.splice(index, 1);\n\t    if (slides.length > 0 && currentIndex === index) {\n\t      if (index >= slides.length) {\n\t        currentIndex = slides.length - 1;\n\t        $scope.active = currentIndex;\n\t        setActive(currentIndex);\n\t        self.select(slides[slides.length - 1]);\n\t      } else {\n\t        currentIndex = index;\n\t        $scope.active = currentIndex;\n\t        setActive(currentIndex);\n\t        self.select(slides[index]);\n\t      }\n\t    } else if (currentIndex > index) {\n\t      currentIndex--;\n\t      $scope.active = currentIndex;\n\t    }\n\n\t    //clean the active value when no more slide\n\t    if (slides.length === 0) {\n\t      currentIndex = null;\n\t      $scope.active = null;\n\t      clearBufferedTransitions();\n\t    }\n\t  };\n\n\t  /* direction: \"prev\" or \"next\" */\n\t  self.select = $scope.select = function(nextSlide, direction) {\n\t    var nextIndex = findSlideIndex(nextSlide.slide);\n\t    //Decide direction if it's not given\n\t    if (direction === undefined) {\n\t      direction = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n\t    }\n\t    //Prevent this user-triggered transition from occurring if there is already one in progress\n\t    if (nextSlide.slide.index !== currentIndex &&\n\t      !$scope.$currentTransition) {\n\t      goNext(nextSlide.slide, nextIndex, direction);\n\t    } else if (nextSlide && nextSlide.slide.index !== currentIndex && $scope.$currentTransition) {\n\t      bufferedTransitions.push(slides[nextIndex]);\n\t    }\n\t  };\n\n\t  /* Allow outside people to call indexOf on slides array */\n\t  $scope.indexOfSlide = function(slide) {\n\t    return +slide.slide.index;\n\t  };\n\n\t  $scope.isActive = function(slide) {\n\t    return $scope.active === slide.slide.index;\n\t  };\n\n\t  $scope.isPrevDisabled = function() {\n\t    return $scope.active === 0 && $scope.noWrap();\n\t  };\n\n\t  $scope.isNextDisabled = function() {\n\t    return $scope.active === slides.length - 1 && $scope.noWrap();\n\t  };\n\n\t  $scope.pause = function() {\n\t    if (!$scope.noPause) {\n\t      isPlaying = false;\n\t      resetTimer();\n\t    }\n\t  };\n\n\t  $scope.play = function() {\n\t    if (!isPlaying) {\n\t      isPlaying = true;\n\t      restartTimer();\n\t    }\n\t  };\n\n\t  $element.on('mouseenter', $scope.pause);\n\t  $element.on('mouseleave', $scope.play);\n\n\t  $scope.$on('$destroy', function() {\n\t    destroyed = true;\n\t    resetTimer();\n\t  });\n\n\t  $scope.$watch('noTransition', function(noTransition) {\n\t    $animate.enabled($element, !noTransition);\n\t  });\n\n\t  $scope.$watch('interval', restartTimer);\n\n\t  $scope.$watchCollection('slides', resetTransition);\n\n\t  $scope.$watch('active', function(index) {\n\t    if (angular.isNumber(index) && currentIndex !== index) {\n\t      for (var i = 0; i < slides.length; i++) {\n\t        if (slides[i].slide.index === index) {\n\t          index = i;\n\t          break;\n\t        }\n\t      }\n\n\t      var slide = slides[index];\n\t      if (slide) {\n\t        setActive(index);\n\t        self.select(slides[index]);\n\t        currentIndex = index;\n\t      }\n\t    }\n\t  });\n\n\t  function clearBufferedTransitions() {\n\t    while (bufferedTransitions.length) {\n\t      bufferedTransitions.shift();\n\t    }\n\t  }\n\n\t  function getSlideByIndex(index) {\n\t    for (var i = 0, l = slides.length; i < l; ++i) {\n\t      if (slides[i].index === index) {\n\t        return slides[i];\n\t      }\n\t    }\n\t  }\n\n\t  function setActive(index) {\n\t    for (var i = 0; i < slides.length; i++) {\n\t      slides[i].slide.active = i === index;\n\t    }\n\t  }\n\n\t  function goNext(slide, index, direction) {\n\t    if (destroyed) {\n\t      return;\n\t    }\n\n\t    angular.extend(slide, {direction: direction});\n\t    angular.extend(slides[currentIndex].slide || {}, {direction: direction});\n\t    if ($animate.enabled($element) && !$scope.$currentTransition &&\n\t      slides[index].element && self.slides.length > 1) {\n\t      slides[index].element.data(SLIDE_DIRECTION, slide.direction);\n\t      var currentIdx = self.getCurrentIndex();\n\n\t      if (angular.isNumber(currentIdx) && slides[currentIdx].element) {\n\t        slides[currentIdx].element.data(SLIDE_DIRECTION, slide.direction);\n\t      }\n\n\t      $scope.$currentTransition = true;\n\t      $animate.on('addClass', slides[index].element, function(element, phase) {\n\t        if (phase === 'close') {\n\t          $scope.$currentTransition = null;\n\t          $animate.off('addClass', element);\n\t          if (bufferedTransitions.length) {\n\t            var nextSlide = bufferedTransitions.pop().slide;\n\t            var nextIndex = nextSlide.index;\n\t            var nextDirection = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n\t            clearBufferedTransitions();\n\n\t            goNext(nextSlide, nextIndex, nextDirection);\n\t          }\n\t        }\n\t      });\n\t    }\n\n\t    $scope.active = slide.index;\n\t    currentIndex = slide.index;\n\t    setActive(index);\n\n\t    //every time you change slides, reset the timer\n\t    restartTimer();\n\t  }\n\n\t  function findSlideIndex(slide) {\n\t    for (var i = 0; i < slides.length; i++) {\n\t      if (slides[i].slide === slide) {\n\t        return i;\n\t      }\n\t    }\n\t  }\n\n\t  function resetTimer() {\n\t    if (currentInterval) {\n\t      $interval.cancel(currentInterval);\n\t      currentInterval = null;\n\t    }\n\t  }\n\n\t  function resetTransition(slides) {\n\t    if (!slides.length) {\n\t      $scope.$currentTransition = null;\n\t      clearBufferedTransitions();\n\t    }\n\t  }\n\n\t  function restartTimer() {\n\t    resetTimer();\n\t    var interval = +$scope.interval;\n\t    if (!isNaN(interval) && interval > 0) {\n\t      currentInterval = $interval(timerFn, interval);\n\t    }\n\t  }\n\n\t  function timerFn() {\n\t    var interval = +$scope.interval;\n\t    if (isPlaying && !isNaN(interval) && interval > 0 && slides.length) {\n\t      $scope.next();\n\t    } else {\n\t      $scope.pause();\n\t    }\n\t  }\n\t}])\n\n\t.directive('uibCarousel', function() {\n\t  return {\n\t    transclude: true,\n\t    controller: 'UibCarouselController',\n\t    controllerAs: 'carousel',\n\t    restrict: 'A',\n\t    templateUrl: function(element, attrs) {\n\t      return attrs.templateUrl || 'uib/template/carousel/carousel.html';\n\t    },\n\t    scope: {\n\t      active: '=',\n\t      interval: '=',\n\t      noTransition: '=',\n\t      noPause: '=',\n\t      noWrap: '&'\n\t    }\n\t  };\n\t})\n\n\t.directive('uibSlide', ['$animate', function($animate) {\n\t  return {\n\t    require: '^uibCarousel',\n\t    restrict: 'A',\n\t    transclude: true,\n\t    templateUrl: function(element, attrs) {\n\t      return attrs.templateUrl || 'uib/template/carousel/slide.html';\n\t    },\n\t    scope: {\n\t      actual: '=?',\n\t      index: '=?'\n\t    },\n\t    link: function (scope, element, attrs, carouselCtrl) {\n\t      element.addClass('item');\n\t      carouselCtrl.addSlide(scope, element);\n\t      //when the scope is destroyed then remove the slide from the current slides array\n\t      scope.$on('$destroy', function() {\n\t        carouselCtrl.removeSlide(scope);\n\t      });\n\n\t      scope.$watch('active', function(active) {\n\t        $animate[active ? 'addClass' : 'removeClass'](element, 'active');\n\t      });\n\t    }\n\t  };\n\t}])\n\n\t.animation('.item', ['$animateCss',\n\tfunction($animateCss) {\n\t  var SLIDE_DIRECTION = 'uib-slideDirection';\n\n\t  function removeClass(element, className, callback) {\n\t    element.removeClass(className);\n\t    if (callback) {\n\t      callback();\n\t    }\n\t  }\n\n\t  return {\n\t    beforeAddClass: function(element, className, done) {\n\t      if (className === 'active') {\n\t        var stopped = false;\n\t        var direction = element.data(SLIDE_DIRECTION);\n\t        var directionClass = direction === 'next' ? 'left' : 'right';\n\t        var removeClassFn = removeClass.bind(this, element,\n\t          directionClass + ' ' + direction, done);\n\t        element.addClass(direction);\n\n\t        $animateCss(element, {addClass: directionClass})\n\t          .start()\n\t          .done(removeClassFn);\n\n\t        return function() {\n\t          stopped = true;\n\t        };\n\t      }\n\t      done();\n\t    },\n\t    beforeRemoveClass: function (element, className, done) {\n\t      if (className === 'active') {\n\t        var stopped = false;\n\t        var direction = element.data(SLIDE_DIRECTION);\n\t        var directionClass = direction === 'next' ? 'left' : 'right';\n\t        var removeClassFn = removeClass.bind(this, element, directionClass, done);\n\n\t        $animateCss(element, {addClass: directionClass})\n\t          .start()\n\t          .done(removeClassFn);\n\n\t        return function() {\n\t          stopped = true;\n\t        };\n\t      }\n\t      done();\n\t    }\n\t  };\n\t}]);\n\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(81);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./carousel.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./carousel.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".carousel,.carousel-inner{position:relative}.carousel-inner{overflow:hidden;width:100%}.carousel-inner>.item{display:none;position:relative;-webkit-transition:left .6s ease-in-out;transition:left .6s ease-in-out}.carousel-inner>.item>a>img,.carousel-inner>.item>img{line-height:1}@media (-webkit-transform-3d),all and (transform-3d){.carousel-inner>.item{-webkit-transition:-webkit-transform .6s ease-in-out;transition:transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-inner>.item.active.right,.carousel-inner>.item.next{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);left:0}.carousel-inner>.item.active.left,.carousel-inner>.item.prev{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0);left:0}.carousel-inner>.item.active,.carousel-inner>.item.next.left,.carousel-inner>.item.prev.right{-webkit-transform:translateZ(0);transform:translateZ(0);left:0}}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;left:0;bottom:0;width:15%;opacity:.5;filter:alpha(opacity=50);font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);background-color:transparent}.carousel-control.left{background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,.0001));background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.0001)));background-image:linear-gradient(90deg,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#80000000\\\",endColorstr=\\\"#00000000\\\",GradientType=1)}.carousel-control.right{left:auto;right:0;background-image:-webkit-linear-gradient(left,rgba(0,0,0,.0001),rgba(0,0,0,.5));background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.0001)),to(rgba(0,0,0,.5)));background-image:linear-gradient(90deg,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#00000000\\\",endColorstr=\\\"#80000000\\\",GradientType=1)}.carousel-control:focus,.carousel-control:hover{outline:0;color:#fff;text-decoration:none;opacity:.9;filter:alpha(opacity=90)}.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;margin-top:-10px;z-index:5;display:inline-block}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-next,.carousel-control .icon-prev{width:20px;height:20px;line-height:1;font-family:serif}.carousel-control .icon-prev:before{content:\\\"\\\\2039\\\"}.carousel-control .icon-next:before{content:\\\"\\\\203A\\\"}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;margin-left:-30%;padding-left:0;list-style:none;text-align:center}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;border:1px solid #fff;border-radius:10px;cursor:pointer;background-color:#000\\\\9;background-color:transparent}.carousel-indicators .active{margin:0;width:12px;height:12px;background-color:#fff}.carousel-caption{position:absolute;left:15%;right:15%;bottom:20px;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media screen and (min-width:768px){.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-10px;font-size:30px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{margin-right:-10px}.carousel-caption{left:20%;right:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}\", \"\"]);\n\n\t// exports\n\n\n/***/ },\n/* 82 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\trunFunc.$inject = [\"$templateCache\"];\n\tfunction runFunc($templateCache) {\n\t    'ngInject';\n\t    $templateCache.put(\"uib/template/carousel/carousel.html\", \"<div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n\t        \"<a role=\\\"button\\\" href class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-class=\\\"{ disabled: isPrevDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n\t        \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n\" +\n\t        \"  <span class=\\\"sr-only\\\">previous</span>\\n\" +\n\t        \"</a>\\n\" +\n\t        \"<a role=\\\"button\\\" href class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-class=\\\"{ disabled: isNextDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n\t        \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n\" +\n\t        \"  <span class=\\\"sr-only\\\">next</span>\\n\" +\n\t        \"</a>\\n\" +\n\t        \"<ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n\t        \"  <li ng-repeat=\\\"slide in slides | orderBy:indexOfSlide track by $index\\\" ng-class=\\\"{ active: isActive(slide) }\\\" ng-click=\\\"select(slide)\\\">\\n\" +\n\t        \"    <span class=\\\"sr-only\\\">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if=\\\"isActive(slide)\\\">, currently active</span></span>\\n\" +\n\t        \"  </li>\\n\" +\n\t        \"</ol>\\n\" +\n\t        \"\");\n\t    $templateCache.put(\"uib/template/carousel/slide.html\", \"<div class=\\\"text-center\\\" ng-transclude></div>\\n\" +\n\t        \"\");\n\t}\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = runFunc;\n\t;\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\tvar timestamp_component_1 = __webpack_require__(84);\n\tvar module = angular.module('ep.timestamp', []);\n\tmodule.component('timestamp', timestamp_component_1.timestampComponent);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar timestamp_controller_1 = __webpack_require__(85);\n\texports.timestampComponent = {\n\t    controller: timestamp_controller_1.TimestampController,\n\t    controllerAs: 'vm',\n\t    template: __webpack_require__(87),\n\t    bindings: {\n\t        date: '<',\n\t        format: '<?',\n\t        timezone: '<?'\n\t    }\n\t};\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar moment = __webpack_require__(86);\n\tvar momentTz = __webpack_require__(86);\n\tvar TimestampController = (function () {\n\t    function TimestampController() {\n\t    }\n\t    TimestampController.prototype.$onInit = function () {\n\t        this.initParams();\n\t        this.formatDate();\n\t    };\n\t    TimestampController.prototype.$onChanges = function () {\n\t        this.initParams();\n\t        this.formatDate();\n\t    };\n\t    TimestampController.prototype.initParams = function () {\n\t        this.date = this.date || moment().toISOString();\n\t        this.format = this.format || 'dddd, MMMM Do YYYY, h:mm a';\n\t    };\n\t    TimestampController.prototype.formatDate = function () {\n\t        var date;\n\t        if (this.timezone) {\n\t            date = momentTz.tz(this.date, this.timezone);\n\t        }\n\t        else {\n\t            date = moment(this.date);\n\t        }\n\t        this.formattedDate = date.format(this.format);\n\t    };\n\t    return TimestampController;\n\t}());\n\texports.TimestampController = TimestampController;\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_86__;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<span ng-bind=\\\"vm.formattedDate\\\"></span>\\n\"\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar angular = __webpack_require__(30);\n\tvar timestampsRange_component_1 = __webpack_require__(89);\n\t__webpack_require__(92);\n\tvar module = angular.module('ep.timestampsRange', []);\n\tmodule.component('timestampsRange', timestampsRange_component_1.timestampsRangeComponent);\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = module.name;\n\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar timestampsRange_controller_1 = __webpack_require__(90);\n\texports.timestampsRangeComponent = {\n\t    template: __webpack_require__(91),\n\t    controllerAs: 'vm',\n\t    controller: timestampsRange_controller_1.TimestampsRangeController,\n\t    bindings: {\n\t        start: '<',\n\t        end: '<?',\n\t        tz: '<?',\n\t        format: '<?'\n\t    }\n\t};\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar momentTz = __webpack_require__(86);\n\tvar DATE_FORMAT = 'ddd, MMM D, YYYY';\n\tvar TIME_FORMAT = 'h:mma';\n\tvar SHORT_TIME_FORMAT = 'ha';\n\tvar TimestampsRangeController = (function () {\n\t    function TimestampsRangeController() {\n\t    }\n\t    TimestampsRangeController.prototype.$onInit = function () {\n\t        this.dateFormat = this.format || DATE_FORMAT;\n\t        this.processDates(this.start, this.end, this.tz);\n\t    };\n\t    TimestampsRangeController.prototype.$onChanges = function () {\n\t        this.processDates(this.start, this.end, this.tz);\n\t    };\n\t    TimestampsRangeController.prototype.processDates = function (start, end, tz) {\n\t        var startMoment = momentTz.tz(start, tz);\n\t        var endMoment = momentTz.tz(end, tz);\n\t        this.isSameDate = startMoment.isSame(endMoment, 'day');\n\t        this.startTimeFormat = this.getTimeFormat(startMoment);\n\t        this.endTimeFormat = this.getTimeFormat(endMoment);\n\t    };\n\t    TimestampsRangeController.prototype.getTimeFormat = function (moment) {\n\t        return moment.minutes() > 0 ? TIME_FORMAT : SHORT_TIME_FORMAT;\n\t    };\n\t    return TimestampsRangeController;\n\t}());\n\texports.TimestampsRangeController = TimestampsRangeController;\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"timestamps-range\\\">\\n  <span class=\\\"bold\\\"><timestamp date=\\\"vm.start\\\" timezone=\\\"vm.tz\\\" format=\\\"vm.dateFormat\\\"></timestamp></span>\\n  <timestamp date=\\\"vm.start\\\" timezone=\\\"vm.tz\\\" format=\\\"vm.startTimeFormat\\\"></timestamp>\\n  <span ng-if=\\\"vm.end\\\">\\n    <span>&#8211;</span>\\n    <span ng-if=\\\"!vm.isSameDate\\\" class=\\\"bold\\\"><timestamp date=\\\"vm.end\\\" timezone=\\\"vm.tz\\\" format=\\\"vm.dateFormat\\\"></timestamp></span>\\n    <timestamp date=\\\"vm.end\\\" timezone=\\\"vm.tz\\\" format=\\\"vm.endTimeFormat\\\"></timestamp>\\n  </span>\\n</div>\\n\"\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\n\t// load the styles\n\tvar content = __webpack_require__(93);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(26)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./timestampsRange.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./timestampsRange.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(25)();\n\t// imports\n\n\n\t// module\n\texports.push([module.id, \".timestamps-range .bold{font-weight:700}\", \"\"]);\n\n\t// exports\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** dd-ui.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 406b28fa8ef9c27933f3\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 25\n ** module chunks = 0 1\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 26\n ** module chunks = 0 1\n **/","import * as angular from 'angular';\nimport directives from './directives/directives.module';\nimport datePickerModule from './dateRangePicker/dateRangePicker.module';\nimport tooltipModule from './tooltip/tooltip.module';\nimport toggleButtonsModule from './toggleButtons/toggleButtons.module';\nimport modalModule from './modal/modal.module';\nimport carouselModule from './carousel/carousel.module';\nimport timestampModule from './timestamp/timestamp.module';\nimport timestampsRangeModule from './timestampsRange/timestampsRange.module';\n\nconst module: ng.IModule = angular.module('dd-ui', [\n  //datePickerModule,\n  tooltipModule,\n  toggleButtonsModule,\n  modalModule,\n  carouselModule,\n  timestampModule,\n  timestampsRangeModule,\n  directives\n]);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.ts\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_30__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 30\n ** module chunks = 1\n **/","import './directives.less';\nimport { InputLimit } from './input/limit';\nimport checkbox from './checkbox/checkbox.directive';\n\nconst module: ng.IModule = angular.module('directives', []);\n\nmodule.directive('textLimit', InputLimit.instance());\nmodule.directive('checkbox', checkbox);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/directives.module.ts\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./directives.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./directives.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./directives.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/directives.less\n ** module id = 32\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".text-limit-wrapper{position:relative}.limit-indicator{position:absolute;right:0;bottom:3px;color:#71bf44}textarea+.limit-indicator{bottom:10px;right:15px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/less-loader!./src/directives/directives.less\n ** module id = 33\n ** module chunks = 1\n **/","interface IInputLimitScope extends ng.IScope {\n    textLimit: number;\n    ngModel: string;\n}\n\ninterface IInputLimitAttrs extends ng.IAttributes {\n    textLimit: number;\n}\n\nexport class InputLimit {\n    public restrict: string = 'A';\n    public scope: any = {\n        ngModel: '<'\n    };\n\n    static instance(): ng.IDirectiveFactory {\n        let directive: ng.IDirectiveFactory = ($compile: ng.ICompileService, $timeout: ng.ITimeoutService) => new InputLimit($compile, $timeout);\n        directive.$inject = ['$compile', '$timeout'];\n        return directive;\n    }\n    // @ngInject\n    constructor(private $compile: ng.ICompileService, private $timeout: ng.ITimeoutService) { }\n\n    public link: ng.IDirectiveLinkFn = (scope: IInputLimitScope, element: ng.IAugmentedJQuery, attrs: IInputLimitAttrs): void => {\n        const indicator: ng.IAugmentedJQuery = this.$compile(`<span class='limit-indicator' ng-bind=\"textLimit\"></span>`)(scope);\n        const self: InputLimit = this;\n\n        scope.textLimit = attrs.textLimit;\n        element.parent('div').addClass('dd__limit');\n\n        element.after(indicator);\n\n        self.countText(scope, element, attrs.textLimit);\n\n        element.bind('keyup cut change paste', function(event: JQueryKeyEventObject): void {\n            setTimeout(() => {\n                self.countText(scope, element, attrs.textLimit);\n            });\n        });\n\n    }\n\n    private countText(scope: IInputLimitScope, element: ng.IAugmentedJQuery, textLimit: number): void {\n        // using timeout instead scope.digest. SOmethimes we need to update scope in js events. But somethimes digest already in progress. \n        this.$timeout(() => {\n            let value: number;\n            let modelText: string = scope.ngModel || element.val();\n\n            if (!modelText) {\n                value = 0;\n            } else {\n                value = modelText.length;\n            }\n\n            element.attr('maxlength', textLimit);\n\n            scope.textLimit = textLimit - value;\n        }, 0);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/input/limit.ts\n **/","export default () => {\n\n    return {\n        restrict: 'E',\n        require: 'ngModel',\n        replace: true,\n        transclude: true,\n        template: require('./checkbox.partial.html'),\n        scope: {\n            ngModel: '='\n        },\n        link: (scope: any, element: any, attrs: any, model: any) => {\n\n            model.$formatters.unshift(value => {\n                scope.isChecked = value === true;\n                return value;\n            });\n\n            scope.toggle = () => {\n                scope.isChecked = !scope.isChecked;\n                model.$setViewValue(scope.isChecked);\n            };\n\n        }\n    };\n\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/directives/checkbox/checkbox.directive.ts\n **/","module.exports = \"<div class=\\\"dd__checkbox-wrapper\\\">\\n\\t<div class=\\\"dd__checkbox\\\" ng-class=\\\"{'checked': isChecked}\\\" ng-click=\\\"toggle()\\\">\\n\\t\\t<div class=\\\"checkbox__body\\\"></div>\\n\\t\\t<div class=\\\"checkbox__label\\\" ng-transclude></div>\\n\\t</div>\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/directives/checkbox/checkbox.partial.html\n ** module id = 36\n ** module chunks = 1\n **/","import * as angular from 'angular';\n\nimport 'angular-ui-bootstrap/src/popover/index-nocss';\nimport 'angular-ui-bootstrap/src/tooltip/tooltip.css';\nimport './tooltip.less';\n\nimport run from './tooltip.run';\nimport config from './tooltip.config';\n\nconst module: ng.IModule = angular.module('ep.tooltip', [\n  'ngSanitize',\n  'ui.bootstrap.popover'\n]);\n\nmodule.run(run);\n\nmodule.config(config);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tooltip/tooltip.module.ts\n **/","require('../tooltip/index-nocss.js');\nrequire('../../template/popover/popover.html.js');\nrequire('../../template/popover/popover-html.html.js');\nrequire('../../template/popover/popover-template.html.js');\nrequire('./popover');\n\nvar MODULE_NAME = 'ui.bootstrap.module.popover';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.popover', 'uib/template/popover/popover.html', 'uib/template/popover/popover-html.html', 'uib/template/popover/popover-template.html']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/popover/index-nocss.js\n ** module id = 38\n ** module chunks = 1\n **/","require('../position/index-nocss.js');\nrequire('../stackedMap');\nrequire('../../template/tooltip/tooltip-popup.html.js');\nrequire('../../template/tooltip/tooltip-html-popup.html.js');\nrequire('../../template/tooltip/tooltip-template-popup.html.js');\nrequire('./tooltip');\n\nvar MODULE_NAME = 'ui.bootstrap.module.tooltip';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.tooltip', 'uib/template/tooltip/tooltip-popup.html', 'uib/template/tooltip/tooltip-html-popup.html', 'uib/template/tooltip/tooltip-template-popup.html']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/tooltip/index-nocss.js\n ** module id = 39\n ** module chunks = 1\n **/","require('./position');\n\nvar MODULE_NAME = 'ui.bootstrap.module.position';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.position']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/position/index-nocss.js\n ** module id = 40\n ** module chunks = 1\n **/","angular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods for working with the DOM.\n * It is meant to be used where we need to absolute-position elements in\n * relation to another element (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$uibPosition', ['$document', '$window', function($document, $window) {\n    /**\n     * Used by scrollbarWidth() function to cache scrollbar's width.\n     * Do not access this variable directly, use scrollbarWidth() instead.\n     */\n    var SCROLLBAR_WIDTH;\n    /**\n     * scrollbar on body and html element in IE and Edge overlay\n     * content and should be considered 0 width.\n     */\n    var BODY_SCROLLBAR_WIDTH;\n    var OVERFLOW_REGEX = {\n      normal: /(auto|scroll)/,\n      hidden: /(auto|scroll|hidden)/\n    };\n    var PLACEMENT_REGEX = {\n      auto: /\\s?auto?\\s?/i,\n      primary: /^(top|bottom|left|right)$/,\n      secondary: /^(top|bottom|left|right|center)$/,\n      vertical: /^(top|bottom)$/\n    };\n    var BODY_REGEX = /(HTML|BODY)/;\n\n    return {\n\n      /**\n       * Provides a raw DOM element from a jQuery/jQLite element.\n       *\n       * @param {element} elem - The element to convert.\n       *\n       * @returns {element} A HTML element.\n       */\n      getRawNode: function(elem) {\n        return elem.nodeName ? elem : elem[0] || elem;\n      },\n\n      /**\n       * Provides a parsed number for a style property.  Strips\n       * units and casts invalid numbers to 0.\n       *\n       * @param {string} value - The style value to parse.\n       *\n       * @returns {number} A valid number.\n       */\n      parseStyle: function(value) {\n        value = parseFloat(value);\n        return isFinite(value) ? value : 0;\n      },\n\n      /**\n       * Provides the closest positioned ancestor.\n       *\n       * @param {element} element - The element to get the offest parent for.\n       *\n       * @returns {element} The closest positioned ancestor.\n       */\n      offsetParent: function(elem) {\n        elem = this.getRawNode(elem);\n\n        var offsetParent = elem.offsetParent || $document[0].documentElement;\n\n        function isStaticPositioned(el) {\n          return ($window.getComputedStyle(el).position || 'static') === 'static';\n        }\n\n        while (offsetParent && offsetParent !== $document[0].documentElement && isStaticPositioned(offsetParent)) {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || $document[0].documentElement;\n      },\n\n      /**\n       * Provides the scrollbar width, concept from TWBS measureScrollbar()\n       * function in https://github.com/twbs/bootstrap/blob/master/js/modal.js\n       * In IE and Edge, scollbar on body and html element overlay and should\n       * return a width of 0.\n       *\n       * @returns {number} The width of the browser scollbar.\n       */\n      scrollbarWidth: function(isBody) {\n        if (isBody) {\n          if (angular.isUndefined(BODY_SCROLLBAR_WIDTH)) {\n            var bodyElem = $document.find('body');\n            bodyElem.addClass('uib-position-body-scrollbar-measure');\n            BODY_SCROLLBAR_WIDTH = $window.innerWidth - bodyElem[0].clientWidth;\n            BODY_SCROLLBAR_WIDTH = isFinite(BODY_SCROLLBAR_WIDTH) ? BODY_SCROLLBAR_WIDTH : 0;\n            bodyElem.removeClass('uib-position-body-scrollbar-measure');\n          }\n          return BODY_SCROLLBAR_WIDTH;\n        }\n\n        if (angular.isUndefined(SCROLLBAR_WIDTH)) {\n          var scrollElem = angular.element('<div class=\"uib-position-scrollbar-measure\"></div>');\n          $document.find('body').append(scrollElem);\n          SCROLLBAR_WIDTH = scrollElem[0].offsetWidth - scrollElem[0].clientWidth;\n          SCROLLBAR_WIDTH = isFinite(SCROLLBAR_WIDTH) ? SCROLLBAR_WIDTH : 0;\n          scrollElem.remove();\n        }\n\n        return SCROLLBAR_WIDTH;\n      },\n\n      /**\n       * Provides the padding required on an element to replace the scrollbar.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**scrollbarWidth**: the width of the scrollbar</li>\n       *     <li>**widthOverflow**: whether the the width is overflowing</li>\n       *     <li>**right**: the amount of right padding on the element needed to replace the scrollbar</li>\n       *     <li>**rightOriginal**: the amount of right padding currently on the element</li>\n       *     <li>**heightOverflow**: whether the the height is overflowing</li>\n       *     <li>**bottom**: the amount of bottom padding on the element needed to replace the scrollbar</li>\n       *     <li>**bottomOriginal**: the amount of bottom padding currently on the element</li>\n       *   </ul>\n       */\n      scrollbarPadding: function(elem) {\n        elem = this.getRawNode(elem);\n\n        var elemStyle = $window.getComputedStyle(elem);\n        var paddingRight = this.parseStyle(elemStyle.paddingRight);\n        var paddingBottom = this.parseStyle(elemStyle.paddingBottom);\n        var scrollParent = this.scrollParent(elem, false, true);\n        var scrollbarWidth = this.scrollbarWidth(scrollParent, BODY_REGEX.test(scrollParent.tagName));\n\n        return {\n          scrollbarWidth: scrollbarWidth,\n          widthOverflow: scrollParent.scrollWidth > scrollParent.clientWidth,\n          right: paddingRight + scrollbarWidth,\n          originalRight: paddingRight,\n          heightOverflow: scrollParent.scrollHeight > scrollParent.clientHeight,\n          bottom: paddingBottom + scrollbarWidth,\n          originalBottom: paddingBottom\n         };\n      },\n\n      /**\n       * Checks to see if the element is scrollable.\n       *\n       * @param {element} elem - The element to check.\n       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\n       *   default is false.\n       *\n       * @returns {boolean} Whether the element is scrollable.\n       */\n      isScrollable: function(elem, includeHidden) {\n        elem = this.getRawNode(elem);\n\n        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\n        var elemStyle = $window.getComputedStyle(elem);\n        return overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX);\n      },\n\n      /**\n       * Provides the closest scrollable ancestor.\n       * A port of the jQuery UI scrollParent method:\n       * https://github.com/jquery/jquery-ui/blob/master/ui/scroll-parent.js\n       *\n       * @param {element} elem - The element to find the scroll parent of.\n       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\n       *   default is false.\n       * @param {boolean=} [includeSelf=false] - Should the element being passed be\n       * included in the scrollable llokup.\n       *\n       * @returns {element} A HTML element.\n       */\n      scrollParent: function(elem, includeHidden, includeSelf) {\n        elem = this.getRawNode(elem);\n\n        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\n        var documentEl = $document[0].documentElement;\n        var elemStyle = $window.getComputedStyle(elem);\n        if (includeSelf && overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX)) {\n          return elem;\n        }\n        var excludeStatic = elemStyle.position === 'absolute';\n        var scrollParent = elem.parentElement || documentEl;\n\n        if (scrollParent === documentEl || elemStyle.position === 'fixed') {\n          return documentEl;\n        }\n\n        while (scrollParent.parentElement && scrollParent !== documentEl) {\n          var spStyle = $window.getComputedStyle(scrollParent);\n          if (excludeStatic && spStyle.position !== 'static') {\n            excludeStatic = false;\n          }\n\n          if (!excludeStatic && overflowRegex.test(spStyle.overflow + spStyle.overflowY + spStyle.overflowX)) {\n            break;\n          }\n          scrollParent = scrollParent.parentElement;\n        }\n\n        return scrollParent;\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/ - distance to closest positioned\n       * ancestor.  Does not account for margins by default like jQuery position.\n       *\n       * @param {element} elem - The element to caclulate the position on.\n       * @param {boolean=} [includeMargins=false] - Should margins be accounted\n       * for, default is false.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**width**: the width of the element</li>\n       *     <li>**height**: the height of the element</li>\n       *     <li>**top**: distance to top edge of offset parent</li>\n       *     <li>**left**: distance to left edge of offset parent</li>\n       *   </ul>\n       */\n      position: function(elem, includeMagins) {\n        elem = this.getRawNode(elem);\n\n        var elemOffset = this.offset(elem);\n        if (includeMagins) {\n          var elemStyle = $window.getComputedStyle(elem);\n          elemOffset.top -= this.parseStyle(elemStyle.marginTop);\n          elemOffset.left -= this.parseStyle(elemStyle.marginLeft);\n        }\n        var parent = this.offsetParent(elem);\n        var parentOffset = {top: 0, left: 0};\n\n        if (parent !== $document[0].documentElement) {\n          parentOffset = this.offset(parent);\n          parentOffset.top += parent.clientTop - parent.scrollTop;\n          parentOffset.left += parent.clientLeft - parent.scrollLeft;\n        }\n\n        return {\n          width: Math.round(angular.isNumber(elemOffset.width) ? elemOffset.width : elem.offsetWidth),\n          height: Math.round(angular.isNumber(elemOffset.height) ? elemOffset.height : elem.offsetHeight),\n          top: Math.round(elemOffset.top - parentOffset.top),\n          left: Math.round(elemOffset.left - parentOffset.left)\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/ - distance to viewport.  Does\n       * not account for borders, margins, or padding on the body\n       * element.\n       *\n       * @param {element} elem - The element to calculate the offset on.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**width**: the width of the element</li>\n       *     <li>**height**: the height of the element</li>\n       *     <li>**top**: distance to top edge of viewport</li>\n       *     <li>**right**: distance to bottom edge of viewport</li>\n       *   </ul>\n       */\n      offset: function(elem) {\n        elem = this.getRawNode(elem);\n\n        var elemBCR = elem.getBoundingClientRect();\n        return {\n          width: Math.round(angular.isNumber(elemBCR.width) ? elemBCR.width : elem.offsetWidth),\n          height: Math.round(angular.isNumber(elemBCR.height) ? elemBCR.height : elem.offsetHeight),\n          top: Math.round(elemBCR.top + ($window.pageYOffset || $document[0].documentElement.scrollTop)),\n          left: Math.round(elemBCR.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft))\n        };\n      },\n\n      /**\n       * Provides offset distance to the closest scrollable ancestor\n       * or viewport.  Accounts for border and scrollbar width.\n       *\n       * Right and bottom dimensions represent the distance to the\n       * respective edge of the viewport element.  If the element\n       * edge extends beyond the viewport, a negative value will be\n       * reported.\n       *\n       * @param {element} elem - The element to get the viewport offset for.\n       * @param {boolean=} [useDocument=false] - Should the viewport be the document element instead\n       * of the first scrollable element, default is false.\n       * @param {boolean=} [includePadding=true] - Should the padding on the offset parent element\n       * be accounted for, default is true.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**top**: distance to the top content edge of viewport element</li>\n       *     <li>**bottom**: distance to the bottom content edge of viewport element</li>\n       *     <li>**left**: distance to the left content edge of viewport element</li>\n       *     <li>**right**: distance to the right content edge of viewport element</li>\n       *   </ul>\n       */\n      viewportOffset: function(elem, useDocument, includePadding) {\n        elem = this.getRawNode(elem);\n        includePadding = includePadding !== false ? true : false;\n\n        var elemBCR = elem.getBoundingClientRect();\n        var offsetBCR = {top: 0, left: 0, bottom: 0, right: 0};\n\n        var offsetParent = useDocument ? $document[0].documentElement : this.scrollParent(elem);\n        var offsetParentBCR = offsetParent.getBoundingClientRect();\n\n        offsetBCR.top = offsetParentBCR.top + offsetParent.clientTop;\n        offsetBCR.left = offsetParentBCR.left + offsetParent.clientLeft;\n        if (offsetParent === $document[0].documentElement) {\n          offsetBCR.top += $window.pageYOffset;\n          offsetBCR.left += $window.pageXOffset;\n        }\n        offsetBCR.bottom = offsetBCR.top + offsetParent.clientHeight;\n        offsetBCR.right = offsetBCR.left + offsetParent.clientWidth;\n\n        if (includePadding) {\n          var offsetParentStyle = $window.getComputedStyle(offsetParent);\n          offsetBCR.top += this.parseStyle(offsetParentStyle.paddingTop);\n          offsetBCR.bottom -= this.parseStyle(offsetParentStyle.paddingBottom);\n          offsetBCR.left += this.parseStyle(offsetParentStyle.paddingLeft);\n          offsetBCR.right -= this.parseStyle(offsetParentStyle.paddingRight);\n        }\n\n        return {\n          top: Math.round(elemBCR.top - offsetBCR.top),\n          bottom: Math.round(offsetBCR.bottom - elemBCR.bottom),\n          left: Math.round(elemBCR.left - offsetBCR.left),\n          right: Math.round(offsetBCR.right - elemBCR.right)\n        };\n      },\n\n      /**\n       * Provides an array of placement values parsed from a placement string.\n       * Along with the 'auto' indicator, supported placement strings are:\n       *   <ul>\n       *     <li>top: element on top, horizontally centered on host element.</li>\n       *     <li>top-left: element on top, left edge aligned with host element left edge.</li>\n       *     <li>top-right: element on top, lerightft edge aligned with host element right edge.</li>\n       *     <li>bottom: element on bottom, horizontally centered on host element.</li>\n       *     <li>bottom-left: element on bottom, left edge aligned with host element left edge.</li>\n       *     <li>bottom-right: element on bottom, right edge aligned with host element right edge.</li>\n       *     <li>left: element on left, vertically centered on host element.</li>\n       *     <li>left-top: element on left, top edge aligned with host element top edge.</li>\n       *     <li>left-bottom: element on left, bottom edge aligned with host element bottom edge.</li>\n       *     <li>right: element on right, vertically centered on host element.</li>\n       *     <li>right-top: element on right, top edge aligned with host element top edge.</li>\n       *     <li>right-bottom: element on right, bottom edge aligned with host element bottom edge.</li>\n       *   </ul>\n       * A placement string with an 'auto' indicator is expected to be\n       * space separated from the placement, i.e: 'auto bottom-left'  If\n       * the primary and secondary placement values do not match 'top,\n       * bottom, left, right' then 'top' will be the primary placement and\n       * 'center' will be the secondary placement.  If 'auto' is passed, true\n       * will be returned as the 3rd value of the array.\n       *\n       * @param {string} placement - The placement string to parse.\n       *\n       * @returns {array} An array with the following values\n       * <ul>\n       *   <li>**[0]**: The primary placement.</li>\n       *   <li>**[1]**: The secondary placement.</li>\n       *   <li>**[2]**: If auto is passed: true, else undefined.</li>\n       * </ul>\n       */\n      parsePlacement: function(placement) {\n        var autoPlace = PLACEMENT_REGEX.auto.test(placement);\n        if (autoPlace) {\n          placement = placement.replace(PLACEMENT_REGEX.auto, '');\n        }\n\n        placement = placement.split('-');\n\n        placement[0] = placement[0] || 'top';\n        if (!PLACEMENT_REGEX.primary.test(placement[0])) {\n          placement[0] = 'top';\n        }\n\n        placement[1] = placement[1] || 'center';\n        if (!PLACEMENT_REGEX.secondary.test(placement[1])) {\n          placement[1] = 'center';\n        }\n\n        if (autoPlace) {\n          placement[2] = true;\n        } else {\n          placement[2] = false;\n        }\n\n        return placement;\n      },\n\n      /**\n       * Provides coordinates for an element to be positioned relative to\n       * another element.  Passing 'auto' as part of the placement parameter\n       * will enable smart placement - where the element fits. i.e:\n       * 'auto left-top' will check to see if there is enough space to the left\n       * of the hostElem to fit the targetElem, if not place right (same for secondary\n       * top placement).  Available space is calculated using the viewportOffset\n       * function.\n       *\n       * @param {element} hostElem - The element to position against.\n       * @param {element} targetElem - The element to position.\n       * @param {string=} [placement=top] - The placement for the targetElem,\n       *   default is 'top'. 'center' is assumed as secondary placement for\n       *   'top', 'left', 'right', and 'bottom' placements.  Available placements are:\n       *   <ul>\n       *     <li>top</li>\n       *     <li>top-right</li>\n       *     <li>top-left</li>\n       *     <li>bottom</li>\n       *     <li>bottom-left</li>\n       *     <li>bottom-right</li>\n       *     <li>left</li>\n       *     <li>left-top</li>\n       *     <li>left-bottom</li>\n       *     <li>right</li>\n       *     <li>right-top</li>\n       *     <li>right-bottom</li>\n       *   </ul>\n       * @param {boolean=} [appendToBody=false] - Should the top and left values returned\n       *   be calculated from the body element, default is false.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**top**: Value for targetElem top.</li>\n       *     <li>**left**: Value for targetElem left.</li>\n       *     <li>**placement**: The resolved placement.</li>\n       *   </ul>\n       */\n      positionElements: function(hostElem, targetElem, placement, appendToBody) {\n        hostElem = this.getRawNode(hostElem);\n        targetElem = this.getRawNode(targetElem);\n\n        // need to read from prop to support tests.\n        var targetWidth = angular.isDefined(targetElem.offsetWidth) ? targetElem.offsetWidth : targetElem.prop('offsetWidth');\n        var targetHeight = angular.isDefined(targetElem.offsetHeight) ? targetElem.offsetHeight : targetElem.prop('offsetHeight');\n\n        placement = this.parsePlacement(placement);\n\n        var hostElemPos = appendToBody ? this.offset(hostElem) : this.position(hostElem);\n        var targetElemPos = {top: 0, left: 0, placement: ''};\n\n        if (placement[2]) {\n          var viewportOffset = this.viewportOffset(hostElem, appendToBody);\n\n          var targetElemStyle = $window.getComputedStyle(targetElem);\n          var adjustedSize = {\n            width: targetWidth + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginLeft) + this.parseStyle(targetElemStyle.marginRight))),\n            height: targetHeight + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginTop) + this.parseStyle(targetElemStyle.marginBottom)))\n          };\n\n          placement[0] = placement[0] === 'top' && adjustedSize.height > viewportOffset.top && adjustedSize.height <= viewportOffset.bottom ? 'bottom' :\n                         placement[0] === 'bottom' && adjustedSize.height > viewportOffset.bottom && adjustedSize.height <= viewportOffset.top ? 'top' :\n                         placement[0] === 'left' && adjustedSize.width > viewportOffset.left && adjustedSize.width <= viewportOffset.right ? 'right' :\n                         placement[0] === 'right' && adjustedSize.width > viewportOffset.right && adjustedSize.width <= viewportOffset.left ? 'left' :\n                         placement[0];\n\n          placement[1] = placement[1] === 'top' && adjustedSize.height - hostElemPos.height > viewportOffset.bottom && adjustedSize.height - hostElemPos.height <= viewportOffset.top ? 'bottom' :\n                         placement[1] === 'bottom' && adjustedSize.height - hostElemPos.height > viewportOffset.top && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom ? 'top' :\n                         placement[1] === 'left' && adjustedSize.width - hostElemPos.width > viewportOffset.right && adjustedSize.width - hostElemPos.width <= viewportOffset.left ? 'right' :\n                         placement[1] === 'right' && adjustedSize.width - hostElemPos.width > viewportOffset.left && adjustedSize.width - hostElemPos.width <= viewportOffset.right ? 'left' :\n                         placement[1];\n\n          if (placement[1] === 'center') {\n            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n              var xOverflow = hostElemPos.width / 2 - targetWidth / 2;\n              if (viewportOffset.left + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.right) {\n                placement[1] = 'left';\n              } else if (viewportOffset.right + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.left) {\n                placement[1] = 'right';\n              }\n            } else {\n              var yOverflow = hostElemPos.height / 2 - adjustedSize.height / 2;\n              if (viewportOffset.top + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom) {\n                placement[1] = 'top';\n              } else if (viewportOffset.bottom + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.top) {\n                placement[1] = 'bottom';\n              }\n            }\n          }\n        }\n\n        switch (placement[0]) {\n          case 'top':\n            targetElemPos.top = hostElemPos.top - targetHeight;\n            break;\n          case 'bottom':\n            targetElemPos.top = hostElemPos.top + hostElemPos.height;\n            break;\n          case 'left':\n            targetElemPos.left = hostElemPos.left - targetWidth;\n            break;\n          case 'right':\n            targetElemPos.left = hostElemPos.left + hostElemPos.width;\n            break;\n        }\n\n        switch (placement[1]) {\n          case 'top':\n            targetElemPos.top = hostElemPos.top;\n            break;\n          case 'bottom':\n            targetElemPos.top = hostElemPos.top + hostElemPos.height - targetHeight;\n            break;\n          case 'left':\n            targetElemPos.left = hostElemPos.left;\n            break;\n          case 'right':\n            targetElemPos.left = hostElemPos.left + hostElemPos.width - targetWidth;\n            break;\n          case 'center':\n            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n              targetElemPos.left = hostElemPos.left + hostElemPos.width / 2 - targetWidth / 2;\n            } else {\n              targetElemPos.top = hostElemPos.top + hostElemPos.height / 2 - targetHeight / 2;\n            }\n            break;\n        }\n\n        targetElemPos.top = Math.round(targetElemPos.top);\n        targetElemPos.left = Math.round(targetElemPos.left);\n        targetElemPos.placement = placement[1] === 'center' ? placement[0] : placement[0] + '-' + placement[1];\n\n        return targetElemPos;\n      },\n\n      /**\n       * Provides a way to adjust the top positioning after first\n       * render to correctly align element to top after content\n       * rendering causes resized element height\n       *\n       * @param {array} placementClasses - The array of strings of classes\n       * element should have.\n       * @param {object} containerPosition - The object with container\n       * position information\n       * @param {number} initialHeight - The initial height for the elem.\n       * @param {number} currentHeight - The current height for the elem.\n       */\n      adjustTop: function(placementClasses, containerPosition, initialHeight, currentHeight) {\n        if (placementClasses.indexOf('top') !== -1 && initialHeight !== currentHeight) {\n          return {\n            top: containerPosition.top - currentHeight + 'px'\n          };\n        }\n      },\n\n      /**\n       * Provides a way for positioning tooltip & dropdown\n       * arrows when using placement options beyond the standard\n       * left, right, top, or bottom.\n       *\n       * @param {element} elem - The tooltip/dropdown element.\n       * @param {string} placement - The placement for the elem.\n       */\n      positionArrow: function(elem, placement) {\n        elem = this.getRawNode(elem);\n\n        var innerElem = elem.querySelector('.tooltip-inner, .popover-inner');\n        if (!innerElem) {\n          return;\n        }\n\n        var isTooltip = angular.element(innerElem).hasClass('tooltip-inner');\n\n        var arrowElem = isTooltip ? elem.querySelector('.tooltip-arrow') : elem.querySelector('.arrow');\n        if (!arrowElem) {\n          return;\n        }\n\n        var arrowCss = {\n          top: '',\n          bottom: '',\n          left: '',\n          right: ''\n        };\n\n        placement = this.parsePlacement(placement);\n        if (placement[1] === 'center') {\n          // no adjustment necessary - just reset styles\n          angular.element(arrowElem).css(arrowCss);\n          return;\n        }\n\n        var borderProp = 'border-' + placement[0] + '-width';\n        var borderWidth = $window.getComputedStyle(arrowElem)[borderProp];\n\n        var borderRadiusProp = 'border-';\n        if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n          borderRadiusProp += placement[0] + '-' + placement[1];\n        } else {\n          borderRadiusProp += placement[1] + '-' + placement[0];\n        }\n        borderRadiusProp += '-radius';\n        var borderRadius = $window.getComputedStyle(isTooltip ? innerElem : elem)[borderRadiusProp];\n\n        switch (placement[0]) {\n          case 'top':\n            arrowCss.bottom = isTooltip ? '0' : '-' + borderWidth;\n            break;\n          case 'bottom':\n            arrowCss.top = isTooltip ? '0' : '-' + borderWidth;\n            break;\n          case 'left':\n            arrowCss.right = isTooltip ? '0' : '-' + borderWidth;\n            break;\n          case 'right':\n            arrowCss.left = isTooltip ? '0' : '-' + borderWidth;\n            break;\n        }\n\n        arrowCss[placement[1]] = borderRadius;\n\n        angular.element(arrowElem).css(arrowCss);\n      }\n    };\n  }]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/position/position.js\n ** module id = 41\n ** module chunks = 1\n **/","require('./stackedMap');\n\nvar MODULE_NAME = 'ui.bootstrap.module.stackedMap';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.stackedMap']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/stackedMap/index.js\n ** module id = 42\n ** module chunks = 1\n **/","angular.module('ui.bootstrap.stackedMap', [])\n/**\n * A helper, internal data structure that acts as a map but also allows getting / removing\n * elements in the LIFO order\n */\n  .factory('$$stackedMap', function() {\n    return {\n      createNew: function() {\n        var stack = [];\n\n        return {\n          add: function(key, value) {\n            stack.push({\n              key: key,\n              value: value\n            });\n          },\n          get: function(key) {\n            for (var i = 0; i < stack.length; i++) {\n              if (key === stack[i].key) {\n                return stack[i];\n              }\n            }\n          },\n          keys: function() {\n            var keys = [];\n            for (var i = 0; i < stack.length; i++) {\n              keys.push(stack[i].key);\n            }\n            return keys;\n          },\n          top: function() {\n            return stack[stack.length - 1];\n          },\n          remove: function(key) {\n            var idx = -1;\n            for (var i = 0; i < stack.length; i++) {\n              if (key === stack[i].key) {\n                idx = i;\n                break;\n              }\n            }\n            return stack.splice(idx, 1)[0];\n          },\n          removeTop: function() {\n            return stack.pop();\n          },\n          length: function() {\n            return stack.length;\n          }\n        };\n      }\n    };\n  });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/stackedMap/stackedMap.js\n ** module id = 43\n ** module chunks = 1\n **/","angular.module(\"uib/template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tooltip/tooltip-popup.html\",\n    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"<div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/tooltip/tooltip-popup.html.js\n ** module id = 44\n ** module chunks = 1\n **/","angular.module(\"uib/template/tooltip/tooltip-html-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tooltip/tooltip-html-popup.html\",\n    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"<div class=\\\"tooltip-inner\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/tooltip/tooltip-html-popup.html.js\n ** module id = 45\n ** module chunks = 1\n **/","angular.module(\"uib/template/tooltip/tooltip-template-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tooltip/tooltip-template-popup.html\",\n    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"<div class=\\\"tooltip-inner\\\"\\n\" +\n    \"  uib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n    \"  tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/tooltip/tooltip-template-popup.html.js\n ** module id = 46\n ** module chunks = 1\n **/","/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap'])\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider('$uibTooltip', function() {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    placementClassPrefix: '',\n    animation: true,\n    popupDelay: 0,\n    popupCloseDelay: 0,\n    useContentExp: false\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'outsideClick': 'outsideClick',\n    'focus': 'blur',\n    'none': ''\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n\n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function(value) {\n\t\tangular.extend(globalOptions, value);\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( { 'openTrigger': 'closeTrigger' } );\n   */\n  this.setTriggers = function setTriggers(triggers) {\n    angular.extend(triggerMap, triggers);\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake_case.\n   */\n  function snake_case(name) {\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = ['$window', '$compile', '$timeout', '$document', '$uibPosition', '$interpolate', '$rootScope', '$parse', '$$stackedMap', function($window, $compile, $timeout, $document, $position, $interpolate, $rootScope, $parse, $$stackedMap) {\n    var openedTooltips = $$stackedMap.createNew();\n    $document.on('keyup', keypressListener);\n\n    $rootScope.$on('$destroy', function() {\n      $document.off('keyup', keypressListener);\n    });\n\n    function keypressListener(e) {\n      if (e.which === 27) {\n        var last = openedTooltips.top();\n        if (last) {\n          last.value.close();\n          last = null;\n        }\n      }\n    }\n\n    return function $tooltip(ttType, prefix, defaultTriggerShow, options) {\n      options = angular.extend({}, defaultOptions, globalOptions, options);\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function getTriggers(trigger) {\n        var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n        var hide = show.map(function(trigger) {\n          return triggerMap[trigger] || trigger;\n        });\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case(ttType);\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template =\n        '<div '+ directiveName + '-popup ' +\n          'uib-title=\"' + startSym + 'title' + endSym + '\" ' +\n          (options.useContentExp ?\n            'content-exp=\"contentExp()\" ' :\n            'content=\"' + startSym + 'content' + endSym + '\" ') +\n          'origin-scope=\"origScope\" ' +\n          'class=\"uib-position-measure ' + prefix + '\" ' +\n          'tooltip-animation-class=\"fade\"' +\n          'uib-tooltip-classes ' +\n          'ng-class=\"{ in: isOpen }\" ' +\n          '>' +\n        '</div>';\n\n      return {\n        compile: function(tElem, tAttrs) {\n          var tooltipLinker = $compile(template);\n\n          return function link(scope, element, attrs, tooltipCtrl) {\n            var tooltip;\n            var tooltipLinkedScope;\n            var transitionTimeout;\n            var showTimeout;\n            var hideTimeout;\n            var positionTimeout;\n            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n            var triggers = getTriggers(undefined);\n            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n            var ttScope = scope.$new(true);\n            var repositionScheduled = false;\n            var isOpenParse = angular.isDefined(attrs[prefix + 'IsOpen']) ? $parse(attrs[prefix + 'IsOpen']) : false;\n            var contentParse = options.useContentExp ? $parse(attrs[ttType]) : false;\n            var observers = [];\n            var lastPlacement;\n\n            var positionTooltip = function() {\n              // check if tooltip exists and is not empty\n              if (!tooltip || !tooltip.html()) { return; }\n\n              if (!positionTimeout) {\n                positionTimeout = $timeout(function() {\n                  var ttPosition = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);\n                  var initialHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');\n                  var elementPos = appendToBody ? $position.offset(element) : $position.position(element);\n                  tooltip.css({ top: ttPosition.top + 'px', left: ttPosition.left + 'px' });\n                  var placementClasses = ttPosition.placement.split('-');\n\n                  if (!tooltip.hasClass(placementClasses[0])) {\n                    tooltip.removeClass(lastPlacement.split('-')[0]);\n                    tooltip.addClass(placementClasses[0]);\n                  }\n\n                  if (!tooltip.hasClass(options.placementClassPrefix + ttPosition.placement)) {\n                    tooltip.removeClass(options.placementClassPrefix + lastPlacement);\n                    tooltip.addClass(options.placementClassPrefix + ttPosition.placement);\n                  }\n\n                  $timeout(function() {\n                    var currentHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');\n                    var adjustment = $position.adjustTop(placementClasses, elementPos, initialHeight, currentHeight);\n                    if (adjustment) {\n                      tooltip.css(adjustment);\n                    }\n                  }, 0, false);\n\n                  // first time through tt element will have the\n                  // uib-position-measure class or if the placement\n                  // has changed we need to position the arrow.\n                  if (tooltip.hasClass('uib-position-measure')) {\n                    $position.positionArrow(tooltip, ttPosition.placement);\n                    tooltip.removeClass('uib-position-measure');\n                  } else if (lastPlacement !== ttPosition.placement) {\n                    $position.positionArrow(tooltip, ttPosition.placement);\n                  }\n                  lastPlacement = ttPosition.placement;\n\n                  positionTimeout = null;\n                }, 0, false);\n              }\n            };\n\n            // Set up the correct scope to allow transclusion later\n            ttScope.origScope = scope;\n\n            // By default, the tooltip is not open.\n            // TODO add ability to start tooltip opened\n            ttScope.isOpen = false;\n\n            function toggleTooltipBind() {\n              if (!ttScope.isOpen) {\n                showTooltipBind();\n              } else {\n                hideTooltipBind();\n              }\n            }\n\n            // Show the tooltip with delay if specified, otherwise show it immediately\n            function showTooltipBind() {\n              if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n                return;\n              }\n\n              cancelHide();\n              prepareTooltip();\n\n              if (ttScope.popupDelay) {\n                // Do nothing if the tooltip was already scheduled to pop-up.\n                // This happens if show is triggered multiple times before any hide is triggered.\n                if (!showTimeout) {\n                  showTimeout = $timeout(show, ttScope.popupDelay, false);\n                }\n              } else {\n                show();\n              }\n            }\n\n            function hideTooltipBind() {\n              cancelShow();\n\n              if (ttScope.popupCloseDelay) {\n                if (!hideTimeout) {\n                  hideTimeout = $timeout(hide, ttScope.popupCloseDelay, false);\n                }\n              } else {\n                hide();\n              }\n            }\n\n            // Show the tooltip popup element.\n            function show() {\n              cancelShow();\n              cancelHide();\n\n              // Don't show empty tooltips.\n              if (!ttScope.content) {\n                return angular.noop;\n              }\n\n              createTooltip();\n\n              // And show the tooltip.\n              ttScope.$evalAsync(function() {\n                ttScope.isOpen = true;\n                assignIsOpen(true);\n                positionTooltip();\n              });\n            }\n\n            function cancelShow() {\n              if (showTimeout) {\n                $timeout.cancel(showTimeout);\n                showTimeout = null;\n              }\n\n              if (positionTimeout) {\n                $timeout.cancel(positionTimeout);\n                positionTimeout = null;\n              }\n            }\n\n            // Hide the tooltip popup element.\n            function hide() {\n              if (!ttScope) {\n                return;\n              }\n\n              // First things first: we don't show it anymore.\n              ttScope.$evalAsync(function() {\n                if (ttScope) {\n                  ttScope.isOpen = false;\n                  assignIsOpen(false);\n                  // And now we remove it from the DOM. However, if we have animation, we\n                  // need to wait for it to expire beforehand.\n                  // FIXME: this is a placeholder for a port of the transitions library.\n                  // The fade transition in TWBS is 150ms.\n                  if (ttScope.animation) {\n                    if (!transitionTimeout) {\n                      transitionTimeout = $timeout(removeTooltip, 150, false);\n                    }\n                  } else {\n                    removeTooltip();\n                  }\n                }\n              });\n            }\n\n            function cancelHide() {\n              if (hideTimeout) {\n                $timeout.cancel(hideTimeout);\n                hideTimeout = null;\n              }\n\n              if (transitionTimeout) {\n                $timeout.cancel(transitionTimeout);\n                transitionTimeout = null;\n              }\n            }\n\n            function createTooltip() {\n              // There can only be one tooltip element per directive shown at once.\n              if (tooltip) {\n                return;\n              }\n\n              tooltipLinkedScope = ttScope.$new();\n              tooltip = tooltipLinker(tooltipLinkedScope, function(tooltip) {\n                if (appendToBody) {\n                  $document.find('body').append(tooltip);\n                } else {\n                  element.after(tooltip);\n                }\n              });\n\n              openedTooltips.add(ttScope, {\n                close: hide\n              });\n\n              prepObservers();\n            }\n\n            function removeTooltip() {\n              cancelShow();\n              cancelHide();\n              unregisterObservers();\n\n              if (tooltip) {\n                tooltip.remove();\n                tooltip = null;\n              }\n\n              openedTooltips.remove(ttScope);\n              \n              if (tooltipLinkedScope) {\n                tooltipLinkedScope.$destroy();\n                tooltipLinkedScope = null;\n              }\n            }\n\n            /**\n             * Set the initial scope values. Once\n             * the tooltip is created, the observers\n             * will be added to keep things in sync.\n             */\n            function prepareTooltip() {\n              ttScope.title = attrs[prefix + 'Title'];\n              if (contentParse) {\n                ttScope.content = contentParse(scope);\n              } else {\n                ttScope.content = attrs[ttType];\n              }\n\n              ttScope.popupClass = attrs[prefix + 'Class'];\n              ttScope.placement = angular.isDefined(attrs[prefix + 'Placement']) ? attrs[prefix + 'Placement'] : options.placement;\n              var placement = $position.parsePlacement(ttScope.placement);\n              lastPlacement = placement[1] ? placement[0] + '-' + placement[1] : placement[0];\n\n              var delay = parseInt(attrs[prefix + 'PopupDelay'], 10);\n              var closeDelay = parseInt(attrs[prefix + 'PopupCloseDelay'], 10);\n              ttScope.popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n              ttScope.popupCloseDelay = !isNaN(closeDelay) ? closeDelay : options.popupCloseDelay;\n            }\n\n            function assignIsOpen(isOpen) {\n              if (isOpenParse && angular.isFunction(isOpenParse.assign)) {\n                isOpenParse.assign(scope, isOpen);\n              }\n            }\n\n            ttScope.contentExp = function() {\n              return ttScope.content;\n            };\n\n            /**\n             * Observe the relevant attributes.\n             */\n            attrs.$observe('disabled', function(val) {\n              if (val) {\n                cancelShow();\n              }\n\n              if (val && ttScope.isOpen) {\n                hide();\n              }\n            });\n\n            if (isOpenParse) {\n              scope.$watch(isOpenParse, function(val) {\n                if (ttScope && !val === ttScope.isOpen) {\n                  toggleTooltipBind();\n                }\n              });\n            }\n\n            function prepObservers() {\n              observers.length = 0;\n\n              if (contentParse) {\n                observers.push(\n                  scope.$watch(contentParse, function(val) {\n                    ttScope.content = val;\n                    if (!val && ttScope.isOpen) {\n                      hide();\n                    }\n                  })\n                );\n\n                observers.push(\n                  tooltipLinkedScope.$watch(function() {\n                    if (!repositionScheduled) {\n                      repositionScheduled = true;\n                      tooltipLinkedScope.$$postDigest(function() {\n                        repositionScheduled = false;\n                        if (ttScope && ttScope.isOpen) {\n                          positionTooltip();\n                        }\n                      });\n                    }\n                  })\n                );\n              } else {\n                observers.push(\n                  attrs.$observe(ttType, function(val) {\n                    ttScope.content = val;\n                    if (!val && ttScope.isOpen) {\n                      hide();\n                    } else {\n                      positionTooltip();\n                    }\n                  })\n                );\n              }\n\n              observers.push(\n                attrs.$observe(prefix + 'Title', function(val) {\n                  ttScope.title = val;\n                  if (ttScope.isOpen) {\n                    positionTooltip();\n                  }\n                })\n              );\n\n              observers.push(\n                attrs.$observe(prefix + 'Placement', function(val) {\n                  ttScope.placement = val ? val : options.placement;\n                  if (ttScope.isOpen) {\n                    positionTooltip();\n                  }\n                })\n              );\n            }\n\n            function unregisterObservers() {\n              if (observers.length) {\n                angular.forEach(observers, function(observer) {\n                  observer();\n                });\n                observers.length = 0;\n              }\n            }\n\n            // hide tooltips/popovers for outsideClick trigger\n            function bodyHideTooltipBind(e) {\n              if (!ttScope || !ttScope.isOpen || !tooltip) {\n                return;\n              }\n              // make sure the tooltip/popover link or tool tooltip/popover itself were not clicked\n              if (!element[0].contains(e.target) && !tooltip[0].contains(e.target)) {\n                hideTooltipBind();\n              }\n            }\n\n            var unregisterTriggers = function() {\n              triggers.show.forEach(function(trigger) {\n                if (trigger === 'outsideClick') {\n                  element.off('click', toggleTooltipBind);\n                } else {\n                  element.off(trigger, showTooltipBind);\n                  element.off(trigger, toggleTooltipBind);\n                }\n              });\n              triggers.hide.forEach(function(trigger) {\n                if (trigger === 'outsideClick') {\n                  $document.off('click', bodyHideTooltipBind);\n                } else {\n                  element.off(trigger, hideTooltipBind);\n                }\n              });\n            };\n\n            function prepTriggers() {\n              var showTriggers = [], hideTriggers = [];\n              var val = scope.$eval(attrs[prefix + 'Trigger']);\n              unregisterTriggers();\n\n              if (angular.isObject(val)) {\n                Object.keys(val).forEach(function(key) {\n                  showTriggers.push(key);\n                  hideTriggers.push(val[key]);\n                });\n                triggers = {\n                  show: showTriggers,\n                  hide: hideTriggers\n                };\n              } else {\n                triggers = getTriggers(val);\n              }\n\n              if (triggers.show !== 'none') {\n                triggers.show.forEach(function(trigger, idx) {\n                  if (trigger === 'outsideClick') {\n                    element.on('click', toggleTooltipBind);\n                    $document.on('click', bodyHideTooltipBind);\n                  } else if (trigger === triggers.hide[idx]) {\n                    element.on(trigger, toggleTooltipBind);\n                  } else if (trigger) {\n                    element.on(trigger, showTooltipBind);\n                    element.on(triggers.hide[idx], hideTooltipBind);\n                  }\n\n                  element.on('keypress', function(e) {\n                    if (e.which === 27) {\n                      hideTooltipBind();\n                    }\n                  });\n                });\n              }\n            }\n\n            prepTriggers();\n\n            var animation = scope.$eval(attrs[prefix + 'Animation']);\n            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;\n\n            var appendToBodyVal;\n            var appendKey = prefix + 'AppendToBody';\n            if (appendKey in attrs && attrs[appendKey] === undefined) {\n              appendToBodyVal = true;\n            } else {\n              appendToBodyVal = scope.$eval(attrs[appendKey]);\n            }\n\n            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;\n\n            // Make sure tooltip is destroyed and removed.\n            scope.$on('$destroy', function onDestroyTooltip() {\n              unregisterTriggers();\n              removeTooltip();\n              ttScope = null;\n            });\n          };\n        }\n      };\n    };\n  }];\n})\n\n// This is mostly ngInclude code but with a custom scope\n.directive('uibTooltipTemplateTransclude', [\n         '$animate', '$sce', '$compile', '$templateRequest',\nfunction ($animate, $sce, $compile, $templateRequest) {\n  return {\n    link: function(scope, elem, attrs) {\n      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);\n\n      var changeCounter = 0,\n        currentScope,\n        previousElement,\n        currentElement;\n\n      var cleanupLastIncludeContent = function() {\n        if (previousElement) {\n          previousElement.remove();\n          previousElement = null;\n        }\n\n        if (currentScope) {\n          currentScope.$destroy();\n          currentScope = null;\n        }\n\n        if (currentElement) {\n          $animate.leave(currentElement).then(function() {\n            previousElement = null;\n          });\n          previousElement = currentElement;\n          currentElement = null;\n        }\n      };\n\n      scope.$watch($sce.parseAsResourceUrl(attrs.uibTooltipTemplateTransclude), function(src) {\n        var thisChangeId = ++changeCounter;\n\n        if (src) {\n          //set the 2nd param to true to ignore the template request error so that the inner\n          //contents and scope can be cleaned up.\n          $templateRequest(src, true).then(function(response) {\n            if (thisChangeId !== changeCounter) { return; }\n            var newScope = origScope.$new();\n            var template = response;\n\n            var clone = $compile(template)(newScope, function(clone) {\n              cleanupLastIncludeContent();\n              $animate.enter(clone, elem);\n            });\n\n            currentScope = newScope;\n            currentElement = clone;\n\n            currentScope.$emit('$includeContentLoaded', src);\n          }, function() {\n            if (thisChangeId === changeCounter) {\n              cleanupLastIncludeContent();\n              scope.$emit('$includeContentError', src);\n            }\n          });\n          scope.$emit('$includeContentRequested', src);\n        } else {\n          cleanupLastIncludeContent();\n        }\n      });\n\n      scope.$on('$destroy', cleanupLastIncludeContent);\n    }\n  };\n}])\n\n/**\n * Note that it's intentional that these classes are *not* applied through $animate.\n * They must not be animated as they're expected to be present on the tooltip on\n * initialization.\n */\n.directive('uibTooltipClasses', ['$uibPosition', function($uibPosition) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      // need to set the primary position so the\n      // arrow has space during position measure.\n      // tooltip.positionTooltip()\n      if (scope.placement) {\n        // // There are no top-left etc... classes\n        // // in TWBS, so we need the primary position.\n        var position = $uibPosition.parsePlacement(scope.placement);\n        element.addClass(position[0]);\n      }\n\n      if (scope.popupClass) {\n        element.addClass(scope.popupClass);\n      }\n\n      if (scope.animation) {\n        element.addClass(attrs.tooltipAnimationClass);\n      }\n    }\n  };\n}])\n\n.directive('uibTooltipPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { content: '@' },\n    templateUrl: 'uib/template/tooltip/tooltip-popup.html'\n  };\n})\n\n.directive('uibTooltip', [ '$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltip', 'tooltip', 'mouseenter');\n}])\n\n.directive('uibTooltipTemplatePopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&', originScope: '&' },\n    templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'\n  };\n})\n\n.directive('uibTooltipTemplate', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltipTemplate', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibTooltipHtmlPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&' },\n    templateUrl: 'uib/template/tooltip/tooltip-html-popup.html'\n  };\n})\n\n.directive('uibTooltipHtml', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltipHtml', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/tooltip/tooltip.js\n ** module id = 47\n ** module chunks = 1\n **/","angular.module(\"uib/template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/popover/popover.html\",\n    \"<div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"popover-inner\\\">\\n\" +\n    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n    \"    <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/popover/popover.html.js\n ** module id = 48\n ** module chunks = 1\n **/","angular.module(\"uib/template/popover/popover-html.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/popover/popover-html.html\",\n    \"<div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"popover-inner\\\">\\n\" +\n    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n    \"    <div class=\\\"popover-content\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/popover/popover-html.html.js\n ** module id = 49\n ** module chunks = 1\n **/","angular.module(\"uib/template/popover/popover-template.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/popover/popover-template.html\",\n    \"<div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"popover-inner\\\">\\n\" +\n    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n    \"    <div class=\\\"popover-content\\\"\\n\" +\n    \"      uib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n    \"      tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/popover/popover-template.html.js\n ** module id = 50\n ** module chunks = 1\n **/","/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, and selector delegatation.\n */\nangular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip'])\n\n.directive('uibPopoverTemplatePopup', function() {\n  return {\n    restrict: 'A',\n    scope: { uibTitle: '@', contentExp: '&', originScope: '&' },\n    templateUrl: 'uib/template/popover/popover-template.html'\n  };\n})\n\n.directive('uibPopoverTemplate', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopoverTemplate', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibPopoverHtmlPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&', uibTitle: '@' },\n    templateUrl: 'uib/template/popover/popover-html.html'\n  };\n})\n\n.directive('uibPopoverHtml', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopoverHtml', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibPopoverPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { uibTitle: '@', content: '@' },\n    templateUrl: 'uib/template/popover/popover.html'\n  };\n})\n\n.directive('uibPopover', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopover', 'popover', 'click');\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/popover/popover.js\n ** module id = 51\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../css-loader/index.js!./tooltip.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../css-loader/index.js!./tooltip.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../../css-loader/index.js!./tooltip.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/tooltip/tooltip.css\n ** module id = 52\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"[uib-popover-html-popup].popover.bottom-left>.arrow,[uib-popover-html-popup].popover.bottom-right>.arrow,[uib-popover-html-popup].popover.left-bottom>.arrow,[uib-popover-html-popup].popover.left-top>.arrow,[uib-popover-html-popup].popover.right-bottom>.arrow,[uib-popover-html-popup].popover.right-top>.arrow,[uib-popover-html-popup].popover.top-left>.arrow,[uib-popover-html-popup].popover.top-right>.arrow,[uib-popover-popup].popover.bottom-left>.arrow,[uib-popover-popup].popover.bottom-right>.arrow,[uib-popover-popup].popover.left-bottom>.arrow,[uib-popover-popup].popover.left-top>.arrow,[uib-popover-popup].popover.right-bottom>.arrow,[uib-popover-popup].popover.right-top>.arrow,[uib-popover-popup].popover.top-left>.arrow,[uib-popover-popup].popover.top-right>.arrow,[uib-popover-template-popup].popover.bottom-left>.arrow,[uib-popover-template-popup].popover.bottom-right>.arrow,[uib-popover-template-popup].popover.left-bottom>.arrow,[uib-popover-template-popup].popover.left-top>.arrow,[uib-popover-template-popup].popover.right-bottom>.arrow,[uib-popover-template-popup].popover.right-top>.arrow,[uib-popover-template-popup].popover.top-left>.arrow,[uib-popover-template-popup].popover.top-right>.arrow,[uib-tooltip-html-popup].tooltip.bottom-left>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left>.tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right>.tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left>.tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right>.tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom>.tooltip-arrow,[uib-tooltip-popup].tooltip.left-top>.tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom>.tooltip-arrow,[uib-tooltip-popup].tooltip.right-top>.tooltip-arrow,[uib-tooltip-popup].tooltip.top-left>.tooltip-arrow,[uib-tooltip-popup].tooltip.top-right>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left>.tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right>.tooltip-arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0}[uib-popover-html-popup].popover,[uib-popover-popup].popover,[uib-popover-template-popup].popover{display:block!important}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/angular-ui-bootstrap/src/tooltip/tooltip.css\n ** module id = 53\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./tooltip.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./tooltip.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./tooltip.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/tooltip/tooltip.less\n ** module id = 54\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".popover{position:absolute;top:0;left:0;z-index:1060;display:none;max-width:400px;padding:1px;font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;word-wrap:normal;font-size:14px;background-color:#fff;background-clip:padding-box;border:1px solid #dedede;border-radius:6px;box-shadow:0 1px 7px rgba(0,0,0,.2)}.popover.top{margin-top:-10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-left:-10px}.popover-title{margin:0;padding:8px 14px;font-size:14px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px;font-weight:lighter}.popover-content a{color:#02baf2;text-decoration:none}.popover>.arrow,.popover>.arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover>.arrow{border-width:11px}.popover>.arrow:after{border-width:10px;content:\\\"\\\"}.popover.top>.arrow{left:50%;margin-left:-11px;border-bottom-width:0;border-top-color:rgba(0,0,0,.12);bottom:-11px}.popover.top>.arrow:after{content:\\\" \\\";bottom:1px;margin-left:-10px;border-bottom-width:0;border-top-color:#fff}.popover.right>.arrow{top:50%;left:-11px;margin-top:-11px;border-left-width:0;border-right-color:rgba(0,0,0,.12)}.popover.right>.arrow:after{content:\\\" \\\";left:1px;bottom:-10px;border-left-width:0;border-right-color:#fff}.popover.bottom>.arrow{left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:rgba(0,0,0,.12);top:-11px}.popover.bottom>.arrow:after{content:\\\" \\\";top:1px;margin-left:-10px;border-top-width:0;border-bottom-color:#fff}.popover.left>.arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:rgba(0,0,0,.12)}.popover.left>.arrow:after{content:\\\" \\\";right:1px;border-right-width:0;border-left-color:#fff;bottom:-10px}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/less-loader!./src/tooltip/tooltip.less\n ** module id = 55\n ** module chunks = 1\n **/","export default function runFunc($templateCache: ng.ITemplateCacheService): void {\n  'ngInject';\n\n  $templateCache.put('uib/template/popover/popover-template.html',\n    `<div class=\"arrow\"></div>\n\t\t<div class=\"popover-inner\">\n\t\t\t<h3 class=\"popover-title\" ng-bind=\"uibTitle\" ng-if=\"uibTitle\"></h3>\n\t\t\t<div class=\"popover-content\"\n\t\t\t\tuib-tooltip-template-transclude=\"contentExp()\"\n\t\t\t\ttooltip-template-transclude-scope=\"originScope()\">\n\t\t\t</div>\n\t\t</div>`\n  );\n\n  $templateCache.put('uib/template/popover/popover.html',\n    `<div class=\"arrow\"></div>\n\t\t<div class=\"popover-inner\">\n\t\t\t<h3 class=\"popover-title\" ng-bind=\"uibTitle\" ng-if=\"uibTitle\"></h3>\n\t\t\t<div class=\"popover-content\" ng-bind=\"content\"></div>\n\t\t</div>`\n  );\n\n  $templateCache.put('uib/template/popover/popover-html.html',\n    `<div class=\"arrow\"></div>\n\t\t<div class=\"popover-inner\">\n\t\t\t<h3 class=\"popover-title\" ng-bind=\"uibTitle\" ng-if=\"uibTitle\"></h3>\n\t\t\t<div class=\"popover-content\" ng-bind-html=\"contentExp()\"></div>\n\t\t</div>`\n  );\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tooltip/tooltip.run.ts\n **/","export default function config($uibTooltipProvider: any): void {\n  'ngInject';\n\n  $uibTooltipProvider.options({\n    animation: false,\n    appendToBody: true,\n    trigger: 'mouseenter'\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tooltip/tooltip.config.ts\n **/","import * as angular from 'angular';\n\nimport 'angular-ui-bootstrap/src/buttons';\n\nconst module: ng.IModule = angular.module('ep.toggleButtons', [\n  'ui.bootstrap.buttons'\n]);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/toggleButtons/toggleButtons.module.ts\n **/","require('./buttons');\n\nvar MODULE_NAME = 'ui.bootstrap.module.buttons';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.buttons']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/buttons/index.js\n ** module id = 59\n ** module chunks = 1\n **/","angular.module('ui.bootstrap.buttons', [])\n\n.constant('uibButtonConfig', {\n  activeClass: 'active',\n  toggleEvent: 'click'\n})\n\n.controller('UibButtonsController', ['uibButtonConfig', function(buttonConfig) {\n  this.activeClass = buttonConfig.activeClass || 'active';\n  this.toggleEvent = buttonConfig.toggleEvent || 'click';\n}])\n\n.directive('uibBtnRadio', ['$parse', function($parse) {\n  return {\n    require: ['uibBtnRadio', 'ngModel'],\n    controller: 'UibButtonsController',\n    controllerAs: 'buttons',\n    link: function(scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n      var uncheckableExpr = $parse(attrs.uibUncheckable);\n\n      element.find('input').css({display: 'none'});\n\n      //model -> UI\n      ngModelCtrl.$render = function() {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.uibBtnRadio)));\n      };\n\n      //ui->model\n      element.on(buttonsCtrl.toggleEvent, function() {\n        if (attrs.disabled) {\n          return;\n        }\n\n        var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n        if (!isActive || angular.isDefined(attrs.uncheckable)) {\n          scope.$apply(function() {\n            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.uibBtnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n\n      if (attrs.uibUncheckable) {\n        scope.$watch(uncheckableExpr, function(uncheckable) {\n          attrs.$set('uncheckable', uncheckable ? '' : undefined);\n        });\n      }\n    }\n  };\n}])\n\n.directive('uibBtnCheckbox', function() {\n  return {\n    require: ['uibBtnCheckbox', 'ngModel'],\n    controller: 'UibButtonsController',\n    controllerAs: 'button',\n    link: function(scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      element.find('input').css({display: 'none'});\n\n      function getTrueValue() {\n        return getCheckboxValue(attrs.btnCheckboxTrue, true);\n      }\n\n      function getFalseValue() {\n        return getCheckboxValue(attrs.btnCheckboxFalse, false);\n      }\n\n      function getCheckboxValue(attribute, defaultValue) {\n        return angular.isDefined(attribute) ? scope.$eval(attribute) : defaultValue;\n      }\n\n      //model -> UI\n      ngModelCtrl.$render = function() {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n      };\n\n      //ui->model\n      element.on(buttonsCtrl.toggleEvent, function() {\n        if (attrs.disabled) {\n          return;\n        }\n\n        scope.$apply(function() {\n          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/buttons/buttons.js\n ** module id = 60\n ** module chunks = 1\n **/","import * as angular from 'angular';\n\nimport 'angular-ui-bootstrap/src/modal/index-nocss.js';\nimport 'angular-ui-bootstrap/src/position/position.css';\nimport './modal.less';\n\nimport run from './modal.run';\n\nconst module: ng.IModule = angular.module('ep.modal', [\n  'ngSanitize',\n  'ui.bootstrap.modal'\n]);\n\nmodule.run(run);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modal/modal.module.ts\n **/","require('../position/index-nocss.js');\nrequire('../stackedMap');\nrequire('../../template/modal/window.html.js');\nrequire('./modal');\n\nvar MODULE_NAME = 'ui.bootstrap.module.modal';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.modal', 'uib/template/modal/window.html']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/modal/index-nocss.js\n ** module id = 62\n ** module chunks = 1\n **/","angular.module(\"uib/template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/modal/window.html\",\n    \"<div class=\\\"modal-dialog {{size ? 'modal-' + size : ''}}\\\"><div class=\\\"modal-content\\\" uib-modal-transclude></div></div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/modal/window.html.js\n ** module id = 63\n ** module chunks = 1\n **/","angular.module('ui.bootstrap.modal', ['ui.bootstrap.stackedMap', 'ui.bootstrap.position'])\n/**\n * A helper, internal data structure that stores all references attached to key\n */\n  .factory('$$multiMap', function() {\n    return {\n      createNew: function() {\n        var map = {};\n\n        return {\n          entries: function() {\n            return Object.keys(map).map(function(key) {\n              return {\n                key: key,\n                value: map[key]\n              };\n            });\n          },\n          get: function(key) {\n            return map[key];\n          },\n          hasKey: function(key) {\n            return !!map[key];\n          },\n          keys: function() {\n            return Object.keys(map);\n          },\n          put: function(key, value) {\n            if (!map[key]) {\n              map[key] = [];\n            }\n\n            map[key].push(value);\n          },\n          remove: function(key, value) {\n            var values = map[key];\n\n            if (!values) {\n              return;\n            }\n\n            var idx = values.indexOf(value);\n\n            if (idx !== -1) {\n              values.splice(idx, 1);\n            }\n\n            if (!values.length) {\n              delete map[key];\n            }\n          }\n        };\n      }\n    };\n  })\n\n/**\n * Pluggable resolve mechanism for the modal resolve resolution\n * Supports UI Router's $resolve service\n */\n  .provider('$uibResolve', function() {\n    var resolve = this;\n    this.resolver = null;\n\n    this.setResolver = function(resolver) {\n      this.resolver = resolver;\n    };\n\n    this.$get = ['$injector', '$q', function($injector, $q) {\n      var resolver = resolve.resolver ? $injector.get(resolve.resolver) : null;\n      return {\n        resolve: function(invocables, locals, parent, self) {\n          if (resolver) {\n            return resolver.resolve(invocables, locals, parent, self);\n          }\n\n          var promises = [];\n\n          angular.forEach(invocables, function(value) {\n            if (angular.isFunction(value) || angular.isArray(value)) {\n              promises.push($q.resolve($injector.invoke(value)));\n            } else if (angular.isString(value)) {\n              promises.push($q.resolve($injector.get(value)));\n            } else {\n              promises.push($q.resolve(value));\n            }\n          });\n\n          return $q.all(promises).then(function(resolves) {\n            var resolveObj = {};\n            var resolveIter = 0;\n            angular.forEach(invocables, function(value, key) {\n              resolveObj[key] = resolves[resolveIter++];\n            });\n\n            return resolveObj;\n          });\n        }\n      };\n    }];\n  })\n\n/**\n * A helper directive for the $modal service. It creates a backdrop element.\n */\n  .directive('uibModalBackdrop', ['$animate', '$injector', '$uibModalStack',\n  function($animate, $injector, $modalStack) {\n    return {\n      restrict: 'A',\n      compile: function(tElement, tAttrs) {\n        tElement.addClass(tAttrs.backdropClass);\n        return linkFn;\n      }\n    };\n\n    function linkFn(scope, element, attrs) {\n      if (attrs.modalInClass) {\n        $animate.addClass(element, attrs.modalInClass);\n\n        scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n          var done = setIsAsync();\n          if (scope.modalOptions.animation) {\n            $animate.removeClass(element, attrs.modalInClass).then(done);\n          } else {\n            done();\n          }\n        });\n      }\n    }\n  }])\n\n  .directive('uibModalWindow', ['$uibModalStack', '$q', '$animateCss', '$document',\n  function($modalStack, $q, $animateCss, $document) {\n    return {\n      scope: {\n        index: '@'\n      },\n      restrict: 'A',\n      transclude: true,\n      templateUrl: function(tElement, tAttrs) {\n        return tAttrs.templateUrl || 'uib/template/modal/window.html';\n      },\n      link: function(scope, element, attrs) {\n        element.addClass(attrs.windowTopClass || '');\n        scope.size = attrs.size;\n\n        scope.close = function(evt) {\n          var modal = $modalStack.getTop();\n          if (modal && modal.value.backdrop &&\n            modal.value.backdrop !== 'static' &&\n            evt.target === evt.currentTarget) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            $modalStack.dismiss(modal.key, 'backdrop click');\n          }\n        };\n\n        // moved from template to fix issue #2280\n        element.on('click', scope.close);\n\n        // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n        // We can detect that by using this property in the template associated with this directive and then use\n        // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n        scope.$isRendered = true;\n\n        // Deferred object that will be resolved when this modal is render.\n        var modalRenderDeferObj = $q.defer();\n        // Resolve render promise post-digest\n        scope.$$postDigest(function() {\n          modalRenderDeferObj.resolve();\n        });\n\n        modalRenderDeferObj.promise.then(function() {\n          var animationPromise = null;\n\n          if (attrs.modalInClass) {\n            animationPromise = $animateCss(element, {\n              addClass: attrs.modalInClass\n            }).start();\n\n            scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n              var done = setIsAsync();\n              $animateCss(element, {\n                removeClass: attrs.modalInClass\n              }).start().then(done);\n            });\n          }\n\n\n          $q.when(animationPromise).then(function() {\n            // Notify {@link $modalStack} that modal is rendered.\n            var modal = $modalStack.getTop();\n            if (modal) {\n              $modalStack.modalRendered(modal.key);\n            }\n\n            /**\n             * If something within the freshly-opened modal already has focus (perhaps via a\n             * directive that causes focus). then no need to try and focus anything.\n             */\n            if (!($document[0].activeElement && element[0].contains($document[0].activeElement))) {\n              var inputWithAutofocus = element[0].querySelector('[autofocus]');\n              /**\n               * Auto-focusing of a freshly-opened modal element causes any child elements\n               * with the autofocus attribute to lose focus. This is an issue on touch\n               * based devices which will show and then hide the onscreen keyboard.\n               * Attempts to refocus the autofocus element via JavaScript will not reopen\n               * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n               * the modal element if the modal does not contain an autofocus element.\n               */\n              if (inputWithAutofocus) {\n                inputWithAutofocus.focus();\n              } else {\n                element[0].focus();\n              }\n            }\n          });\n        });\n      }\n    };\n  }])\n\n  .directive('uibModalAnimationClass', function() {\n    return {\n      compile: function(tElement, tAttrs) {\n        if (tAttrs.modalAnimation) {\n          tElement.addClass(tAttrs.uibModalAnimationClass);\n        }\n      }\n    };\n  })\n\n  .directive('uibModalTransclude', ['$animate', function($animate) {\n    return {\n      link: function(scope, element, attrs, controller, transclude) {\n        transclude(scope.$parent, function(clone) {\n          element.empty();\n          $animate.enter(clone, element);\n        });\n      }\n    };\n  }])\n\n  .factory('$uibModalStack', ['$animate', '$animateCss', '$document',\n    '$compile', '$rootScope', '$q', '$$multiMap', '$$stackedMap', '$uibPosition',\n    function($animate, $animateCss, $document, $compile, $rootScope, $q, $$multiMap, $$stackedMap, $uibPosition) {\n      var OPENED_MODAL_CLASS = 'modal-open';\n\n      var backdropDomEl, backdropScope;\n      var openedWindows = $$stackedMap.createNew();\n      var openedClasses = $$multiMap.createNew();\n      var $modalStack = {\n        NOW_CLOSING_EVENT: 'modal.stack.now-closing'\n      };\n      var topModalIndex = 0;\n      var previousTopOpenedModal = null;\n\n      //Modal focus behavior\n      var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' +\n        'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' +\n        'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n      var scrollbarPadding;\n      var SNAKE_CASE_REGEXP = /[A-Z]/g;\n\n      // TODO: extract into common dependency with tooltip\n      function snake_case(name) {\n        var separator = '-';\n        return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n          return (pos ? separator : '') + letter.toLowerCase();\n        });\n      }\n\n      function isVisible(element) {\n        return !!(element.offsetWidth ||\n          element.offsetHeight ||\n          element.getClientRects().length);\n      }\n\n      function backdropIndex() {\n        var topBackdropIndex = -1;\n        var opened = openedWindows.keys();\n        for (var i = 0; i < opened.length; i++) {\n          if (openedWindows.get(opened[i]).value.backdrop) {\n            topBackdropIndex = i;\n          }\n        }\n\n        // If any backdrop exist, ensure that it's index is always\n        // right below the top modal\n        if (topBackdropIndex > -1 && topBackdropIndex < topModalIndex) {\n          topBackdropIndex = topModalIndex;\n        }\n        return topBackdropIndex;\n      }\n\n      $rootScope.$watch(backdropIndex, function(newBackdropIndex) {\n        if (backdropScope) {\n          backdropScope.index = newBackdropIndex;\n        }\n      });\n\n      function removeModalWindow(modalInstance, elementToReceiveFocus) {\n        var modalWindow = openedWindows.get(modalInstance).value;\n        var appendToElement = modalWindow.appendTo;\n\n        //clean up the stack\n        openedWindows.remove(modalInstance);\n        previousTopOpenedModal = openedWindows.top();\n        if (previousTopOpenedModal) {\n          topModalIndex = parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10);\n        }\n\n        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function() {\n          var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;\n          openedClasses.remove(modalBodyClass, modalInstance);\n          var areAnyOpen = openedClasses.hasKey(modalBodyClass);\n          appendToElement.toggleClass(modalBodyClass, areAnyOpen);\n          if (!areAnyOpen && scrollbarPadding && scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n            if (scrollbarPadding.originalRight) {\n              appendToElement.css({paddingRight: scrollbarPadding.originalRight + 'px'});\n            } else {\n              appendToElement.css({paddingRight: ''});\n            }\n            scrollbarPadding = null;\n          }\n          toggleTopWindowClass(true);\n        }, modalWindow.closedDeferred);\n        checkRemoveBackdrop();\n\n        //move focus to specified element if available, or else to body\n        if (elementToReceiveFocus && elementToReceiveFocus.focus) {\n          elementToReceiveFocus.focus();\n        } else if (appendToElement.focus) {\n          appendToElement.focus();\n        }\n      }\n\n      // Add or remove \"windowTopClass\" from the top window in the stack\n      function toggleTopWindowClass(toggleSwitch) {\n        var modalWindow;\n\n        if (openedWindows.length() > 0) {\n          modalWindow = openedWindows.top().value;\n          modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);\n        }\n      }\n\n      function checkRemoveBackdrop() {\n        //remove backdrop if no longer needed\n        if (backdropDomEl && backdropIndex() === -1) {\n          var backdropScopeRef = backdropScope;\n          removeAfterAnimate(backdropDomEl, backdropScope, function() {\n            backdropScopeRef = null;\n          });\n          backdropDomEl = undefined;\n          backdropScope = undefined;\n        }\n      }\n\n      function removeAfterAnimate(domEl, scope, done, closedDeferred) {\n        var asyncDeferred;\n        var asyncPromise = null;\n        var setIsAsync = function() {\n          if (!asyncDeferred) {\n            asyncDeferred = $q.defer();\n            asyncPromise = asyncDeferred.promise;\n          }\n\n          return function asyncDone() {\n            asyncDeferred.resolve();\n          };\n        };\n        scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);\n\n        // Note that it's intentional that asyncPromise might be null.\n        // That's when setIsAsync has not been called during the\n        // NOW_CLOSING_EVENT broadcast.\n        return $q.when(asyncPromise).then(afterAnimating);\n\n        function afterAnimating() {\n          if (afterAnimating.done) {\n            return;\n          }\n          afterAnimating.done = true;\n\n          $animate.leave(domEl).then(function() {\n            if (done) {\n              done();\n            }\n\n            domEl.remove();\n            if (closedDeferred) {\n              closedDeferred.resolve();\n            }\n          });\n\n          scope.$destroy();\n        }\n      }\n\n      $document.on('keydown', keydownListener);\n\n      $rootScope.$on('$destroy', function() {\n        $document.off('keydown', keydownListener);\n      });\n\n      function keydownListener(evt) {\n        if (evt.isDefaultPrevented()) {\n          return evt;\n        }\n\n        var modal = openedWindows.top();\n        if (modal) {\n          switch (evt.which) {\n            case 27: {\n              if (modal.value.keyboard) {\n                evt.preventDefault();\n                $rootScope.$apply(function() {\n                  $modalStack.dismiss(modal.key, 'escape key press');\n                });\n              }\n              break;\n            }\n            case 9: {\n              var list = $modalStack.loadFocusElementList(modal);\n              var focusChanged = false;\n              if (evt.shiftKey) {\n                if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n                  focusChanged = $modalStack.focusLastFocusableElement(list);\n                }\n              } else {\n                if ($modalStack.isFocusInLastItem(evt, list)) {\n                  focusChanged = $modalStack.focusFirstFocusableElement(list);\n                }\n              }\n\n              if (focusChanged) {\n                evt.preventDefault();\n                evt.stopPropagation();\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      $modalStack.open = function(modalInstance, modal) {\n        var modalOpener = $document[0].activeElement,\n          modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;\n\n        toggleTopWindowClass(false);\n\n        // Store the current top first, to determine what index we ought to use\n        // for the current top modal\n        previousTopOpenedModal = openedWindows.top();\n\n        openedWindows.add(modalInstance, {\n          deferred: modal.deferred,\n          renderDeferred: modal.renderDeferred,\n          closedDeferred: modal.closedDeferred,\n          modalScope: modal.scope,\n          backdrop: modal.backdrop,\n          keyboard: modal.keyboard,\n          openedClass: modal.openedClass,\n          windowTopClass: modal.windowTopClass,\n          animation: modal.animation,\n          appendTo: modal.appendTo\n        });\n\n        openedClasses.put(modalBodyClass, modalInstance);\n\n        var appendToElement = modal.appendTo,\n            currBackdropIndex = backdropIndex();\n\n        if (!appendToElement.length) {\n          throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');\n        }\n\n        if (currBackdropIndex >= 0 && !backdropDomEl) {\n          backdropScope = $rootScope.$new(true);\n          backdropScope.modalOptions = modal;\n          backdropScope.index = currBackdropIndex;\n          backdropDomEl = angular.element('<div uib-modal-backdrop=\"modal-backdrop\"></div>');\n          backdropDomEl.attr({\n            'class': 'modal-backdrop',\n            'ng-style': '{\\'z-index\\': 1040 + (index && 1 || 0) + index*10}',\n            'uib-modal-animation-class': 'fade',\n            'modal-in-class': 'in'\n          });\n          if (modal.backdropClass) {\n            backdropDomEl.addClass(modal.backdropClass);\n          }\n\n          if (modal.animation) {\n            backdropDomEl.attr('modal-animation', 'true');\n          }\n          $compile(backdropDomEl)(backdropScope);\n          $animate.enter(backdropDomEl, appendToElement);\n          if ($uibPosition.isScrollable(appendToElement)) {\n            scrollbarPadding = $uibPosition.scrollbarPadding(appendToElement);\n            if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n              appendToElement.css({paddingRight: scrollbarPadding.right + 'px'});\n            }\n          }\n        }\n\n        var content;\n        if (modal.component) {\n          content = document.createElement(snake_case(modal.component.name));\n          content = angular.element(content);\n          content.attr({\n            resolve: '$resolve',\n            'modal-instance': '$uibModalInstance',\n            close: '$close($value)',\n            dismiss: '$dismiss($value)'\n          });\n        } else {\n          content = modal.content;\n        }\n\n        // Set the top modal index based on the index of the previous top modal\n        topModalIndex = previousTopOpenedModal ? parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10) + 1 : 0;\n        var angularDomEl = angular.element('<div uib-modal-window=\"modal-window\"></div>');\n        angularDomEl.attr({\n          'class': 'modal',\n          'template-url': modal.windowTemplateUrl,\n          'window-top-class': modal.windowTopClass,\n          'role': 'dialog',\n          'aria-labelledby': modal.ariaLabelledBy,\n          'aria-describedby': modal.ariaDescribedBy,\n          'size': modal.size,\n          'index': topModalIndex,\n          'animate': 'animate',\n          'ng-style': '{\\'z-index\\': 1050 + $$topModalIndex*10, display: \\'block\\'}',\n          'tabindex': -1,\n          'uib-modal-animation-class': 'fade',\n          'modal-in-class': 'in'\n        }).append(content);\n        if (modal.windowClass) {\n          angularDomEl.addClass(modal.windowClass);\n        }\n\n        if (modal.animation) {\n          angularDomEl.attr('modal-animation', 'true');\n        }\n\n        appendToElement.addClass(modalBodyClass);\n        if (modal.scope) {\n          // we need to explicitly add the modal index to the modal scope\n          // because it is needed by ngStyle to compute the zIndex property.\n          modal.scope.$$topModalIndex = topModalIndex;\n        }\n        $animate.enter($compile(angularDomEl)(modal.scope), appendToElement);\n\n        openedWindows.top().value.modalDomEl = angularDomEl;\n        openedWindows.top().value.modalOpener = modalOpener;\n      };\n\n      function broadcastClosing(modalWindow, resultOrReason, closing) {\n        return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;\n      }\n\n      $modalStack.close = function(modalInstance, result) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow && broadcastClosing(modalWindow, result, true)) {\n          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n          modalWindow.value.deferred.resolve(result);\n          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismiss = function(modalInstance, reason) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow && broadcastClosing(modalWindow, reason, false)) {\n          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n          modalWindow.value.deferred.reject(reason);\n          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismissAll = function(reason) {\n        var topModal = this.getTop();\n        while (topModal && this.dismiss(topModal.key, reason)) {\n          topModal = this.getTop();\n        }\n      };\n\n      $modalStack.getTop = function() {\n        return openedWindows.top();\n      };\n\n      $modalStack.modalRendered = function(modalInstance) {\n        var modalWindow = openedWindows.get(modalInstance);\n        if (modalWindow) {\n          modalWindow.value.renderDeferred.resolve();\n        }\n      };\n\n      $modalStack.focusFirstFocusableElement = function(list) {\n        if (list.length > 0) {\n          list[0].focus();\n          return true;\n        }\n        return false;\n      };\n\n      $modalStack.focusLastFocusableElement = function(list) {\n        if (list.length > 0) {\n          list[list.length - 1].focus();\n          return true;\n        }\n        return false;\n      };\n\n      $modalStack.isModalFocused = function(evt, modalWindow) {\n        if (evt && modalWindow) {\n          var modalDomEl = modalWindow.value.modalDomEl;\n          if (modalDomEl && modalDomEl.length) {\n            return (evt.target || evt.srcElement) === modalDomEl[0];\n          }\n        }\n        return false;\n      };\n\n      $modalStack.isFocusInFirstItem = function(evt, list) {\n        if (list.length > 0) {\n          return (evt.target || evt.srcElement) === list[0];\n        }\n        return false;\n      };\n\n      $modalStack.isFocusInLastItem = function(evt, list) {\n        if (list.length > 0) {\n          return (evt.target || evt.srcElement) === list[list.length - 1];\n        }\n        return false;\n      };\n\n      $modalStack.loadFocusElementList = function(modalWindow) {\n        if (modalWindow) {\n          var modalDomE1 = modalWindow.value.modalDomEl;\n          if (modalDomE1 && modalDomE1.length) {\n            var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n            return elements ?\n              Array.prototype.filter.call(elements, function(element) {\n                return isVisible(element);\n              }) : elements;\n          }\n        }\n      };\n\n      return $modalStack;\n    }])\n\n  .provider('$uibModal', function() {\n    var $modalProvider = {\n      options: {\n        animation: true,\n        backdrop: true, //can also be false or 'static'\n        keyboard: true\n      },\n      $get: ['$rootScope', '$q', '$document', '$templateRequest', '$controller', '$uibResolve', '$uibModalStack',\n        function ($rootScope, $q, $document, $templateRequest, $controller, $uibResolve, $modalStack) {\n          var $modal = {};\n\n          function getTemplatePromise(options) {\n            return options.template ? $q.when(options.template) :\n              $templateRequest(angular.isFunction(options.templateUrl) ?\n                options.templateUrl() : options.templateUrl);\n          }\n\n          var promiseChain = null;\n          $modal.getPromiseChain = function() {\n            return promiseChain;\n          };\n\n          $modal.open = function(modalOptions) {\n            var modalResultDeferred = $q.defer();\n            var modalOpenedDeferred = $q.defer();\n            var modalClosedDeferred = $q.defer();\n            var modalRenderDeferred = $q.defer();\n\n            //prepare an instance of a modal to be injected into controllers and returned to a caller\n            var modalInstance = {\n              result: modalResultDeferred.promise,\n              opened: modalOpenedDeferred.promise,\n              closed: modalClosedDeferred.promise,\n              rendered: modalRenderDeferred.promise,\n              close: function (result) {\n                return $modalStack.close(modalInstance, result);\n              },\n              dismiss: function (reason) {\n                return $modalStack.dismiss(modalInstance, reason);\n              }\n            };\n\n            //merge and clean up options\n            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);\n            modalOptions.resolve = modalOptions.resolve || {};\n            modalOptions.appendTo = modalOptions.appendTo || $document.find('body').eq(0);\n\n            //verify options\n            if (!modalOptions.component && !modalOptions.template && !modalOptions.templateUrl) {\n              throw new Error('One of component or template or templateUrl options is required.');\n            }\n\n            var templateAndResolvePromise;\n            if (modalOptions.component) {\n              templateAndResolvePromise = $q.when($uibResolve.resolve(modalOptions.resolve, {}, null, null));\n            } else {\n              templateAndResolvePromise =\n                $q.all([getTemplatePromise(modalOptions), $uibResolve.resolve(modalOptions.resolve, {}, null, null)]);\n            }\n\n            function resolveWithTemplate() {\n              return templateAndResolvePromise;\n            }\n\n            // Wait for the resolution of the existing promise chain.\n            // Then switch to our own combined promise dependency (regardless of how the previous modal fared).\n            // Then add to $modalStack and resolve opened.\n            // Finally clean up the chain variable if no subsequent modal has overwritten it.\n            var samePromise;\n            samePromise = promiseChain = $q.all([promiseChain])\n              .then(resolveWithTemplate, resolveWithTemplate)\n              .then(function resolveSuccess(tplAndVars) {\n                var providedScope = modalOptions.scope || $rootScope;\n\n                var modalScope = providedScope.$new();\n                modalScope.$close = modalInstance.close;\n                modalScope.$dismiss = modalInstance.dismiss;\n\n                modalScope.$on('$destroy', function() {\n                  if (!modalScope.$$uibDestructionScheduled) {\n                    modalScope.$dismiss('$uibUnscheduledDestruction');\n                  }\n                });\n\n                var modal = {\n                  scope: modalScope,\n                  deferred: modalResultDeferred,\n                  renderDeferred: modalRenderDeferred,\n                  closedDeferred: modalClosedDeferred,\n                  animation: modalOptions.animation,\n                  backdrop: modalOptions.backdrop,\n                  keyboard: modalOptions.keyboard,\n                  backdropClass: modalOptions.backdropClass,\n                  windowTopClass: modalOptions.windowTopClass,\n                  windowClass: modalOptions.windowClass,\n                  windowTemplateUrl: modalOptions.windowTemplateUrl,\n                  ariaLabelledBy: modalOptions.ariaLabelledBy,\n                  ariaDescribedBy: modalOptions.ariaDescribedBy,\n                  size: modalOptions.size,\n                  openedClass: modalOptions.openedClass,\n                  appendTo: modalOptions.appendTo\n                };\n\n                var component = {};\n                var ctrlInstance, ctrlInstantiate, ctrlLocals = {};\n\n                if (modalOptions.component) {\n                  constructLocals(component, false, true, false);\n                  component.name = modalOptions.component;\n                  modal.component = component;\n                } else if (modalOptions.controller) {\n                  constructLocals(ctrlLocals, true, false, true);\n\n                  // the third param will make the controller instantiate later,private api\n                  // @see https://github.com/angular/angular.js/blob/master/src/ng/controller.js#L126\n                  ctrlInstantiate = $controller(modalOptions.controller, ctrlLocals, true, modalOptions.controllerAs);\n                  if (modalOptions.controllerAs && modalOptions.bindToController) {\n                    ctrlInstance = ctrlInstantiate.instance;\n                    ctrlInstance.$close = modalScope.$close;\n                    ctrlInstance.$dismiss = modalScope.$dismiss;\n                    angular.extend(ctrlInstance, {\n                      $resolve: ctrlLocals.$scope.$resolve\n                    }, providedScope);\n                  }\n\n                  ctrlInstance = ctrlInstantiate();\n\n                  if (angular.isFunction(ctrlInstance.$onInit)) {\n                    ctrlInstance.$onInit();\n                  }\n                }\n\n                if (!modalOptions.component) {\n                  modal.content = tplAndVars[0];\n                }\n\n                $modalStack.open(modalInstance, modal);\n                modalOpenedDeferred.resolve(true);\n\n                function constructLocals(obj, template, instanceOnScope, injectable) {\n                  obj.$scope = modalScope;\n                  obj.$scope.$resolve = {};\n                  if (instanceOnScope) {\n                    obj.$scope.$uibModalInstance = modalInstance;\n                  } else {\n                    obj.$uibModalInstance = modalInstance;\n                  }\n\n                  var resolves = template ? tplAndVars[1] : tplAndVars;\n                  angular.forEach(resolves, function(value, key) {\n                    if (injectable) {\n                      obj[key] = value;\n                    }\n\n                    obj.$scope.$resolve[key] = value;\n                  });\n                }\n            }, function resolveError(reason) {\n              modalOpenedDeferred.reject(reason);\n              modalResultDeferred.reject(reason);\n            })['finally'](function() {\n              if (promiseChain === samePromise) {\n                promiseChain = null;\n              }\n            });\n\n            return modalInstance;\n          };\n\n          return $modal;\n        }\n      ]\n    };\n\n    return $modalProvider;\n  });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/modal/modal.js\n ** module id = 64\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../css-loader/index.js!./position.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../css-loader/index.js!./position.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../../css-loader/index.js!./position.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/position/position.css\n ** module id = 65\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".uib-position-measure{display:block!important;visibility:hidden!important;position:absolute!important;top:-9999px!important;left:-9999px!important}.uib-position-scrollbar-measure{position:absolute!important;top:-9999px!important;width:50px!important;height:50px!important;overflow:scroll!important}.uib-position-body-scrollbar-measure{overflow:scroll!important}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/angular-ui-bootstrap/src/position/position.css\n ** module id = 66\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./modal.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./modal.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./modal.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/modal/modal.less\n ** module id = 67\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".modal,.modal-open{overflow:hidden}.modal{display:none;position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;-webkit-overflow-scrolling:touch;outline:0}.modal.fade .modal-dialog{-webkit-transform:translateY(-25%);transform:translateY(-25%);-webkit-transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out}.modal.in .modal-dialog{-webkit-transform:translate(0);transform:translate(0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;border:1px solid #999;border:1px solid rgba(0,0,0,.2);border-radius:6px;box-shadow:0 3px 9px rgba(0,0,0,.5);background-clip:padding-box;outline:0}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{opacity:0;filter:alpha(opacity=0)}.modal-backdrop.in{opacity:.5;filter:alpha(opacity=50)}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.42857143}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer .btn+.btn{margin-left:5px;margin-bottom:0}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.modal-footer .btn-block+.btn-block{margin-left:0}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:768px){.modal-dialog{width:600px;margin:30px auto}.modal-content{box-shadow:0 5px 15px rgba(0,0,0,.5)}.modal-sm{width:300px}}@media (min-width:992px){.modal-lg{width:900px}}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/less-loader!./src/modal/modal.less\n ** module id = 68\n ** module chunks = 1\n **/","export default function runFunc($templateCache: ng.ITemplateCacheService): void {\n  'ngInject';\n\n  $templateCache.put('uib/template/modal/window.html',\n    `<div class=\"modal-dialog {{size ? 'modal-' + size : ''}}\">\n      <div class=\"modal-content\" uib-modal-transclude></div>\n    </div>`);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modal/modal.run.ts\n **/","import * as angular from 'angular';\nimport 'angular-animate';\n\nimport 'angular-ui-bootstrap/src/carousel';\nimport './carousel.less';\n\nimport run from './carousel.run';\n\nconst module: ng.IModule = angular.module('ep.carousel', [\n  'ngSanitize',\n  'ngAnimate',\n  'ui.bootstrap.carousel'\n]);\n\nmodule.run(run);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/carousel/carousel.module.ts\n **/","require('./angular-animate');\nmodule.exports = 'ngAnimate';\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-animate/index.js\n ** module id = 71\n ** module chunks = 1\n **/","/**\n * @license AngularJS v1.5.5\n * (c) 2010-2016 Google, Inc. http://angularjs.org\n * License: MIT\n */\n(function(window, angular) {'use strict';\n\n/* jshint ignore:start */\nvar noop        = angular.noop;\nvar copy        = angular.copy;\nvar extend      = angular.extend;\nvar jqLite      = angular.element;\nvar forEach     = angular.forEach;\nvar isArray     = angular.isArray;\nvar isString    = angular.isString;\nvar isObject    = angular.isObject;\nvar isUndefined = angular.isUndefined;\nvar isDefined   = angular.isDefined;\nvar isFunction  = angular.isFunction;\nvar isElement   = angular.isElement;\n\nvar ELEMENT_NODE = 1;\nvar COMMENT_NODE = 8;\n\nvar ADD_CLASS_SUFFIX = '-add';\nvar REMOVE_CLASS_SUFFIX = '-remove';\nvar EVENT_CLASS_PREFIX = 'ng-';\nvar ACTIVE_CLASS_SUFFIX = '-active';\nvar PREPARE_CLASS_SUFFIX = '-prepare';\n\nvar NG_ANIMATE_CLASSNAME = 'ng-animate';\nvar NG_ANIMATE_CHILDREN_DATA = '$$ngAnimateChildren';\n\n// Detect proper transitionend/animationend event names.\nvar CSS_PREFIX = '', TRANSITION_PROP, TRANSITIONEND_EVENT, ANIMATION_PROP, ANIMATIONEND_EVENT;\n\n// If unprefixed events are not supported but webkit-prefixed are, use the latter.\n// Otherwise, just use W3C names, browsers not supporting them at all will just ignore them.\n// Note: Chrome implements `window.onwebkitanimationend` and doesn't implement `window.onanimationend`\n// but at the same time dispatches the `animationend` event and not `webkitAnimationEnd`.\n// Register both events in case `window.onanimationend` is not supported because of that,\n// do the same for `transitionend` as Safari is likely to exhibit similar behavior.\n// Also, the only modern browser that uses vendor prefixes for transitions/keyframes is webkit\n// therefore there is no reason to test anymore for other vendor prefixes:\n// http://caniuse.com/#search=transition\nif (isUndefined(window.ontransitionend) && isDefined(window.onwebkittransitionend)) {\n  CSS_PREFIX = '-webkit-';\n  TRANSITION_PROP = 'WebkitTransition';\n  TRANSITIONEND_EVENT = 'webkitTransitionEnd transitionend';\n} else {\n  TRANSITION_PROP = 'transition';\n  TRANSITIONEND_EVENT = 'transitionend';\n}\n\nif (isUndefined(window.onanimationend) && isDefined(window.onwebkitanimationend)) {\n  CSS_PREFIX = '-webkit-';\n  ANIMATION_PROP = 'WebkitAnimation';\n  ANIMATIONEND_EVENT = 'webkitAnimationEnd animationend';\n} else {\n  ANIMATION_PROP = 'animation';\n  ANIMATIONEND_EVENT = 'animationend';\n}\n\nvar DURATION_KEY = 'Duration';\nvar PROPERTY_KEY = 'Property';\nvar DELAY_KEY = 'Delay';\nvar TIMING_KEY = 'TimingFunction';\nvar ANIMATION_ITERATION_COUNT_KEY = 'IterationCount';\nvar ANIMATION_PLAYSTATE_KEY = 'PlayState';\nvar SAFE_FAST_FORWARD_DURATION_VALUE = 9999;\n\nvar ANIMATION_DELAY_PROP = ANIMATION_PROP + DELAY_KEY;\nvar ANIMATION_DURATION_PROP = ANIMATION_PROP + DURATION_KEY;\nvar TRANSITION_DELAY_PROP = TRANSITION_PROP + DELAY_KEY;\nvar TRANSITION_DURATION_PROP = TRANSITION_PROP + DURATION_KEY;\n\nvar isPromiseLike = function(p) {\n  return p && p.then ? true : false;\n};\n\nvar ngMinErr = angular.$$minErr('ng');\nfunction assertArg(arg, name, reason) {\n  if (!arg) {\n    throw ngMinErr('areq', \"Argument '{0}' is {1}\", (name || '?'), (reason || \"required\"));\n  }\n  return arg;\n}\n\nfunction mergeClasses(a,b) {\n  if (!a && !b) return '';\n  if (!a) return b;\n  if (!b) return a;\n  if (isArray(a)) a = a.join(' ');\n  if (isArray(b)) b = b.join(' ');\n  return a + ' ' + b;\n}\n\nfunction packageStyles(options) {\n  var styles = {};\n  if (options && (options.to || options.from)) {\n    styles.to = options.to;\n    styles.from = options.from;\n  }\n  return styles;\n}\n\nfunction pendClasses(classes, fix, isPrefix) {\n  var className = '';\n  classes = isArray(classes)\n      ? classes\n      : classes && isString(classes) && classes.length\n          ? classes.split(/\\s+/)\n          : [];\n  forEach(classes, function(klass, i) {\n    if (klass && klass.length > 0) {\n      className += (i > 0) ? ' ' : '';\n      className += isPrefix ? fix + klass\n                            : klass + fix;\n    }\n  });\n  return className;\n}\n\nfunction removeFromArray(arr, val) {\n  var index = arr.indexOf(val);\n  if (val >= 0) {\n    arr.splice(index, 1);\n  }\n}\n\nfunction stripCommentsFromElement(element) {\n  if (element instanceof jqLite) {\n    switch (element.length) {\n      case 0:\n        return [];\n        break;\n\n      case 1:\n        // there is no point of stripping anything if the element\n        // is the only element within the jqLite wrapper.\n        // (it's important that we retain the element instance.)\n        if (element[0].nodeType === ELEMENT_NODE) {\n          return element;\n        }\n        break;\n\n      default:\n        return jqLite(extractElementNode(element));\n        break;\n    }\n  }\n\n  if (element.nodeType === ELEMENT_NODE) {\n    return jqLite(element);\n  }\n}\n\nfunction extractElementNode(element) {\n  if (!element[0]) return element;\n  for (var i = 0; i < element.length; i++) {\n    var elm = element[i];\n    if (elm.nodeType == ELEMENT_NODE) {\n      return elm;\n    }\n  }\n}\n\nfunction $$addClass($$jqLite, element, className) {\n  forEach(element, function(elm) {\n    $$jqLite.addClass(elm, className);\n  });\n}\n\nfunction $$removeClass($$jqLite, element, className) {\n  forEach(element, function(elm) {\n    $$jqLite.removeClass(elm, className);\n  });\n}\n\nfunction applyAnimationClassesFactory($$jqLite) {\n  return function(element, options) {\n    if (options.addClass) {\n      $$addClass($$jqLite, element, options.addClass);\n      options.addClass = null;\n    }\n    if (options.removeClass) {\n      $$removeClass($$jqLite, element, options.removeClass);\n      options.removeClass = null;\n    }\n  }\n}\n\nfunction prepareAnimationOptions(options) {\n  options = options || {};\n  if (!options.$$prepared) {\n    var domOperation = options.domOperation || noop;\n    options.domOperation = function() {\n      options.$$domOperationFired = true;\n      domOperation();\n      domOperation = noop;\n    };\n    options.$$prepared = true;\n  }\n  return options;\n}\n\nfunction applyAnimationStyles(element, options) {\n  applyAnimationFromStyles(element, options);\n  applyAnimationToStyles(element, options);\n}\n\nfunction applyAnimationFromStyles(element, options) {\n  if (options.from) {\n    element.css(options.from);\n    options.from = null;\n  }\n}\n\nfunction applyAnimationToStyles(element, options) {\n  if (options.to) {\n    element.css(options.to);\n    options.to = null;\n  }\n}\n\nfunction mergeAnimationDetails(element, oldAnimation, newAnimation) {\n  var target = oldAnimation.options || {};\n  var newOptions = newAnimation.options || {};\n\n  var toAdd = (target.addClass || '') + ' ' + (newOptions.addClass || '');\n  var toRemove = (target.removeClass || '') + ' ' + (newOptions.removeClass || '');\n  var classes = resolveElementClasses(element.attr('class'), toAdd, toRemove);\n\n  if (newOptions.preparationClasses) {\n    target.preparationClasses = concatWithSpace(newOptions.preparationClasses, target.preparationClasses);\n    delete newOptions.preparationClasses;\n  }\n\n  // noop is basically when there is no callback; otherwise something has been set\n  var realDomOperation = target.domOperation !== noop ? target.domOperation : null;\n\n  extend(target, newOptions);\n\n  // TODO(matsko or sreeramu): proper fix is to maintain all animation callback in array and call at last,but now only leave has the callback so no issue with this.\n  if (realDomOperation) {\n    target.domOperation = realDomOperation;\n  }\n\n  if (classes.addClass) {\n    target.addClass = classes.addClass;\n  } else {\n    target.addClass = null;\n  }\n\n  if (classes.removeClass) {\n    target.removeClass = classes.removeClass;\n  } else {\n    target.removeClass = null;\n  }\n\n  oldAnimation.addClass = target.addClass;\n  oldAnimation.removeClass = target.removeClass;\n\n  return target;\n}\n\nfunction resolveElementClasses(existing, toAdd, toRemove) {\n  var ADD_CLASS = 1;\n  var REMOVE_CLASS = -1;\n\n  var flags = {};\n  existing = splitClassesToLookup(existing);\n\n  toAdd = splitClassesToLookup(toAdd);\n  forEach(toAdd, function(value, key) {\n    flags[key] = ADD_CLASS;\n  });\n\n  toRemove = splitClassesToLookup(toRemove);\n  forEach(toRemove, function(value, key) {\n    flags[key] = flags[key] === ADD_CLASS ? null : REMOVE_CLASS;\n  });\n\n  var classes = {\n    addClass: '',\n    removeClass: ''\n  };\n\n  forEach(flags, function(val, klass) {\n    var prop, allow;\n    if (val === ADD_CLASS) {\n      prop = 'addClass';\n      allow = !existing[klass];\n    } else if (val === REMOVE_CLASS) {\n      prop = 'removeClass';\n      allow = existing[klass];\n    }\n    if (allow) {\n      if (classes[prop].length) {\n        classes[prop] += ' ';\n      }\n      classes[prop] += klass;\n    }\n  });\n\n  function splitClassesToLookup(classes) {\n    if (isString(classes)) {\n      classes = classes.split(' ');\n    }\n\n    var obj = {};\n    forEach(classes, function(klass) {\n      // sometimes the split leaves empty string values\n      // incase extra spaces were applied to the options\n      if (klass.length) {\n        obj[klass] = true;\n      }\n    });\n    return obj;\n  }\n\n  return classes;\n}\n\nfunction getDomNode(element) {\n  return (element instanceof angular.element) ? element[0] : element;\n}\n\nfunction applyGeneratedPreparationClasses(element, event, options) {\n  var classes = '';\n  if (event) {\n    classes = pendClasses(event, EVENT_CLASS_PREFIX, true);\n  }\n  if (options.addClass) {\n    classes = concatWithSpace(classes, pendClasses(options.addClass, ADD_CLASS_SUFFIX));\n  }\n  if (options.removeClass) {\n    classes = concatWithSpace(classes, pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX));\n  }\n  if (classes.length) {\n    options.preparationClasses = classes;\n    element.addClass(classes);\n  }\n}\n\nfunction clearGeneratedClasses(element, options) {\n  if (options.preparationClasses) {\n    element.removeClass(options.preparationClasses);\n    options.preparationClasses = null;\n  }\n  if (options.activeClasses) {\n    element.removeClass(options.activeClasses);\n    options.activeClasses = null;\n  }\n}\n\nfunction blockTransitions(node, duration) {\n  // we use a negative delay value since it performs blocking\n  // yet it doesn't kill any existing transitions running on the\n  // same element which makes this safe for class-based animations\n  var value = duration ? '-' + duration + 's' : '';\n  applyInlineStyle(node, [TRANSITION_DELAY_PROP, value]);\n  return [TRANSITION_DELAY_PROP, value];\n}\n\nfunction blockKeyframeAnimations(node, applyBlock) {\n  var value = applyBlock ? 'paused' : '';\n  var key = ANIMATION_PROP + ANIMATION_PLAYSTATE_KEY;\n  applyInlineStyle(node, [key, value]);\n  return [key, value];\n}\n\nfunction applyInlineStyle(node, styleTuple) {\n  var prop = styleTuple[0];\n  var value = styleTuple[1];\n  node.style[prop] = value;\n}\n\nfunction concatWithSpace(a,b) {\n  if (!a) return b;\n  if (!b) return a;\n  return a + ' ' + b;\n}\n\nvar $$rAFSchedulerFactory = ['$$rAF', function($$rAF) {\n  var queue, cancelFn;\n\n  function scheduler(tasks) {\n    // we make a copy since RAFScheduler mutates the state\n    // of the passed in array variable and this would be difficult\n    // to track down on the outside code\n    queue = queue.concat(tasks);\n    nextTick();\n  }\n\n  queue = scheduler.queue = [];\n\n  /* waitUntilQuiet does two things:\n   * 1. It will run the FINAL `fn` value only when an uncanceled RAF has passed through\n   * 2. It will delay the next wave of tasks from running until the quiet `fn` has run.\n   *\n   * The motivation here is that animation code can request more time from the scheduler\n   * before the next wave runs. This allows for certain DOM properties such as classes to\n   * be resolved in time for the next animation to run.\n   */\n  scheduler.waitUntilQuiet = function(fn) {\n    if (cancelFn) cancelFn();\n\n    cancelFn = $$rAF(function() {\n      cancelFn = null;\n      fn();\n      nextTick();\n    });\n  };\n\n  return scheduler;\n\n  function nextTick() {\n    if (!queue.length) return;\n\n    var items = queue.shift();\n    for (var i = 0; i < items.length; i++) {\n      items[i]();\n    }\n\n    if (!cancelFn) {\n      $$rAF(function() {\n        if (!cancelFn) nextTick();\n      });\n    }\n  }\n}];\n\n/**\n * @ngdoc directive\n * @name ngAnimateChildren\n * @restrict AE\n * @element ANY\n *\n * @description\n *\n * ngAnimateChildren allows you to specify that children of this element should animate even if any\n * of the children's parents are currently animating. By default, when an element has an active `enter`, `leave`, or `move`\n * (structural) animation, child elements that also have an active structural animation are not animated.\n *\n * Note that even if `ngAnimteChildren` is set, no child animations will run when the parent element is removed from the DOM (`leave` animation).\n *\n *\n * @param {string} ngAnimateChildren If the value is empty, `true` or `on`,\n *     then child animations are allowed. If the value is `false`, child animations are not allowed.\n *\n * @example\n * <example module=\"ngAnimateChildren\" name=\"ngAnimateChildren\" deps=\"angular-animate.js\" animations=\"true\">\n     <file name=\"index.html\">\n       <div ng-controller=\"mainController as main\">\n         <label>Show container? <input type=\"checkbox\" ng-model=\"main.enterElement\" /></label>\n         <label>Animate children? <input type=\"checkbox\" ng-model=\"main.animateChildren\" /></label>\n         <hr>\n         <div ng-animate-children=\"{{main.animateChildren}}\">\n           <div ng-if=\"main.enterElement\" class=\"container\">\n             List of items:\n             <div ng-repeat=\"item in [0, 1, 2, 3]\" class=\"item\">Item {{item}}</div>\n           </div>\n         </div>\n       </div>\n     </file>\n     <file name=\"animations.css\">\n\n      .container.ng-enter,\n      .container.ng-leave {\n        transition: all ease 1.5s;\n      }\n\n      .container.ng-enter,\n      .container.ng-leave-active {\n        opacity: 0;\n      }\n\n      .container.ng-leave,\n      .container.ng-enter-active {\n        opacity: 1;\n      }\n\n      .item {\n        background: firebrick;\n        color: #FFF;\n        margin-bottom: 10px;\n      }\n\n      .item.ng-enter,\n      .item.ng-leave {\n        transition: transform 1.5s ease;\n      }\n\n      .item.ng-enter {\n        transform: translateX(50px);\n      }\n\n      .item.ng-enter-active {\n        transform: translateX(0);\n      }\n    </file>\n    <file name=\"script.js\">\n      angular.module('ngAnimateChildren', ['ngAnimate'])\n        .controller('mainController', function() {\n          this.animateChildren = false;\n          this.enterElement = false;\n        });\n    </file>\n  </example>\n */\nvar $$AnimateChildrenDirective = ['$interpolate', function($interpolate) {\n  return {\n    link: function(scope, element, attrs) {\n      var val = attrs.ngAnimateChildren;\n      if (angular.isString(val) && val.length === 0) { //empty attribute\n        element.data(NG_ANIMATE_CHILDREN_DATA, true);\n      } else {\n        // Interpolate and set the value, so that it is available to\n        // animations that run right after compilation\n        setData($interpolate(val)(scope));\n        attrs.$observe('ngAnimateChildren', setData);\n      }\n\n      function setData(value) {\n        value = value === 'on' || value === 'true';\n        element.data(NG_ANIMATE_CHILDREN_DATA, value);\n      }\n    }\n  };\n}];\n\nvar ANIMATE_TIMER_KEY = '$$animateCss';\n\n/**\n * @ngdoc service\n * @name $animateCss\n * @kind object\n *\n * @description\n * The `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes\n * from a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT\n * to side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or\n * directives to create more complex animations that can be purely driven using CSS code.\n *\n * Note that only browsers that support CSS transitions and/or keyframe animations are capable of\n * rendering animations triggered via `$animateCss` (bad news for IE9 and lower).\n *\n * ## Usage\n * Once again, `$animateCss` is designed to be used inside of a registered JavaScript animation that\n * is powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,\n * any automatic control over cancelling animations and/or preventing animations from being run on\n * child elements will not be handled by Angular. For this to work as expected, please use `$animate` to\n * trigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger\n * the CSS animation.\n *\n * The example below shows how we can create a folding animation on an element using `ng-if`:\n *\n * ```html\n * <!-- notice the `fold-animation` CSS class -->\n * <div ng-if=\"onOff\" class=\"fold-animation\">\n *   This element will go BOOM\n * </div>\n * <button ng-click=\"onOff=true\">Fold In</button>\n * ```\n *\n * Now we create the **JavaScript animation** that will trigger the CSS transition:\n *\n * ```js\n * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element, doneFn) {\n *       var height = element[0].offsetHeight;\n *       return $animateCss(element, {\n *         from: { height:'0px' },\n *         to: { height:height + 'px' },\n *         duration: 1 // one second\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * ## More Advanced Uses\n *\n * `$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks\n * like `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.\n *\n * This also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,\n * applying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with\n * `$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order\n * to provide a working animation that will run in CSS.\n *\n * The example below showcases a more advanced version of the `.fold-animation` from the example above:\n *\n * ```js\n * ngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element, doneFn) {\n *       var height = element[0].offsetHeight;\n *       return $animateCss(element, {\n *         addClass: 'red large-text pulse-twice',\n *         easing: 'ease-out',\n *         from: { height:'0px' },\n *         to: { height:height + 'px' },\n *         duration: 1 // one second\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * Since we're adding/removing CSS classes then the CSS transition will also pick those up:\n *\n * ```css\n * /&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,\n * the CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/\n * .red { background:red; }\n * .large-text { font-size:20px; }\n *\n * /&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/\n * .pulse-twice {\n *   animation: 0.5s pulse linear 2;\n *   -webkit-animation: 0.5s pulse linear 2;\n * }\n *\n * @keyframes pulse {\n *   from { transform: scale(0.5); }\n *   to { transform: scale(1.5); }\n * }\n *\n * @-webkit-keyframes pulse {\n *   from { -webkit-transform: scale(0.5); }\n *   to { -webkit-transform: scale(1.5); }\n * }\n * ```\n *\n * Given this complex combination of CSS classes, styles and options, `$animateCss` will figure everything out and make the animation happen.\n *\n * ## How the Options are handled\n *\n * `$animateCss` is very versatile and intelligent when it comes to figuring out what configurations to apply to the element to ensure the animation\n * works with the options provided. Say for example we were adding a class that contained a keyframe value and we wanted to also animate some inline\n * styles using the `from` and `to` properties.\n *\n * ```js\n * var animator = $animateCss(element, {\n *   from: { background:'red' },\n *   to: { background:'blue' }\n * });\n * animator.start();\n * ```\n *\n * ```css\n * .rotating-animation {\n *   animation:0.5s rotate linear;\n *   -webkit-animation:0.5s rotate linear;\n * }\n *\n * @keyframes rotate {\n *   from { transform: rotate(0deg); }\n *   to { transform: rotate(360deg); }\n * }\n *\n * @-webkit-keyframes rotate {\n *   from { -webkit-transform: rotate(0deg); }\n *   to { -webkit-transform: rotate(360deg); }\n * }\n * ```\n *\n * The missing pieces here are that we do not have a transition set (within the CSS code nor within the `$animateCss` options) and the duration of the animation is\n * going to be detected from what the keyframe styles on the CSS class are. In this event, `$animateCss` will automatically create an inline transition\n * style matching the duration detected from the keyframe style (which is present in the CSS class that is being added) and then prepare both the transition\n * and keyframe animations to run in parallel on the element. Then when the animation is underway the provided `from` and `to` CSS styles will be applied\n * and spread across the transition and keyframe animation.\n *\n * ## What is returned\n *\n * `$animateCss` works in two stages: a preparation phase and an animation phase. Therefore when `$animateCss` is first called it will NOT actually\n * start the animation. All that is going on here is that the element is being prepared for the animation (which means that the generated CSS classes are\n * added and removed on the element). Once `$animateCss` is called it will return an object with the following properties:\n *\n * ```js\n * var animator = $animateCss(element, { ... });\n * ```\n *\n * Now what do the contents of our `animator` variable look like:\n *\n * ```js\n * {\n *   // starts the animation\n *   start: Function,\n *\n *   // ends (aborts) the animation\n *   end: Function\n * }\n * ```\n *\n * To actually start the animation we need to run `animation.start()` which will then return a promise that we can hook into to detect when the animation ends.\n * If we choose not to run the animation then we MUST run `animation.end()` to perform a cleanup on the element (since some CSS classes and styles may have been\n * applied to the element during the preparation phase). Note that all other properties such as duration, delay, transitions and keyframes are just properties\n * and that changing them will not reconfigure the parameters of the animation.\n *\n * ### runner.done() vs runner.then()\n * It is documented that `animation.start()` will return a promise object and this is true, however, there is also an additional method available on the\n * runner called `.done(callbackFn)`. The done method works the same as `.finally(callbackFn)`, however, it does **not trigger a digest to occur**.\n * Therefore, for performance reasons, it's always best to use `runner.done(callback)` instead of `runner.then()`, `runner.catch()` or `runner.finally()`\n * unless you really need a digest to kick off afterwards.\n *\n * Keep in mind that, to make this easier, ngAnimate has tweaked the JS animations API to recognize when a runner instance is returned from $animateCss\n * (so there is no need to call `runner.done(doneFn)` inside of your JavaScript animation code).\n * Check the {@link ngAnimate.$animateCss#usage animation code above} to see how this works.\n *\n * @param {DOMElement} element the element that will be animated\n * @param {object} options the animation-related options that will be applied during the animation\n *\n * * `event` - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of `ng-EVENT` and `ng-EVENT-active` will be applied\n * to the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)\n * * `structural` - Indicates that the `ng-` prefix will be added to the event class. Setting to `false` or omitting will turn `ng-EVENT` and\n * `ng-EVENT-active` in `EVENT` and `EVENT-active`. Unused if `event` is omitted.\n * * `easing` - The CSS easing value that will be applied to the transition or keyframe animation (or both).\n * * `transitionStyle` - The raw CSS transition style that will be used (e.g. `1s linear all`).\n * * `keyframeStyle` - The raw CSS keyframe animation style that will be used (e.g. `1s my_animation linear`).\n * * `from` - The starting CSS styles (a key/value object) that will be applied at the start of the animation.\n * * `to` - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.\n * * `addClass` - A space separated list of CSS classes that will be added to the element and spread across the animation.\n * * `removeClass` - A space separated list of CSS classes that will be removed from the element and spread across the animation.\n * * `duration` - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `0`\n * is provided then the animation will be skipped entirely.\n * * `delay` - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `true` is\n * used then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value\n * of the element will be `transition-delay: DETECTED_VALUE`). Using `true` is useful when you want the CSS classes and inline styles to all share the same\n * CSS delay value.\n * * `stagger` - A numeric time value representing the delay between successively animated elements\n * ({@link ngAnimate#css-staggering-animations Click here to learn how CSS-based staggering works in ngAnimate.})\n * * `staggerIndex` - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a\n *   `stagger` option value of `0.1` is used then there will be a stagger delay of `600ms`)\n * * `applyClassesEarly` - Whether or not the classes being added or removed will be used when detecting the animation. This is set by `$animate` when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)\n * * `cleanupStyles` - Whether or not the provided `from` and `to` styles will be removed once\n *    the animation is closed. This is useful for when the styles are used purely for the sake of\n *    the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation).\n *    By default this value is set to `false`.\n *\n * @return {object} an object with start and end methods and details about the animation.\n *\n * * `start` - The method to start the animation. This will return a `Promise` when called.\n * * `end` - This method will cancel the animation and remove all applied CSS classes and styles.\n */\nvar ONE_SECOND = 1000;\nvar BASE_TEN = 10;\n\nvar ELAPSED_TIME_MAX_DECIMAL_PLACES = 3;\nvar CLOSING_TIME_BUFFER = 1.5;\n\nvar DETECT_CSS_PROPERTIES = {\n  transitionDuration:      TRANSITION_DURATION_PROP,\n  transitionDelay:         TRANSITION_DELAY_PROP,\n  transitionProperty:      TRANSITION_PROP + PROPERTY_KEY,\n  animationDuration:       ANIMATION_DURATION_PROP,\n  animationDelay:          ANIMATION_DELAY_PROP,\n  animationIterationCount: ANIMATION_PROP + ANIMATION_ITERATION_COUNT_KEY\n};\n\nvar DETECT_STAGGER_CSS_PROPERTIES = {\n  transitionDuration:      TRANSITION_DURATION_PROP,\n  transitionDelay:         TRANSITION_DELAY_PROP,\n  animationDuration:       ANIMATION_DURATION_PROP,\n  animationDelay:          ANIMATION_DELAY_PROP\n};\n\nfunction getCssKeyframeDurationStyle(duration) {\n  return [ANIMATION_DURATION_PROP, duration + 's'];\n}\n\nfunction getCssDelayStyle(delay, isKeyframeAnimation) {\n  var prop = isKeyframeAnimation ? ANIMATION_DELAY_PROP : TRANSITION_DELAY_PROP;\n  return [prop, delay + 's'];\n}\n\nfunction computeCssStyles($window, element, properties) {\n  var styles = Object.create(null);\n  var detectedStyles = $window.getComputedStyle(element) || {};\n  forEach(properties, function(formalStyleName, actualStyleName) {\n    var val = detectedStyles[formalStyleName];\n    if (val) {\n      var c = val.charAt(0);\n\n      // only numerical-based values have a negative sign or digit as the first value\n      if (c === '-' || c === '+' || c >= 0) {\n        val = parseMaxTime(val);\n      }\n\n      // by setting this to null in the event that the delay is not set or is set directly as 0\n      // then we can still allow for negative values to be used later on and not mistake this\n      // value for being greater than any other negative value.\n      if (val === 0) {\n        val = null;\n      }\n      styles[actualStyleName] = val;\n    }\n  });\n\n  return styles;\n}\n\nfunction parseMaxTime(str) {\n  var maxValue = 0;\n  var values = str.split(/\\s*,\\s*/);\n  forEach(values, function(value) {\n    // it's always safe to consider only second values and omit `ms` values since\n    // getComputedStyle will always handle the conversion for us\n    if (value.charAt(value.length - 1) == 's') {\n      value = value.substring(0, value.length - 1);\n    }\n    value = parseFloat(value) || 0;\n    maxValue = maxValue ? Math.max(value, maxValue) : value;\n  });\n  return maxValue;\n}\n\nfunction truthyTimingValue(val) {\n  return val === 0 || val != null;\n}\n\nfunction getCssTransitionDurationStyle(duration, applyOnlyDuration) {\n  var style = TRANSITION_PROP;\n  var value = duration + 's';\n  if (applyOnlyDuration) {\n    style += DURATION_KEY;\n  } else {\n    value += ' linear all';\n  }\n  return [style, value];\n}\n\nfunction createLocalCacheLookup() {\n  var cache = Object.create(null);\n  return {\n    flush: function() {\n      cache = Object.create(null);\n    },\n\n    count: function(key) {\n      var entry = cache[key];\n      return entry ? entry.total : 0;\n    },\n\n    get: function(key) {\n      var entry = cache[key];\n      return entry && entry.value;\n    },\n\n    put: function(key, value) {\n      if (!cache[key]) {\n        cache[key] = { total: 1, value: value };\n      } else {\n        cache[key].total++;\n      }\n    }\n  };\n}\n\n// we do not reassign an already present style value since\n// if we detect the style property value again we may be\n// detecting styles that were added via the `from` styles.\n// We make use of `isDefined` here since an empty string\n// or null value (which is what getPropertyValue will return\n// for a non-existing style) will still be marked as a valid\n// value for the style (a falsy value implies that the style\n// is to be removed at the end of the animation). If we had a simple\n// \"OR\" statement then it would not be enough to catch that.\nfunction registerRestorableStyles(backup, node, properties) {\n  forEach(properties, function(prop) {\n    backup[prop] = isDefined(backup[prop])\n        ? backup[prop]\n        : node.style.getPropertyValue(prop);\n  });\n}\n\nvar $AnimateCssProvider = ['$animateProvider', function($animateProvider) {\n  var gcsLookup = createLocalCacheLookup();\n  var gcsStaggerLookup = createLocalCacheLookup();\n\n  this.$get = ['$window', '$$jqLite', '$$AnimateRunner', '$timeout',\n               '$$forceReflow', '$sniffer', '$$rAFScheduler', '$$animateQueue',\n       function($window,   $$jqLite,   $$AnimateRunner,   $timeout,\n                $$forceReflow,   $sniffer,   $$rAFScheduler, $$animateQueue) {\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    var parentCounter = 0;\n    function gcsHashFn(node, extraClasses) {\n      var KEY = \"$$ngAnimateParentKey\";\n      var parentNode = node.parentNode;\n      var parentID = parentNode[KEY] || (parentNode[KEY] = ++parentCounter);\n      return parentID + '-' + node.getAttribute('class') + '-' + extraClasses;\n    }\n\n    function computeCachedCssStyles(node, className, cacheKey, properties) {\n      var timings = gcsLookup.get(cacheKey);\n\n      if (!timings) {\n        timings = computeCssStyles($window, node, properties);\n        if (timings.animationIterationCount === 'infinite') {\n          timings.animationIterationCount = 1;\n        }\n      }\n\n      // we keep putting this in multiple times even though the value and the cacheKey are the same\n      // because we're keeping an internal tally of how many duplicate animations are detected.\n      gcsLookup.put(cacheKey, timings);\n      return timings;\n    }\n\n    function computeCachedCssStaggerStyles(node, className, cacheKey, properties) {\n      var stagger;\n\n      // if we have one or more existing matches of matching elements\n      // containing the same parent + CSS styles (which is how cacheKey works)\n      // then staggering is possible\n      if (gcsLookup.count(cacheKey) > 0) {\n        stagger = gcsStaggerLookup.get(cacheKey);\n\n        if (!stagger) {\n          var staggerClassName = pendClasses(className, '-stagger');\n\n          $$jqLite.addClass(node, staggerClassName);\n\n          stagger = computeCssStyles($window, node, properties);\n\n          // force the conversion of a null value to zero incase not set\n          stagger.animationDuration = Math.max(stagger.animationDuration, 0);\n          stagger.transitionDuration = Math.max(stagger.transitionDuration, 0);\n\n          $$jqLite.removeClass(node, staggerClassName);\n\n          gcsStaggerLookup.put(cacheKey, stagger);\n        }\n      }\n\n      return stagger || {};\n    }\n\n    var cancelLastRAFRequest;\n    var rafWaitQueue = [];\n    function waitUntilQuiet(callback) {\n      rafWaitQueue.push(callback);\n      $$rAFScheduler.waitUntilQuiet(function() {\n        gcsLookup.flush();\n        gcsStaggerLookup.flush();\n\n        // DO NOT REMOVE THIS LINE OR REFACTOR OUT THE `pageWidth` variable.\n        // PLEASE EXAMINE THE `$$forceReflow` service to understand why.\n        var pageWidth = $$forceReflow();\n\n        // we use a for loop to ensure that if the queue is changed\n        // during this looping then it will consider new requests\n        for (var i = 0; i < rafWaitQueue.length; i++) {\n          rafWaitQueue[i](pageWidth);\n        }\n        rafWaitQueue.length = 0;\n      });\n    }\n\n    function computeTimings(node, className, cacheKey) {\n      var timings = computeCachedCssStyles(node, className, cacheKey, DETECT_CSS_PROPERTIES);\n      var aD = timings.animationDelay;\n      var tD = timings.transitionDelay;\n      timings.maxDelay = aD && tD\n          ? Math.max(aD, tD)\n          : (aD || tD);\n      timings.maxDuration = Math.max(\n          timings.animationDuration * timings.animationIterationCount,\n          timings.transitionDuration);\n\n      return timings;\n    }\n\n    return function init(element, initialOptions) {\n      // all of the animation functions should create\n      // a copy of the options data, however, if a\n      // parent service has already created a copy then\n      // we should stick to using that\n      var options = initialOptions || {};\n      if (!options.$$prepared) {\n        options = prepareAnimationOptions(copy(options));\n      }\n\n      var restoreStyles = {};\n      var node = getDomNode(element);\n      if (!node\n          || !node.parentNode\n          || !$$animateQueue.enabled()) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var temporaryStyles = [];\n      var classes = element.attr('class');\n      var styles = packageStyles(options);\n      var animationClosed;\n      var animationPaused;\n      var animationCompleted;\n      var runner;\n      var runnerHost;\n      var maxDelay;\n      var maxDelayTime;\n      var maxDuration;\n      var maxDurationTime;\n      var startTime;\n      var events = [];\n\n      if (options.duration === 0 || (!$sniffer.animations && !$sniffer.transitions)) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var method = options.event && isArray(options.event)\n            ? options.event.join(' ')\n            : options.event;\n\n      var isStructural = method && options.structural;\n      var structuralClassName = '';\n      var addRemoveClassName = '';\n\n      if (isStructural) {\n        structuralClassName = pendClasses(method, EVENT_CLASS_PREFIX, true);\n      } else if (method) {\n        structuralClassName = method;\n      }\n\n      if (options.addClass) {\n        addRemoveClassName += pendClasses(options.addClass, ADD_CLASS_SUFFIX);\n      }\n\n      if (options.removeClass) {\n        if (addRemoveClassName.length) {\n          addRemoveClassName += ' ';\n        }\n        addRemoveClassName += pendClasses(options.removeClass, REMOVE_CLASS_SUFFIX);\n      }\n\n      // there may be a situation where a structural animation is combined together\n      // with CSS classes that need to resolve before the animation is computed.\n      // However this means that there is no explicit CSS code to block the animation\n      // from happening (by setting 0s none in the class name). If this is the case\n      // we need to apply the classes before the first rAF so we know to continue if\n      // there actually is a detected transition or keyframe animation\n      if (options.applyClassesEarly && addRemoveClassName.length) {\n        applyAnimationClasses(element, options);\n      }\n\n      var preparationClasses = [structuralClassName, addRemoveClassName].join(' ').trim();\n      var fullClassName = classes + ' ' + preparationClasses;\n      var activeClasses = pendClasses(preparationClasses, ACTIVE_CLASS_SUFFIX);\n      var hasToStyles = styles.to && Object.keys(styles.to).length > 0;\n      var containsKeyframeAnimation = (options.keyframeStyle || '').length > 0;\n\n      // there is no way we can trigger an animation if no styles and\n      // no classes are being applied which would then trigger a transition,\n      // unless there a is raw keyframe value that is applied to the element.\n      if (!containsKeyframeAnimation\n           && !hasToStyles\n           && !preparationClasses) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      var cacheKey, stagger;\n      if (options.stagger > 0) {\n        var staggerVal = parseFloat(options.stagger);\n        stagger = {\n          transitionDelay: staggerVal,\n          animationDelay: staggerVal,\n          transitionDuration: 0,\n          animationDuration: 0\n        };\n      } else {\n        cacheKey = gcsHashFn(node, fullClassName);\n        stagger = computeCachedCssStaggerStyles(node, preparationClasses, cacheKey, DETECT_STAGGER_CSS_PROPERTIES);\n      }\n\n      if (!options.$$skipPreparationClasses) {\n        $$jqLite.addClass(element, preparationClasses);\n      }\n\n      var applyOnlyDuration;\n\n      if (options.transitionStyle) {\n        var transitionStyle = [TRANSITION_PROP, options.transitionStyle];\n        applyInlineStyle(node, transitionStyle);\n        temporaryStyles.push(transitionStyle);\n      }\n\n      if (options.duration >= 0) {\n        applyOnlyDuration = node.style[TRANSITION_PROP].length > 0;\n        var durationStyle = getCssTransitionDurationStyle(options.duration, applyOnlyDuration);\n\n        // we set the duration so that it will be picked up by getComputedStyle later\n        applyInlineStyle(node, durationStyle);\n        temporaryStyles.push(durationStyle);\n      }\n\n      if (options.keyframeStyle) {\n        var keyframeStyle = [ANIMATION_PROP, options.keyframeStyle];\n        applyInlineStyle(node, keyframeStyle);\n        temporaryStyles.push(keyframeStyle);\n      }\n\n      var itemIndex = stagger\n          ? options.staggerIndex >= 0\n              ? options.staggerIndex\n              : gcsLookup.count(cacheKey)\n          : 0;\n\n      var isFirst = itemIndex === 0;\n\n      // this is a pre-emptive way of forcing the setup classes to be added and applied INSTANTLY\n      // without causing any combination of transitions to kick in. By adding a negative delay value\n      // it forces the setup class' transition to end immediately. We later then remove the negative\n      // transition delay to allow for the transition to naturally do it's thing. The beauty here is\n      // that if there is no transition defined then nothing will happen and this will also allow\n      // other transitions to be stacked on top of each other without any chopping them out.\n      if (isFirst && !options.skipBlocking) {\n        blockTransitions(node, SAFE_FAST_FORWARD_DURATION_VALUE);\n      }\n\n      var timings = computeTimings(node, fullClassName, cacheKey);\n      var relativeDelay = timings.maxDelay;\n      maxDelay = Math.max(relativeDelay, 0);\n      maxDuration = timings.maxDuration;\n\n      var flags = {};\n      flags.hasTransitions          = timings.transitionDuration > 0;\n      flags.hasAnimations           = timings.animationDuration > 0;\n      flags.hasTransitionAll        = flags.hasTransitions && timings.transitionProperty == 'all';\n      flags.applyTransitionDuration = hasToStyles && (\n                                        (flags.hasTransitions && !flags.hasTransitionAll)\n                                         || (flags.hasAnimations && !flags.hasTransitions));\n      flags.applyAnimationDuration  = options.duration && flags.hasAnimations;\n      flags.applyTransitionDelay    = truthyTimingValue(options.delay) && (flags.applyTransitionDuration || flags.hasTransitions);\n      flags.applyAnimationDelay     = truthyTimingValue(options.delay) && flags.hasAnimations;\n      flags.recalculateTimingStyles = addRemoveClassName.length > 0;\n\n      if (flags.applyTransitionDuration || flags.applyAnimationDuration) {\n        maxDuration = options.duration ? parseFloat(options.duration) : maxDuration;\n\n        if (flags.applyTransitionDuration) {\n          flags.hasTransitions = true;\n          timings.transitionDuration = maxDuration;\n          applyOnlyDuration = node.style[TRANSITION_PROP + PROPERTY_KEY].length > 0;\n          temporaryStyles.push(getCssTransitionDurationStyle(maxDuration, applyOnlyDuration));\n        }\n\n        if (flags.applyAnimationDuration) {\n          flags.hasAnimations = true;\n          timings.animationDuration = maxDuration;\n          temporaryStyles.push(getCssKeyframeDurationStyle(maxDuration));\n        }\n      }\n\n      if (maxDuration === 0 && !flags.recalculateTimingStyles) {\n        return closeAndReturnNoopAnimator();\n      }\n\n      if (options.delay != null) {\n        var delayStyle;\n        if (typeof options.delay !== \"boolean\") {\n          delayStyle = parseFloat(options.delay);\n          // number in options.delay means we have to recalculate the delay for the closing timeout\n          maxDelay = Math.max(delayStyle, 0);\n        }\n\n        if (flags.applyTransitionDelay) {\n          temporaryStyles.push(getCssDelayStyle(delayStyle));\n        }\n\n        if (flags.applyAnimationDelay) {\n          temporaryStyles.push(getCssDelayStyle(delayStyle, true));\n        }\n      }\n\n      // we need to recalculate the delay value since we used a pre-emptive negative\n      // delay value and the delay value is required for the final event checking. This\n      // property will ensure that this will happen after the RAF phase has passed.\n      if (options.duration == null && timings.transitionDuration > 0) {\n        flags.recalculateTimingStyles = flags.recalculateTimingStyles || isFirst;\n      }\n\n      maxDelayTime = maxDelay * ONE_SECOND;\n      maxDurationTime = maxDuration * ONE_SECOND;\n      if (!options.skipBlocking) {\n        flags.blockTransition = timings.transitionDuration > 0;\n        flags.blockKeyframeAnimation = timings.animationDuration > 0 &&\n                                       stagger.animationDelay > 0 &&\n                                       stagger.animationDuration === 0;\n      }\n\n      if (options.from) {\n        if (options.cleanupStyles) {\n          registerRestorableStyles(restoreStyles, node, Object.keys(options.from));\n        }\n        applyAnimationFromStyles(element, options);\n      }\n\n      if (flags.blockTransition || flags.blockKeyframeAnimation) {\n        applyBlocking(maxDuration);\n      } else if (!options.skipBlocking) {\n        blockTransitions(node, false);\n      }\n\n      // TODO(matsko): for 1.5 change this code to have an animator object for better debugging\n      return {\n        $$willAnimate: true,\n        end: endFn,\n        start: function() {\n          if (animationClosed) return;\n\n          runnerHost = {\n            end: endFn,\n            cancel: cancelFn,\n            resume: null, //this will be set during the start() phase\n            pause: null\n          };\n\n          runner = new $$AnimateRunner(runnerHost);\n\n          waitUntilQuiet(start);\n\n          // we don't have access to pause/resume the animation\n          // since it hasn't run yet. AnimateRunner will therefore\n          // set noop functions for resume and pause and they will\n          // later be overridden once the animation is triggered\n          return runner;\n        }\n      };\n\n      function endFn() {\n        close();\n      }\n\n      function cancelFn() {\n        close(true);\n      }\n\n      function close(rejected) { // jshint ignore:line\n        // if the promise has been called already then we shouldn't close\n        // the animation again\n        if (animationClosed || (animationCompleted && animationPaused)) return;\n        animationClosed = true;\n        animationPaused = false;\n\n        if (!options.$$skipPreparationClasses) {\n          $$jqLite.removeClass(element, preparationClasses);\n        }\n        $$jqLite.removeClass(element, activeClasses);\n\n        blockKeyframeAnimations(node, false);\n        blockTransitions(node, false);\n\n        forEach(temporaryStyles, function(entry) {\n          // There is only one way to remove inline style properties entirely from elements.\n          // By using `removeProperty` this works, but we need to convert camel-cased CSS\n          // styles down to hyphenated values.\n          node.style[entry[0]] = '';\n        });\n\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n\n        if (Object.keys(restoreStyles).length) {\n          forEach(restoreStyles, function(value, prop) {\n            value ? node.style.setProperty(prop, value)\n                  : node.style.removeProperty(prop);\n          });\n        }\n\n        // the reason why we have this option is to allow a synchronous closing callback\n        // that is fired as SOON as the animation ends (when the CSS is removed) or if\n        // the animation never takes off at all. A good example is a leave animation since\n        // the element must be removed just after the animation is over or else the element\n        // will appear on screen for one animation frame causing an overbearing flicker.\n        if (options.onDone) {\n          options.onDone();\n        }\n\n        if (events && events.length) {\n          // Remove the transitionend / animationend listener(s)\n          element.off(events.join(' '), onAnimationProgress);\n        }\n\n        //Cancel the fallback closing timeout and remove the timer data\n        var animationTimerData = element.data(ANIMATE_TIMER_KEY);\n        if (animationTimerData) {\n          $timeout.cancel(animationTimerData[0].timer);\n          element.removeData(ANIMATE_TIMER_KEY);\n        }\n\n        // if the preparation function fails then the promise is not setup\n        if (runner) {\n          runner.complete(!rejected);\n        }\n      }\n\n      function applyBlocking(duration) {\n        if (flags.blockTransition) {\n          blockTransitions(node, duration);\n        }\n\n        if (flags.blockKeyframeAnimation) {\n          blockKeyframeAnimations(node, !!duration);\n        }\n      }\n\n      function closeAndReturnNoopAnimator() {\n        runner = new $$AnimateRunner({\n          end: endFn,\n          cancel: cancelFn\n        });\n\n        // should flush the cache animation\n        waitUntilQuiet(noop);\n        close();\n\n        return {\n          $$willAnimate: false,\n          start: function() {\n            return runner;\n          },\n          end: endFn\n        };\n      }\n\n      function onAnimationProgress(event) {\n        event.stopPropagation();\n        var ev = event.originalEvent || event;\n\n        // we now always use `Date.now()` due to the recent changes with\n        // event.timeStamp in Firefox, Webkit and Chrome (see #13494 for more info)\n        var timeStamp = ev.$manualTimeStamp || Date.now();\n\n        /* Firefox (or possibly just Gecko) likes to not round values up\n         * when a ms measurement is used for the animation */\n        var elapsedTime = parseFloat(ev.elapsedTime.toFixed(ELAPSED_TIME_MAX_DECIMAL_PLACES));\n\n        /* $manualTimeStamp is a mocked timeStamp value which is set\n         * within browserTrigger(). This is only here so that tests can\n         * mock animations properly. Real events fallback to event.timeStamp,\n         * or, if they don't, then a timeStamp is automatically created for them.\n         * We're checking to see if the timeStamp surpasses the expected delay,\n         * but we're using elapsedTime instead of the timeStamp on the 2nd\n         * pre-condition since animationPauseds sometimes close off early */\n        if (Math.max(timeStamp - startTime, 0) >= maxDelayTime && elapsedTime >= maxDuration) {\n          // we set this flag to ensure that if the transition is paused then, when resumed,\n          // the animation will automatically close itself since transitions cannot be paused.\n          animationCompleted = true;\n          close();\n        }\n      }\n\n      function start() {\n        if (animationClosed) return;\n        if (!node.parentNode) {\n          close();\n          return;\n        }\n\n        // even though we only pause keyframe animations here the pause flag\n        // will still happen when transitions are used. Only the transition will\n        // not be paused since that is not possible. If the animation ends when\n        // paused then it will not complete until unpaused or cancelled.\n        var playPause = function(playAnimation) {\n          if (!animationCompleted) {\n            animationPaused = !playAnimation;\n            if (timings.animationDuration) {\n              var value = blockKeyframeAnimations(node, animationPaused);\n              animationPaused\n                  ? temporaryStyles.push(value)\n                  : removeFromArray(temporaryStyles, value);\n            }\n          } else if (animationPaused && playAnimation) {\n            animationPaused = false;\n            close();\n          }\n        };\n\n        // checking the stagger duration prevents an accidentally cascade of the CSS delay style\n        // being inherited from the parent. If the transition duration is zero then we can safely\n        // rely that the delay value is an intentional stagger delay style.\n        var maxStagger = itemIndex > 0\n                         && ((timings.transitionDuration && stagger.transitionDuration === 0) ||\n                            (timings.animationDuration && stagger.animationDuration === 0))\n                         && Math.max(stagger.animationDelay, stagger.transitionDelay);\n        if (maxStagger) {\n          $timeout(triggerAnimationStart,\n                   Math.floor(maxStagger * itemIndex * ONE_SECOND),\n                   false);\n        } else {\n          triggerAnimationStart();\n        }\n\n        // this will decorate the existing promise runner with pause/resume methods\n        runnerHost.resume = function() {\n          playPause(true);\n        };\n\n        runnerHost.pause = function() {\n          playPause(false);\n        };\n\n        function triggerAnimationStart() {\n          // just incase a stagger animation kicks in when the animation\n          // itself was cancelled entirely\n          if (animationClosed) return;\n\n          applyBlocking(false);\n\n          forEach(temporaryStyles, function(entry) {\n            var key = entry[0];\n            var value = entry[1];\n            node.style[key] = value;\n          });\n\n          applyAnimationClasses(element, options);\n          $$jqLite.addClass(element, activeClasses);\n\n          if (flags.recalculateTimingStyles) {\n            fullClassName = node.className + ' ' + preparationClasses;\n            cacheKey = gcsHashFn(node, fullClassName);\n\n            timings = computeTimings(node, fullClassName, cacheKey);\n            relativeDelay = timings.maxDelay;\n            maxDelay = Math.max(relativeDelay, 0);\n            maxDuration = timings.maxDuration;\n\n            if (maxDuration === 0) {\n              close();\n              return;\n            }\n\n            flags.hasTransitions = timings.transitionDuration > 0;\n            flags.hasAnimations = timings.animationDuration > 0;\n          }\n\n          if (flags.applyAnimationDelay) {\n            relativeDelay = typeof options.delay !== \"boolean\" && truthyTimingValue(options.delay)\n                  ? parseFloat(options.delay)\n                  : relativeDelay;\n\n            maxDelay = Math.max(relativeDelay, 0);\n            timings.animationDelay = relativeDelay;\n            delayStyle = getCssDelayStyle(relativeDelay, true);\n            temporaryStyles.push(delayStyle);\n            node.style[delayStyle[0]] = delayStyle[1];\n          }\n\n          maxDelayTime = maxDelay * ONE_SECOND;\n          maxDurationTime = maxDuration * ONE_SECOND;\n\n          if (options.easing) {\n            var easeProp, easeVal = options.easing;\n            if (flags.hasTransitions) {\n              easeProp = TRANSITION_PROP + TIMING_KEY;\n              temporaryStyles.push([easeProp, easeVal]);\n              node.style[easeProp] = easeVal;\n            }\n            if (flags.hasAnimations) {\n              easeProp = ANIMATION_PROP + TIMING_KEY;\n              temporaryStyles.push([easeProp, easeVal]);\n              node.style[easeProp] = easeVal;\n            }\n          }\n\n          if (timings.transitionDuration) {\n            events.push(TRANSITIONEND_EVENT);\n          }\n\n          if (timings.animationDuration) {\n            events.push(ANIMATIONEND_EVENT);\n          }\n\n          startTime = Date.now();\n          var timerTime = maxDelayTime + CLOSING_TIME_BUFFER * maxDurationTime;\n          var endTime = startTime + timerTime;\n\n          var animationsData = element.data(ANIMATE_TIMER_KEY) || [];\n          var setupFallbackTimer = true;\n          if (animationsData.length) {\n            var currentTimerData = animationsData[0];\n            setupFallbackTimer = endTime > currentTimerData.expectedEndTime;\n            if (setupFallbackTimer) {\n              $timeout.cancel(currentTimerData.timer);\n            } else {\n              animationsData.push(close);\n            }\n          }\n\n          if (setupFallbackTimer) {\n            var timer = $timeout(onAnimationExpired, timerTime, false);\n            animationsData[0] = {\n              timer: timer,\n              expectedEndTime: endTime\n            };\n            animationsData.push(close);\n            element.data(ANIMATE_TIMER_KEY, animationsData);\n          }\n\n          if (events.length) {\n            element.on(events.join(' '), onAnimationProgress);\n          }\n\n          if (options.to) {\n            if (options.cleanupStyles) {\n              registerRestorableStyles(restoreStyles, node, Object.keys(options.to));\n            }\n            applyAnimationToStyles(element, options);\n          }\n        }\n\n        function onAnimationExpired() {\n          var animationsData = element.data(ANIMATE_TIMER_KEY);\n\n          // this will be false in the event that the element was\n          // removed from the DOM (via a leave animation or something\n          // similar)\n          if (animationsData) {\n            for (var i = 1; i < animationsData.length; i++) {\n              animationsData[i]();\n            }\n            element.removeData(ANIMATE_TIMER_KEY);\n          }\n        }\n      }\n    };\n  }];\n}];\n\nvar $$AnimateCssDriverProvider = ['$$animationProvider', function($$animationProvider) {\n  $$animationProvider.drivers.push('$$animateCssDriver');\n\n  var NG_ANIMATE_SHIM_CLASS_NAME = 'ng-animate-shim';\n  var NG_ANIMATE_ANCHOR_CLASS_NAME = 'ng-anchor';\n\n  var NG_OUT_ANCHOR_CLASS_NAME = 'ng-anchor-out';\n  var NG_IN_ANCHOR_CLASS_NAME = 'ng-anchor-in';\n\n  function isDocumentFragment(node) {\n    return node.parentNode && node.parentNode.nodeType === 11;\n  }\n\n  this.$get = ['$animateCss', '$rootScope', '$$AnimateRunner', '$rootElement', '$sniffer', '$$jqLite', '$document',\n       function($animateCss,   $rootScope,   $$AnimateRunner,   $rootElement,   $sniffer,   $$jqLite,   $document) {\n\n    // only browsers that support these properties can render animations\n    if (!$sniffer.animations && !$sniffer.transitions) return noop;\n\n    var bodyNode = $document[0].body;\n    var rootNode = getDomNode($rootElement);\n\n    var rootBodyElement = jqLite(\n      // this is to avoid using something that exists outside of the body\n      // we also special case the doc fragment case because our unit test code\n      // appends the $rootElement to the body after the app has been bootstrapped\n      isDocumentFragment(rootNode) || bodyNode.contains(rootNode) ? rootNode : bodyNode\n    );\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    return function initDriverFn(animationDetails) {\n      return animationDetails.from && animationDetails.to\n          ? prepareFromToAnchorAnimation(animationDetails.from,\n                                         animationDetails.to,\n                                         animationDetails.classes,\n                                         animationDetails.anchors)\n          : prepareRegularAnimation(animationDetails);\n    };\n\n    function filterCssClasses(classes) {\n      //remove all the `ng-` stuff\n      return classes.replace(/\\bng-\\S+\\b/g, '');\n    }\n\n    function getUniqueValues(a, b) {\n      if (isString(a)) a = a.split(' ');\n      if (isString(b)) b = b.split(' ');\n      return a.filter(function(val) {\n        return b.indexOf(val) === -1;\n      }).join(' ');\n    }\n\n    function prepareAnchoredAnimation(classes, outAnchor, inAnchor) {\n      var clone = jqLite(getDomNode(outAnchor).cloneNode(true));\n      var startingClasses = filterCssClasses(getClassVal(clone));\n\n      outAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n      inAnchor.addClass(NG_ANIMATE_SHIM_CLASS_NAME);\n\n      clone.addClass(NG_ANIMATE_ANCHOR_CLASS_NAME);\n\n      rootBodyElement.append(clone);\n\n      var animatorIn, animatorOut = prepareOutAnimation();\n\n      // the user may not end up using the `out` animation and\n      // only making use of the `in` animation or vice-versa.\n      // In either case we should allow this and not assume the\n      // animation is over unless both animations are not used.\n      if (!animatorOut) {\n        animatorIn = prepareInAnimation();\n        if (!animatorIn) {\n          return end();\n        }\n      }\n\n      var startingAnimator = animatorOut || animatorIn;\n\n      return {\n        start: function() {\n          var runner;\n\n          var currentAnimation = startingAnimator.start();\n          currentAnimation.done(function() {\n            currentAnimation = null;\n            if (!animatorIn) {\n              animatorIn = prepareInAnimation();\n              if (animatorIn) {\n                currentAnimation = animatorIn.start();\n                currentAnimation.done(function() {\n                  currentAnimation = null;\n                  end();\n                  runner.complete();\n                });\n                return currentAnimation;\n              }\n            }\n            // in the event that there is no `in` animation\n            end();\n            runner.complete();\n          });\n\n          runner = new $$AnimateRunner({\n            end: endFn,\n            cancel: endFn\n          });\n\n          return runner;\n\n          function endFn() {\n            if (currentAnimation) {\n              currentAnimation.end();\n            }\n          }\n        }\n      };\n\n      function calculateAnchorStyles(anchor) {\n        var styles = {};\n\n        var coords = getDomNode(anchor).getBoundingClientRect();\n\n        // we iterate directly since safari messes up and doesn't return\n        // all the keys for the coords object when iterated\n        forEach(['width','height','top','left'], function(key) {\n          var value = coords[key];\n          switch (key) {\n            case 'top':\n              value += bodyNode.scrollTop;\n              break;\n            case 'left':\n              value += bodyNode.scrollLeft;\n              break;\n          }\n          styles[key] = Math.floor(value) + 'px';\n        });\n        return styles;\n      }\n\n      function prepareOutAnimation() {\n        var animator = $animateCss(clone, {\n          addClass: NG_OUT_ANCHOR_CLASS_NAME,\n          delay: true,\n          from: calculateAnchorStyles(outAnchor)\n        });\n\n        // read the comment within `prepareRegularAnimation` to understand\n        // why this check is necessary\n        return animator.$$willAnimate ? animator : null;\n      }\n\n      function getClassVal(element) {\n        return element.attr('class') || '';\n      }\n\n      function prepareInAnimation() {\n        var endingClasses = filterCssClasses(getClassVal(inAnchor));\n        var toAdd = getUniqueValues(endingClasses, startingClasses);\n        var toRemove = getUniqueValues(startingClasses, endingClasses);\n\n        var animator = $animateCss(clone, {\n          to: calculateAnchorStyles(inAnchor),\n          addClass: NG_IN_ANCHOR_CLASS_NAME + ' ' + toAdd,\n          removeClass: NG_OUT_ANCHOR_CLASS_NAME + ' ' + toRemove,\n          delay: true\n        });\n\n        // read the comment within `prepareRegularAnimation` to understand\n        // why this check is necessary\n        return animator.$$willAnimate ? animator : null;\n      }\n\n      function end() {\n        clone.remove();\n        outAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n        inAnchor.removeClass(NG_ANIMATE_SHIM_CLASS_NAME);\n      }\n    }\n\n    function prepareFromToAnchorAnimation(from, to, classes, anchors) {\n      var fromAnimation = prepareRegularAnimation(from, noop);\n      var toAnimation = prepareRegularAnimation(to, noop);\n\n      var anchorAnimations = [];\n      forEach(anchors, function(anchor) {\n        var outElement = anchor['out'];\n        var inElement = anchor['in'];\n        var animator = prepareAnchoredAnimation(classes, outElement, inElement);\n        if (animator) {\n          anchorAnimations.push(animator);\n        }\n      });\n\n      // no point in doing anything when there are no elements to animate\n      if (!fromAnimation && !toAnimation && anchorAnimations.length === 0) return;\n\n      return {\n        start: function() {\n          var animationRunners = [];\n\n          if (fromAnimation) {\n            animationRunners.push(fromAnimation.start());\n          }\n\n          if (toAnimation) {\n            animationRunners.push(toAnimation.start());\n          }\n\n          forEach(anchorAnimations, function(animation) {\n            animationRunners.push(animation.start());\n          });\n\n          var runner = new $$AnimateRunner({\n            end: endFn,\n            cancel: endFn // CSS-driven animations cannot be cancelled, only ended\n          });\n\n          $$AnimateRunner.all(animationRunners, function(status) {\n            runner.complete(status);\n          });\n\n          return runner;\n\n          function endFn() {\n            forEach(animationRunners, function(runner) {\n              runner.end();\n            });\n          }\n        }\n      };\n    }\n\n    function prepareRegularAnimation(animationDetails) {\n      var element = animationDetails.element;\n      var options = animationDetails.options || {};\n\n      if (animationDetails.structural) {\n        options.event = animationDetails.event;\n        options.structural = true;\n        options.applyClassesEarly = true;\n\n        // we special case the leave animation since we want to ensure that\n        // the element is removed as soon as the animation is over. Otherwise\n        // a flicker might appear or the element may not be removed at all\n        if (animationDetails.event === 'leave') {\n          options.onDone = options.domOperation;\n        }\n      }\n\n      // We assign the preparationClasses as the actual animation event since\n      // the internals of $animateCss will just suffix the event token values\n      // with `-active` to trigger the animation.\n      if (options.preparationClasses) {\n        options.event = concatWithSpace(options.event, options.preparationClasses);\n      }\n\n      var animator = $animateCss(element, options);\n\n      // the driver lookup code inside of $$animation attempts to spawn a\n      // driver one by one until a driver returns a.$$willAnimate animator object.\n      // $animateCss will always return an object, however, it will pass in\n      // a flag as a hint as to whether an animation was detected or not\n      return animator.$$willAnimate ? animator : null;\n    }\n  }];\n}];\n\n// TODO(matsko): use caching here to speed things up for detection\n// TODO(matsko): add documentation\n//  by the time...\n\nvar $$AnimateJsProvider = ['$animateProvider', function($animateProvider) {\n  this.$get = ['$injector', '$$AnimateRunner', '$$jqLite',\n       function($injector,   $$AnimateRunner,   $$jqLite) {\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n         // $animateJs(element, 'enter');\n    return function(element, event, classes, options) {\n      var animationClosed = false;\n\n      // the `classes` argument is optional and if it is not used\n      // then the classes will be resolved from the element's className\n      // property as well as options.addClass/options.removeClass.\n      if (arguments.length === 3 && isObject(classes)) {\n        options = classes;\n        classes = null;\n      }\n\n      options = prepareAnimationOptions(options);\n      if (!classes) {\n        classes = element.attr('class') || '';\n        if (options.addClass) {\n          classes += ' ' + options.addClass;\n        }\n        if (options.removeClass) {\n          classes += ' ' + options.removeClass;\n        }\n      }\n\n      var classesToAdd = options.addClass;\n      var classesToRemove = options.removeClass;\n\n      // the lookupAnimations function returns a series of animation objects that are\n      // matched up with one or more of the CSS classes. These animation objects are\n      // defined via the module.animation factory function. If nothing is detected then\n      // we don't return anything which then makes $animation query the next driver.\n      var animations = lookupAnimations(classes);\n      var before, after;\n      if (animations.length) {\n        var afterFn, beforeFn;\n        if (event == 'leave') {\n          beforeFn = 'leave';\n          afterFn = 'afterLeave'; // TODO(matsko): get rid of this\n        } else {\n          beforeFn = 'before' + event.charAt(0).toUpperCase() + event.substr(1);\n          afterFn = event;\n        }\n\n        if (event !== 'enter' && event !== 'move') {\n          before = packageAnimations(element, event, options, animations, beforeFn);\n        }\n        after  = packageAnimations(element, event, options, animations, afterFn);\n      }\n\n      // no matching animations\n      if (!before && !after) return;\n\n      function applyOptions() {\n        options.domOperation();\n        applyAnimationClasses(element, options);\n      }\n\n      function close() {\n        animationClosed = true;\n        applyOptions();\n        applyAnimationStyles(element, options);\n      }\n\n      var runner;\n\n      return {\n        $$willAnimate: true,\n        end: function() {\n          if (runner) {\n            runner.end();\n          } else {\n            close();\n            runner = new $$AnimateRunner();\n            runner.complete(true);\n          }\n          return runner;\n        },\n        start: function() {\n          if (runner) {\n            return runner;\n          }\n\n          runner = new $$AnimateRunner();\n          var closeActiveAnimations;\n          var chain = [];\n\n          if (before) {\n            chain.push(function(fn) {\n              closeActiveAnimations = before(fn);\n            });\n          }\n\n          if (chain.length) {\n            chain.push(function(fn) {\n              applyOptions();\n              fn(true);\n            });\n          } else {\n            applyOptions();\n          }\n\n          if (after) {\n            chain.push(function(fn) {\n              closeActiveAnimations = after(fn);\n            });\n          }\n\n          runner.setHost({\n            end: function() {\n              endAnimations();\n            },\n            cancel: function() {\n              endAnimations(true);\n            }\n          });\n\n          $$AnimateRunner.chain(chain, onComplete);\n          return runner;\n\n          function onComplete(success) {\n            close(success);\n            runner.complete(success);\n          }\n\n          function endAnimations(cancelled) {\n            if (!animationClosed) {\n              (closeActiveAnimations || noop)(cancelled);\n              onComplete(cancelled);\n            }\n          }\n        }\n      };\n\n      function executeAnimationFn(fn, element, event, options, onDone) {\n        var args;\n        switch (event) {\n          case 'animate':\n            args = [element, options.from, options.to, onDone];\n            break;\n\n          case 'setClass':\n            args = [element, classesToAdd, classesToRemove, onDone];\n            break;\n\n          case 'addClass':\n            args = [element, classesToAdd, onDone];\n            break;\n\n          case 'removeClass':\n            args = [element, classesToRemove, onDone];\n            break;\n\n          default:\n            args = [element, onDone];\n            break;\n        }\n\n        args.push(options);\n\n        var value = fn.apply(fn, args);\n        if (value) {\n          if (isFunction(value.start)) {\n            value = value.start();\n          }\n\n          if (value instanceof $$AnimateRunner) {\n            value.done(onDone);\n          } else if (isFunction(value)) {\n            // optional onEnd / onCancel callback\n            return value;\n          }\n        }\n\n        return noop;\n      }\n\n      function groupEventedAnimations(element, event, options, animations, fnName) {\n        var operations = [];\n        forEach(animations, function(ani) {\n          var animation = ani[fnName];\n          if (!animation) return;\n\n          // note that all of these animations will run in parallel\n          operations.push(function() {\n            var runner;\n            var endProgressCb;\n\n            var resolved = false;\n            var onAnimationComplete = function(rejected) {\n              if (!resolved) {\n                resolved = true;\n                (endProgressCb || noop)(rejected);\n                runner.complete(!rejected);\n              }\n            };\n\n            runner = new $$AnimateRunner({\n              end: function() {\n                onAnimationComplete();\n              },\n              cancel: function() {\n                onAnimationComplete(true);\n              }\n            });\n\n            endProgressCb = executeAnimationFn(animation, element, event, options, function(result) {\n              var cancelled = result === false;\n              onAnimationComplete(cancelled);\n            });\n\n            return runner;\n          });\n        });\n\n        return operations;\n      }\n\n      function packageAnimations(element, event, options, animations, fnName) {\n        var operations = groupEventedAnimations(element, event, options, animations, fnName);\n        if (operations.length === 0) {\n          var a,b;\n          if (fnName === 'beforeSetClass') {\n            a = groupEventedAnimations(element, 'removeClass', options, animations, 'beforeRemoveClass');\n            b = groupEventedAnimations(element, 'addClass', options, animations, 'beforeAddClass');\n          } else if (fnName === 'setClass') {\n            a = groupEventedAnimations(element, 'removeClass', options, animations, 'removeClass');\n            b = groupEventedAnimations(element, 'addClass', options, animations, 'addClass');\n          }\n\n          if (a) {\n            operations = operations.concat(a);\n          }\n          if (b) {\n            operations = operations.concat(b);\n          }\n        }\n\n        if (operations.length === 0) return;\n\n        // TODO(matsko): add documentation\n        return function startAnimation(callback) {\n          var runners = [];\n          if (operations.length) {\n            forEach(operations, function(animateFn) {\n              runners.push(animateFn());\n            });\n          }\n\n          runners.length ? $$AnimateRunner.all(runners, callback) : callback();\n\n          return function endFn(reject) {\n            forEach(runners, function(runner) {\n              reject ? runner.cancel() : runner.end();\n            });\n          };\n        };\n      }\n    };\n\n    function lookupAnimations(classes) {\n      classes = isArray(classes) ? classes : classes.split(' ');\n      var matches = [], flagMap = {};\n      for (var i=0; i < classes.length; i++) {\n        var klass = classes[i],\n            animationFactory = $animateProvider.$$registeredAnimations[klass];\n        if (animationFactory && !flagMap[klass]) {\n          matches.push($injector.get(animationFactory));\n          flagMap[klass] = true;\n        }\n      }\n      return matches;\n    }\n  }];\n}];\n\nvar $$AnimateJsDriverProvider = ['$$animationProvider', function($$animationProvider) {\n  $$animationProvider.drivers.push('$$animateJsDriver');\n  this.$get = ['$$animateJs', '$$AnimateRunner', function($$animateJs, $$AnimateRunner) {\n    return function initDriverFn(animationDetails) {\n      if (animationDetails.from && animationDetails.to) {\n        var fromAnimation = prepareAnimation(animationDetails.from);\n        var toAnimation = prepareAnimation(animationDetails.to);\n        if (!fromAnimation && !toAnimation) return;\n\n        return {\n          start: function() {\n            var animationRunners = [];\n\n            if (fromAnimation) {\n              animationRunners.push(fromAnimation.start());\n            }\n\n            if (toAnimation) {\n              animationRunners.push(toAnimation.start());\n            }\n\n            $$AnimateRunner.all(animationRunners, done);\n\n            var runner = new $$AnimateRunner({\n              end: endFnFactory(),\n              cancel: endFnFactory()\n            });\n\n            return runner;\n\n            function endFnFactory() {\n              return function() {\n                forEach(animationRunners, function(runner) {\n                  // at this point we cannot cancel animations for groups just yet. 1.5+\n                  runner.end();\n                });\n              };\n            }\n\n            function done(status) {\n              runner.complete(status);\n            }\n          }\n        };\n      } else {\n        return prepareAnimation(animationDetails);\n      }\n    };\n\n    function prepareAnimation(animationDetails) {\n      // TODO(matsko): make sure to check for grouped animations and delegate down to normal animations\n      var element = animationDetails.element;\n      var event = animationDetails.event;\n      var options = animationDetails.options;\n      var classes = animationDetails.classes;\n      return $$animateJs(element, event, classes, options);\n    }\n  }];\n}];\n\nvar NG_ANIMATE_ATTR_NAME = 'data-ng-animate';\nvar NG_ANIMATE_PIN_DATA = '$ngAnimatePin';\nvar $$AnimateQueueProvider = ['$animateProvider', function($animateProvider) {\n  var PRE_DIGEST_STATE = 1;\n  var RUNNING_STATE = 2;\n  var ONE_SPACE = ' ';\n\n  var rules = this.rules = {\n    skip: [],\n    cancel: [],\n    join: []\n  };\n\n  function makeTruthyCssClassMap(classString) {\n    if (!classString) {\n      return null;\n    }\n\n    var keys = classString.split(ONE_SPACE);\n    var map = Object.create(null);\n\n    forEach(keys, function(key) {\n      map[key] = true;\n    });\n    return map;\n  }\n\n  function hasMatchingClasses(newClassString, currentClassString) {\n    if (newClassString && currentClassString) {\n      var currentClassMap = makeTruthyCssClassMap(currentClassString);\n      return newClassString.split(ONE_SPACE).some(function(className) {\n        return currentClassMap[className];\n      });\n    }\n  }\n\n  function isAllowed(ruleType, element, currentAnimation, previousAnimation) {\n    return rules[ruleType].some(function(fn) {\n      return fn(element, currentAnimation, previousAnimation);\n    });\n  }\n\n  function hasAnimationClasses(animation, and) {\n    var a = (animation.addClass || '').length > 0;\n    var b = (animation.removeClass || '').length > 0;\n    return and ? a && b : a || b;\n  }\n\n  rules.join.push(function(element, newAnimation, currentAnimation) {\n    // if the new animation is class-based then we can just tack that on\n    return !newAnimation.structural && hasAnimationClasses(newAnimation);\n  });\n\n  rules.skip.push(function(element, newAnimation, currentAnimation) {\n    // there is no need to animate anything if no classes are being added and\n    // there is no structural animation that will be triggered\n    return !newAnimation.structural && !hasAnimationClasses(newAnimation);\n  });\n\n  rules.skip.push(function(element, newAnimation, currentAnimation) {\n    // why should we trigger a new structural animation if the element will\n    // be removed from the DOM anyway?\n    return currentAnimation.event == 'leave' && newAnimation.structural;\n  });\n\n  rules.skip.push(function(element, newAnimation, currentAnimation) {\n    // if there is an ongoing current animation then don't even bother running the class-based animation\n    return currentAnimation.structural && currentAnimation.state === RUNNING_STATE && !newAnimation.structural;\n  });\n\n  rules.cancel.push(function(element, newAnimation, currentAnimation) {\n    // there can never be two structural animations running at the same time\n    return currentAnimation.structural && newAnimation.structural;\n  });\n\n  rules.cancel.push(function(element, newAnimation, currentAnimation) {\n    // if the previous animation is already running, but the new animation will\n    // be triggered, but the new animation is structural\n    return currentAnimation.state === RUNNING_STATE && newAnimation.structural;\n  });\n\n  rules.cancel.push(function(element, newAnimation, currentAnimation) {\n    // cancel the animation if classes added / removed in both animation cancel each other out,\n    // but only if the current animation isn't structural\n\n    if (currentAnimation.structural) return false;\n\n    var nA = newAnimation.addClass;\n    var nR = newAnimation.removeClass;\n    var cA = currentAnimation.addClass;\n    var cR = currentAnimation.removeClass;\n\n    // early detection to save the global CPU shortage :)\n    if ((isUndefined(nA) && isUndefined(nR)) || (isUndefined(cA) && isUndefined(cR))) {\n      return false;\n    }\n\n    return hasMatchingClasses(nA, cR) || hasMatchingClasses(nR, cA);\n  });\n\n  this.$get = ['$$rAF', '$rootScope', '$rootElement', '$document', '$$HashMap',\n               '$$animation', '$$AnimateRunner', '$templateRequest', '$$jqLite', '$$forceReflow',\n       function($$rAF,   $rootScope,   $rootElement,   $document,   $$HashMap,\n                $$animation,   $$AnimateRunner,   $templateRequest,   $$jqLite,   $$forceReflow) {\n\n    var activeAnimationsLookup = new $$HashMap();\n    var disabledElementsLookup = new $$HashMap();\n    var animationsEnabled = null;\n\n    function postDigestTaskFactory() {\n      var postDigestCalled = false;\n      return function(fn) {\n        // we only issue a call to postDigest before\n        // it has first passed. This prevents any callbacks\n        // from not firing once the animation has completed\n        // since it will be out of the digest cycle.\n        if (postDigestCalled) {\n          fn();\n        } else {\n          $rootScope.$$postDigest(function() {\n            postDigestCalled = true;\n            fn();\n          });\n        }\n      };\n    }\n\n    // Wait until all directive and route-related templates are downloaded and\n    // compiled. The $templateRequest.totalPendingRequests variable keeps track of\n    // all of the remote templates being currently downloaded. If there are no\n    // templates currently downloading then the watcher will still fire anyway.\n    var deregisterWatch = $rootScope.$watch(\n      function() { return $templateRequest.totalPendingRequests === 0; },\n      function(isEmpty) {\n        if (!isEmpty) return;\n        deregisterWatch();\n\n        // Now that all templates have been downloaded, $animate will wait until\n        // the post digest queue is empty before enabling animations. By having two\n        // calls to $postDigest calls we can ensure that the flag is enabled at the\n        // very end of the post digest queue. Since all of the animations in $animate\n        // use $postDigest, it's important that the code below executes at the end.\n        // This basically means that the page is fully downloaded and compiled before\n        // any animations are triggered.\n        $rootScope.$$postDigest(function() {\n          $rootScope.$$postDigest(function() {\n            // we check for null directly in the event that the application already called\n            // .enabled() with whatever arguments that it provided it with\n            if (animationsEnabled === null) {\n              animationsEnabled = true;\n            }\n          });\n        });\n      }\n    );\n\n    var callbackRegistry = {};\n\n    // remember that the classNameFilter is set during the provider/config\n    // stage therefore we can optimize here and setup a helper function\n    var classNameFilter = $animateProvider.classNameFilter();\n    var isAnimatableClassName = !classNameFilter\n              ? function() { return true; }\n              : function(className) {\n                return classNameFilter.test(className);\n              };\n\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function normalizeAnimationDetails(element, animation) {\n      return mergeAnimationDetails(element, animation, {});\n    }\n\n    // IE9-11 has no method \"contains\" in SVG element and in Node.prototype. Bug #10259.\n    var contains = window.Node.prototype.contains || function(arg) {\n      // jshint bitwise: false\n      return this === arg || !!(this.compareDocumentPosition(arg) & 16);\n      // jshint bitwise: true\n    };\n\n    function findCallbacks(parent, element, event) {\n      var targetNode = getDomNode(element);\n      var targetParentNode = getDomNode(parent);\n\n      var matches = [];\n      var entries = callbackRegistry[event];\n      if (entries) {\n        forEach(entries, function(entry) {\n          if (contains.call(entry.node, targetNode)) {\n            matches.push(entry.callback);\n          } else if (event === 'leave' && contains.call(entry.node, targetParentNode)) {\n            matches.push(entry.callback);\n          }\n        });\n      }\n\n      return matches;\n    }\n\n    function filterFromRegistry(list, matchContainer, matchCallback) {\n      var containerNode = extractElementNode(matchContainer);\n      return list.filter(function(entry) {\n        var isMatch = entry.node === containerNode &&\n                        (!matchCallback || entry.callback === matchCallback);\n        return !isMatch;\n      });\n    }\n\n    function cleanupEventListeners(phase, element) {\n      if (phase === 'close' && !element[0].parentNode) {\n        // If the element is not attached to a parentNode, it has been removed by\n        // the domOperation, and we can safely remove the event callbacks\n        $animate.off(element);\n      }\n    }\n\n    var $animate = {\n      on: function(event, container, callback) {\n        var node = extractElementNode(container);\n        callbackRegistry[event] = callbackRegistry[event] || [];\n        callbackRegistry[event].push({\n          node: node,\n          callback: callback\n        });\n\n        // Remove the callback when the element is removed from the DOM\n        jqLite(container).on('$destroy', function() {\n          var animationDetails = activeAnimationsLookup.get(node);\n\n          if (!animationDetails) {\n            // If there's an animation ongoing, the callback calling code will remove\n            // the event listeners. If we'd remove here, the callbacks would be removed\n            // before the animation ends\n            $animate.off(event, container, callback);\n          }\n        });\n      },\n\n      off: function(event, container, callback) {\n        if (arguments.length === 1 && !angular.isString(arguments[0])) {\n          container = arguments[0];\n          for (var eventType in callbackRegistry) {\n            callbackRegistry[eventType] = filterFromRegistry(callbackRegistry[eventType], container);\n          }\n\n          return;\n        }\n\n        var entries = callbackRegistry[event];\n        if (!entries) return;\n\n        callbackRegistry[event] = arguments.length === 1\n            ? null\n            : filterFromRegistry(entries, container, callback);\n      },\n\n      pin: function(element, parentElement) {\n        assertArg(isElement(element), 'element', 'not an element');\n        assertArg(isElement(parentElement), 'parentElement', 'not an element');\n        element.data(NG_ANIMATE_PIN_DATA, parentElement);\n      },\n\n      push: function(element, event, options, domOperation) {\n        options = options || {};\n        options.domOperation = domOperation;\n        return queueAnimation(element, event, options);\n      },\n\n      // this method has four signatures:\n      //  () - global getter\n      //  (bool) - global setter\n      //  (element) - element getter\n      //  (element, bool) - element setter<F37>\n      enabled: function(element, bool) {\n        var argCount = arguments.length;\n\n        if (argCount === 0) {\n          // () - Global getter\n          bool = !!animationsEnabled;\n        } else {\n          var hasElement = isElement(element);\n\n          if (!hasElement) {\n            // (bool) - Global setter\n            bool = animationsEnabled = !!element;\n          } else {\n            var node = getDomNode(element);\n            var recordExists = disabledElementsLookup.get(node);\n\n            if (argCount === 1) {\n              // (element) - Element getter\n              bool = !recordExists;\n            } else {\n              // (element, bool) - Element setter\n              disabledElementsLookup.put(node, !bool);\n            }\n          }\n        }\n\n        return bool;\n      }\n    };\n\n    return $animate;\n\n    function queueAnimation(element, event, initialOptions) {\n      // we always make a copy of the options since\n      // there should never be any side effects on\n      // the input data when running `$animateCss`.\n      var options = copy(initialOptions);\n\n      var node, parent;\n      element = stripCommentsFromElement(element);\n      if (element) {\n        node = getDomNode(element);\n        parent = element.parent();\n      }\n\n      options = prepareAnimationOptions(options);\n\n      // we create a fake runner with a working promise.\n      // These methods will become available after the digest has passed\n      var runner = new $$AnimateRunner();\n\n      // this is used to trigger callbacks in postDigest mode\n      var runInNextPostDigestOrNow = postDigestTaskFactory();\n\n      if (isArray(options.addClass)) {\n        options.addClass = options.addClass.join(' ');\n      }\n\n      if (options.addClass && !isString(options.addClass)) {\n        options.addClass = null;\n      }\n\n      if (isArray(options.removeClass)) {\n        options.removeClass = options.removeClass.join(' ');\n      }\n\n      if (options.removeClass && !isString(options.removeClass)) {\n        options.removeClass = null;\n      }\n\n      if (options.from && !isObject(options.from)) {\n        options.from = null;\n      }\n\n      if (options.to && !isObject(options.to)) {\n        options.to = null;\n      }\n\n      // there are situations where a directive issues an animation for\n      // a jqLite wrapper that contains only comment nodes... If this\n      // happens then there is no way we can perform an animation\n      if (!node) {\n        close();\n        return runner;\n      }\n\n      var className = [node.className, options.addClass, options.removeClass].join(' ');\n      if (!isAnimatableClassName(className)) {\n        close();\n        return runner;\n      }\n\n      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n      var documentHidden = $document[0].hidden;\n\n      // this is a hard disable of all animations for the application or on\n      // the element itself, therefore  there is no need to continue further\n      // past this point if not enabled\n      // Animations are also disabled if the document is currently hidden (page is not visible\n      // to the user), because browsers slow down or do not flush calls to requestAnimationFrame\n      var skipAnimations = !animationsEnabled || documentHidden || disabledElementsLookup.get(node);\n      var existingAnimation = (!skipAnimations && activeAnimationsLookup.get(node)) || {};\n      var hasExistingAnimation = !!existingAnimation.state;\n\n      // there is no point in traversing the same collection of parent ancestors if a followup\n      // animation will be run on the same element that already did all that checking work\n      if (!skipAnimations && (!hasExistingAnimation || existingAnimation.state != PRE_DIGEST_STATE)) {\n        skipAnimations = !areAnimationsAllowed(element, parent, event);\n      }\n\n      if (skipAnimations) {\n        // Callbacks should fire even if the document is hidden (regression fix for issue #14120)\n        if (documentHidden) notifyProgress(runner, event, 'start');\n        close();\n        if (documentHidden) notifyProgress(runner, event, 'close');\n        return runner;\n      }\n\n      if (isStructural) {\n        closeChildAnimations(element);\n      }\n\n      var newAnimation = {\n        structural: isStructural,\n        element: element,\n        event: event,\n        addClass: options.addClass,\n        removeClass: options.removeClass,\n        close: close,\n        options: options,\n        runner: runner\n      };\n\n      if (hasExistingAnimation) {\n        var skipAnimationFlag = isAllowed('skip', element, newAnimation, existingAnimation);\n        if (skipAnimationFlag) {\n          if (existingAnimation.state === RUNNING_STATE) {\n            close();\n            return runner;\n          } else {\n            mergeAnimationDetails(element, existingAnimation, newAnimation);\n            return existingAnimation.runner;\n          }\n        }\n        var cancelAnimationFlag = isAllowed('cancel', element, newAnimation, existingAnimation);\n        if (cancelAnimationFlag) {\n          if (existingAnimation.state === RUNNING_STATE) {\n            // this will end the animation right away and it is safe\n            // to do so since the animation is already running and the\n            // runner callback code will run in async\n            existingAnimation.runner.end();\n          } else if (existingAnimation.structural) {\n            // this means that the animation is queued into a digest, but\n            // hasn't started yet. Therefore it is safe to run the close\n            // method which will call the runner methods in async.\n            existingAnimation.close();\n          } else {\n            // this will merge the new animation options into existing animation options\n            mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n            return existingAnimation.runner;\n          }\n        } else {\n          // a joined animation means that this animation will take over the existing one\n          // so an example would involve a leave animation taking over an enter. Then when\n          // the postDigest kicks in the enter will be ignored.\n          var joinAnimationFlag = isAllowed('join', element, newAnimation, existingAnimation);\n          if (joinAnimationFlag) {\n            if (existingAnimation.state === RUNNING_STATE) {\n              normalizeAnimationDetails(element, newAnimation);\n            } else {\n              applyGeneratedPreparationClasses(element, isStructural ? event : null, options);\n\n              event = newAnimation.event = existingAnimation.event;\n              options = mergeAnimationDetails(element, existingAnimation, newAnimation);\n\n              //we return the same runner since only the option values of this animation will\n              //be fed into the `existingAnimation`.\n              return existingAnimation.runner;\n            }\n          }\n        }\n      } else {\n        // normalization in this case means that it removes redundant CSS classes that\n        // already exist (addClass) or do not exist (removeClass) on the element\n        normalizeAnimationDetails(element, newAnimation);\n      }\n\n      // when the options are merged and cleaned up we may end up not having to do\n      // an animation at all, therefore we should check this before issuing a post\n      // digest callback. Structural animations will always run no matter what.\n      var isValidAnimation = newAnimation.structural;\n      if (!isValidAnimation) {\n        // animate (from/to) can be quickly checked first, otherwise we check if any classes are present\n        isValidAnimation = (newAnimation.event === 'animate' && Object.keys(newAnimation.options.to || {}).length > 0)\n                            || hasAnimationClasses(newAnimation);\n      }\n\n      if (!isValidAnimation) {\n        close();\n        clearElementAnimationState(element);\n        return runner;\n      }\n\n      // the counter keeps track of cancelled animations\n      var counter = (existingAnimation.counter || 0) + 1;\n      newAnimation.counter = counter;\n\n      markElementAnimationState(element, PRE_DIGEST_STATE, newAnimation);\n\n      $rootScope.$$postDigest(function() {\n        var animationDetails = activeAnimationsLookup.get(node);\n        var animationCancelled = !animationDetails;\n        animationDetails = animationDetails || {};\n\n        // if addClass/removeClass is called before something like enter then the\n        // registered parent element may not be present. The code below will ensure\n        // that a final value for parent element is obtained\n        var parentElement = element.parent() || [];\n\n        // animate/structural/class-based animations all have requirements. Otherwise there\n        // is no point in performing an animation. The parent node must also be set.\n        var isValidAnimation = parentElement.length > 0\n                                && (animationDetails.event === 'animate'\n                                    || animationDetails.structural\n                                    || hasAnimationClasses(animationDetails));\n\n        // this means that the previous animation was cancelled\n        // even if the follow-up animation is the same event\n        if (animationCancelled || animationDetails.counter !== counter || !isValidAnimation) {\n          // if another animation did not take over then we need\n          // to make sure that the domOperation and options are\n          // handled accordingly\n          if (animationCancelled) {\n            applyAnimationClasses(element, options);\n            applyAnimationStyles(element, options);\n          }\n\n          // if the event changed from something like enter to leave then we do\n          // it, otherwise if it's the same then the end result will be the same too\n          if (animationCancelled || (isStructural && animationDetails.event !== event)) {\n            options.domOperation();\n            runner.end();\n          }\n\n          // in the event that the element animation was not cancelled or a follow-up animation\n          // isn't allowed to animate from here then we need to clear the state of the element\n          // so that any future animations won't read the expired animation data.\n          if (!isValidAnimation) {\n            clearElementAnimationState(element);\n          }\n\n          return;\n        }\n\n        // this combined multiple class to addClass / removeClass into a setClass event\n        // so long as a structural event did not take over the animation\n        event = !animationDetails.structural && hasAnimationClasses(animationDetails, true)\n            ? 'setClass'\n            : animationDetails.event;\n\n        markElementAnimationState(element, RUNNING_STATE);\n        var realRunner = $$animation(element, event, animationDetails.options);\n\n        // this will update the runner's flow-control events based on\n        // the `realRunner` object.\n        runner.setHost(realRunner);\n        notifyProgress(runner, event, 'start', {});\n\n        realRunner.done(function(status) {\n          close(!status);\n          var animationDetails = activeAnimationsLookup.get(node);\n          if (animationDetails && animationDetails.counter === counter) {\n            clearElementAnimationState(getDomNode(element));\n          }\n          notifyProgress(runner, event, 'close', {});\n        });\n      });\n\n      return runner;\n\n      function notifyProgress(runner, event, phase, data) {\n        runInNextPostDigestOrNow(function() {\n          var callbacks = findCallbacks(parent, element, event);\n          if (callbacks.length) {\n            // do not optimize this call here to RAF because\n            // we don't know how heavy the callback code here will\n            // be and if this code is buffered then this can\n            // lead to a performance regression.\n            $$rAF(function() {\n              forEach(callbacks, function(callback) {\n                callback(element, phase, data);\n              });\n              cleanupEventListeners(phase, element);\n            });\n          } else {\n            cleanupEventListeners(phase, element);\n          }\n        });\n        runner.progress(event, phase, data);\n      }\n\n      function close(reject) { // jshint ignore:line\n        clearGeneratedClasses(element, options);\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n        options.domOperation();\n        runner.complete(!reject);\n      }\n    }\n\n    function closeChildAnimations(element) {\n      var node = getDomNode(element);\n      var children = node.querySelectorAll('[' + NG_ANIMATE_ATTR_NAME + ']');\n      forEach(children, function(child) {\n        var state = parseInt(child.getAttribute(NG_ANIMATE_ATTR_NAME));\n        var animationDetails = activeAnimationsLookup.get(child);\n        if (animationDetails) {\n          switch (state) {\n            case RUNNING_STATE:\n              animationDetails.runner.end();\n              /* falls through */\n            case PRE_DIGEST_STATE:\n              activeAnimationsLookup.remove(child);\n              break;\n          }\n        }\n      });\n    }\n\n    function clearElementAnimationState(element) {\n      var node = getDomNode(element);\n      node.removeAttribute(NG_ANIMATE_ATTR_NAME);\n      activeAnimationsLookup.remove(node);\n    }\n\n    function isMatchingElement(nodeOrElmA, nodeOrElmB) {\n      return getDomNode(nodeOrElmA) === getDomNode(nodeOrElmB);\n    }\n\n    /**\n     * This fn returns false if any of the following is true:\n     * a) animations on any parent element are disabled, and animations on the element aren't explicitly allowed\n     * b) a parent element has an ongoing structural animation, and animateChildren is false\n     * c) the element is not a child of the body\n     * d) the element is not a child of the $rootElement\n     */\n    function areAnimationsAllowed(element, parentElement, event) {\n      var bodyElement = jqLite($document[0].body);\n      var bodyElementDetected = isMatchingElement(element, bodyElement) || element[0].nodeName === 'HTML';\n      var rootElementDetected = isMatchingElement(element, $rootElement);\n      var parentAnimationDetected = false;\n      var animateChildren;\n      var elementDisabled = disabledElementsLookup.get(getDomNode(element));\n\n      var parentHost = jqLite.data(element[0], NG_ANIMATE_PIN_DATA);\n      if (parentHost) {\n        parentElement = parentHost;\n      }\n\n      parentElement = getDomNode(parentElement);\n\n      while (parentElement) {\n        if (!rootElementDetected) {\n          // angular doesn't want to attempt to animate elements outside of the application\n          // therefore we need to ensure that the rootElement is an ancestor of the current element\n          rootElementDetected = isMatchingElement(parentElement, $rootElement);\n        }\n\n        if (parentElement.nodeType !== ELEMENT_NODE) {\n          // no point in inspecting the #document element\n          break;\n        }\n\n        var details = activeAnimationsLookup.get(parentElement) || {};\n        // either an enter, leave or move animation will commence\n        // therefore we can't allow any animations to take place\n        // but if a parent animation is class-based then that's ok\n        if (!parentAnimationDetected) {\n          var parentElementDisabled = disabledElementsLookup.get(parentElement);\n\n          if (parentElementDisabled === true && elementDisabled !== false) {\n            // disable animations if the user hasn't explicitly enabled animations on the\n            // current element\n            elementDisabled = true;\n            // element is disabled via parent element, no need to check anything else\n            break;\n          } else if (parentElementDisabled === false) {\n            elementDisabled = false;\n          }\n          parentAnimationDetected = details.structural;\n        }\n\n        if (isUndefined(animateChildren) || animateChildren === true) {\n          var value = jqLite.data(parentElement, NG_ANIMATE_CHILDREN_DATA);\n          if (isDefined(value)) {\n            animateChildren = value;\n          }\n        }\n\n        // there is no need to continue traversing at this point\n        if (parentAnimationDetected && animateChildren === false) break;\n\n        if (!bodyElementDetected) {\n          // we also need to ensure that the element is or will be a part of the body element\n          // otherwise it is pointless to even issue an animation to be rendered\n          bodyElementDetected = isMatchingElement(parentElement, bodyElement);\n        }\n\n        if (bodyElementDetected && rootElementDetected) {\n          // If both body and root have been found, any other checks are pointless,\n          // as no animation data should live outside the application\n          break;\n        }\n\n        if (!rootElementDetected) {\n          // If no rootElement is detected, check if the parentElement is pinned to another element\n          parentHost = jqLite.data(parentElement, NG_ANIMATE_PIN_DATA);\n          if (parentHost) {\n            // The pin target element becomes the next parent element\n            parentElement = getDomNode(parentHost);\n            continue;\n          }\n        }\n\n        parentElement = parentElement.parentNode;\n      }\n\n      var allowAnimation = (!parentAnimationDetected || animateChildren) && elementDisabled !== true;\n      return allowAnimation && rootElementDetected && bodyElementDetected;\n    }\n\n    function markElementAnimationState(element, state, details) {\n      details = details || {};\n      details.state = state;\n\n      var node = getDomNode(element);\n      node.setAttribute(NG_ANIMATE_ATTR_NAME, state);\n\n      var oldValue = activeAnimationsLookup.get(node);\n      var newValue = oldValue\n          ? extend(oldValue, details)\n          : details;\n      activeAnimationsLookup.put(node, newValue);\n    }\n  }];\n}];\n\nvar $$AnimationProvider = ['$animateProvider', function($animateProvider) {\n  var NG_ANIMATE_REF_ATTR = 'ng-animate-ref';\n\n  var drivers = this.drivers = [];\n\n  var RUNNER_STORAGE_KEY = '$$animationRunner';\n\n  function setRunner(element, runner) {\n    element.data(RUNNER_STORAGE_KEY, runner);\n  }\n\n  function removeRunner(element) {\n    element.removeData(RUNNER_STORAGE_KEY);\n  }\n\n  function getRunner(element) {\n    return element.data(RUNNER_STORAGE_KEY);\n  }\n\n  this.$get = ['$$jqLite', '$rootScope', '$injector', '$$AnimateRunner', '$$HashMap', '$$rAFScheduler',\n       function($$jqLite,   $rootScope,   $injector,   $$AnimateRunner,   $$HashMap,   $$rAFScheduler) {\n\n    var animationQueue = [];\n    var applyAnimationClasses = applyAnimationClassesFactory($$jqLite);\n\n    function sortAnimations(animations) {\n      var tree = { children: [] };\n      var i, lookup = new $$HashMap();\n\n      // this is done first beforehand so that the hashmap\n      // is filled with a list of the elements that will be animated\n      for (i = 0; i < animations.length; i++) {\n        var animation = animations[i];\n        lookup.put(animation.domNode, animations[i] = {\n          domNode: animation.domNode,\n          fn: animation.fn,\n          children: []\n        });\n      }\n\n      for (i = 0; i < animations.length; i++) {\n        processNode(animations[i]);\n      }\n\n      return flatten(tree);\n\n      function processNode(entry) {\n        if (entry.processed) return entry;\n        entry.processed = true;\n\n        var elementNode = entry.domNode;\n        var parentNode = elementNode.parentNode;\n        lookup.put(elementNode, entry);\n\n        var parentEntry;\n        while (parentNode) {\n          parentEntry = lookup.get(parentNode);\n          if (parentEntry) {\n            if (!parentEntry.processed) {\n              parentEntry = processNode(parentEntry);\n            }\n            break;\n          }\n          parentNode = parentNode.parentNode;\n        }\n\n        (parentEntry || tree).children.push(entry);\n        return entry;\n      }\n\n      function flatten(tree) {\n        var result = [];\n        var queue = [];\n        var i;\n\n        for (i = 0; i < tree.children.length; i++) {\n          queue.push(tree.children[i]);\n        }\n\n        var remainingLevelEntries = queue.length;\n        var nextLevelEntries = 0;\n        var row = [];\n\n        for (i = 0; i < queue.length; i++) {\n          var entry = queue[i];\n          if (remainingLevelEntries <= 0) {\n            remainingLevelEntries = nextLevelEntries;\n            nextLevelEntries = 0;\n            result.push(row);\n            row = [];\n          }\n          row.push(entry.fn);\n          entry.children.forEach(function(childEntry) {\n            nextLevelEntries++;\n            queue.push(childEntry);\n          });\n          remainingLevelEntries--;\n        }\n\n        if (row.length) {\n          result.push(row);\n        }\n\n        return result;\n      }\n    }\n\n    // TODO(matsko): document the signature in a better way\n    return function(element, event, options) {\n      options = prepareAnimationOptions(options);\n      var isStructural = ['enter', 'move', 'leave'].indexOf(event) >= 0;\n\n      // there is no animation at the current moment, however\n      // these runner methods will get later updated with the\n      // methods leading into the driver's end/cancel methods\n      // for now they just stop the animation from starting\n      var runner = new $$AnimateRunner({\n        end: function() { close(); },\n        cancel: function() { close(true); }\n      });\n\n      if (!drivers.length) {\n        close();\n        return runner;\n      }\n\n      setRunner(element, runner);\n\n      var classes = mergeClasses(element.attr('class'), mergeClasses(options.addClass, options.removeClass));\n      var tempClasses = options.tempClasses;\n      if (tempClasses) {\n        classes += ' ' + tempClasses;\n        options.tempClasses = null;\n      }\n\n      var prepareClassName;\n      if (isStructural) {\n        prepareClassName = 'ng-' + event + PREPARE_CLASS_SUFFIX;\n        $$jqLite.addClass(element, prepareClassName);\n      }\n\n      animationQueue.push({\n        // this data is used by the postDigest code and passed into\n        // the driver step function\n        element: element,\n        classes: classes,\n        event: event,\n        structural: isStructural,\n        options: options,\n        beforeStart: beforeStart,\n        close: close\n      });\n\n      element.on('$destroy', handleDestroyedElement);\n\n      // we only want there to be one function called within the post digest\n      // block. This way we can group animations for all the animations that\n      // were apart of the same postDigest flush call.\n      if (animationQueue.length > 1) return runner;\n\n      $rootScope.$$postDigest(function() {\n        var animations = [];\n        forEach(animationQueue, function(entry) {\n          // the element was destroyed early on which removed the runner\n          // form its storage. This means we can't animate this element\n          // at all and it already has been closed due to destruction.\n          if (getRunner(entry.element)) {\n            animations.push(entry);\n          } else {\n            entry.close();\n          }\n        });\n\n        // now any future animations will be in another postDigest\n        animationQueue.length = 0;\n\n        var groupedAnimations = groupAnimations(animations);\n        var toBeSortedAnimations = [];\n\n        forEach(groupedAnimations, function(animationEntry) {\n          toBeSortedAnimations.push({\n            domNode: getDomNode(animationEntry.from ? animationEntry.from.element : animationEntry.element),\n            fn: function triggerAnimationStart() {\n              // it's important that we apply the `ng-animate` CSS class and the\n              // temporary classes before we do any driver invoking since these\n              // CSS classes may be required for proper CSS detection.\n              animationEntry.beforeStart();\n\n              var startAnimationFn, closeFn = animationEntry.close;\n\n              // in the event that the element was removed before the digest runs or\n              // during the RAF sequencing then we should not trigger the animation.\n              var targetElement = animationEntry.anchors\n                  ? (animationEntry.from.element || animationEntry.to.element)\n                  : animationEntry.element;\n\n              if (getRunner(targetElement)) {\n                var operation = invokeFirstDriver(animationEntry);\n                if (operation) {\n                  startAnimationFn = operation.start;\n                }\n              }\n\n              if (!startAnimationFn) {\n                closeFn();\n              } else {\n                var animationRunner = startAnimationFn();\n                animationRunner.done(function(status) {\n                  closeFn(!status);\n                });\n                updateAnimationRunners(animationEntry, animationRunner);\n              }\n            }\n          });\n        });\n\n        // we need to sort each of the animations in order of parent to child\n        // relationships. This ensures that the child classes are applied at the\n        // right time.\n        $$rAFScheduler(sortAnimations(toBeSortedAnimations));\n      });\n\n      return runner;\n\n      // TODO(matsko): change to reference nodes\n      function getAnchorNodes(node) {\n        var SELECTOR = '[' + NG_ANIMATE_REF_ATTR + ']';\n        var items = node.hasAttribute(NG_ANIMATE_REF_ATTR)\n              ? [node]\n              : node.querySelectorAll(SELECTOR);\n        var anchors = [];\n        forEach(items, function(node) {\n          var attr = node.getAttribute(NG_ANIMATE_REF_ATTR);\n          if (attr && attr.length) {\n            anchors.push(node);\n          }\n        });\n        return anchors;\n      }\n\n      function groupAnimations(animations) {\n        var preparedAnimations = [];\n        var refLookup = {};\n        forEach(animations, function(animation, index) {\n          var element = animation.element;\n          var node = getDomNode(element);\n          var event = animation.event;\n          var enterOrMove = ['enter', 'move'].indexOf(event) >= 0;\n          var anchorNodes = animation.structural ? getAnchorNodes(node) : [];\n\n          if (anchorNodes.length) {\n            var direction = enterOrMove ? 'to' : 'from';\n\n            forEach(anchorNodes, function(anchor) {\n              var key = anchor.getAttribute(NG_ANIMATE_REF_ATTR);\n              refLookup[key] = refLookup[key] || {};\n              refLookup[key][direction] = {\n                animationID: index,\n                element: jqLite(anchor)\n              };\n            });\n          } else {\n            preparedAnimations.push(animation);\n          }\n        });\n\n        var usedIndicesLookup = {};\n        var anchorGroups = {};\n        forEach(refLookup, function(operations, key) {\n          var from = operations.from;\n          var to = operations.to;\n\n          if (!from || !to) {\n            // only one of these is set therefore we can't have an\n            // anchor animation since all three pieces are required\n            var index = from ? from.animationID : to.animationID;\n            var indexKey = index.toString();\n            if (!usedIndicesLookup[indexKey]) {\n              usedIndicesLookup[indexKey] = true;\n              preparedAnimations.push(animations[index]);\n            }\n            return;\n          }\n\n          var fromAnimation = animations[from.animationID];\n          var toAnimation = animations[to.animationID];\n          var lookupKey = from.animationID.toString();\n          if (!anchorGroups[lookupKey]) {\n            var group = anchorGroups[lookupKey] = {\n              structural: true,\n              beforeStart: function() {\n                fromAnimation.beforeStart();\n                toAnimation.beforeStart();\n              },\n              close: function() {\n                fromAnimation.close();\n                toAnimation.close();\n              },\n              classes: cssClassesIntersection(fromAnimation.classes, toAnimation.classes),\n              from: fromAnimation,\n              to: toAnimation,\n              anchors: [] // TODO(matsko): change to reference nodes\n            };\n\n            // the anchor animations require that the from and to elements both have at least\n            // one shared CSS class which effectively marries the two elements together to use\n            // the same animation driver and to properly sequence the anchor animation.\n            if (group.classes.length) {\n              preparedAnimations.push(group);\n            } else {\n              preparedAnimations.push(fromAnimation);\n              preparedAnimations.push(toAnimation);\n            }\n          }\n\n          anchorGroups[lookupKey].anchors.push({\n            'out': from.element, 'in': to.element\n          });\n        });\n\n        return preparedAnimations;\n      }\n\n      function cssClassesIntersection(a,b) {\n        a = a.split(' ');\n        b = b.split(' ');\n        var matches = [];\n\n        for (var i = 0; i < a.length; i++) {\n          var aa = a[i];\n          if (aa.substring(0,3) === 'ng-') continue;\n\n          for (var j = 0; j < b.length; j++) {\n            if (aa === b[j]) {\n              matches.push(aa);\n              break;\n            }\n          }\n        }\n\n        return matches.join(' ');\n      }\n\n      function invokeFirstDriver(animationDetails) {\n        // we loop in reverse order since the more general drivers (like CSS and JS)\n        // may attempt more elements, but custom drivers are more particular\n        for (var i = drivers.length - 1; i >= 0; i--) {\n          var driverName = drivers[i];\n          if (!$injector.has(driverName)) continue; // TODO(matsko): remove this check\n\n          var factory = $injector.get(driverName);\n          var driver = factory(animationDetails);\n          if (driver) {\n            return driver;\n          }\n        }\n      }\n\n      function beforeStart() {\n        element.addClass(NG_ANIMATE_CLASSNAME);\n        if (tempClasses) {\n          $$jqLite.addClass(element, tempClasses);\n        }\n        if (prepareClassName) {\n          $$jqLite.removeClass(element, prepareClassName);\n          prepareClassName = null;\n        }\n      }\n\n      function updateAnimationRunners(animation, newRunner) {\n        if (animation.from && animation.to) {\n          update(animation.from.element);\n          update(animation.to.element);\n        } else {\n          update(animation.element);\n        }\n\n        function update(element) {\n          getRunner(element).setHost(newRunner);\n        }\n      }\n\n      function handleDestroyedElement() {\n        var runner = getRunner(element);\n        if (runner && (event !== 'leave' || !options.$$domOperationFired)) {\n          runner.end();\n        }\n      }\n\n      function close(rejected) { // jshint ignore:line\n        element.off('$destroy', handleDestroyedElement);\n        removeRunner(element);\n\n        applyAnimationClasses(element, options);\n        applyAnimationStyles(element, options);\n        options.domOperation();\n\n        if (tempClasses) {\n          $$jqLite.removeClass(element, tempClasses);\n        }\n\n        element.removeClass(NG_ANIMATE_CLASSNAME);\n        runner.complete(!rejected);\n      }\n    };\n  }];\n}];\n\n/**\n * @ngdoc directive\n * @name ngAnimateSwap\n * @restrict A\n * @scope\n *\n * @description\n *\n * ngAnimateSwap is a animation-oriented directive that allows for the container to\n * be removed and entered in whenever the associated expression changes. A\n * common usecase for this directive is a rotating banner or slider component which\n * contains one image being present at a time. When the active image changes\n * then the old image will perform a `leave` animation and the new element\n * will be inserted via an `enter` animation.\n *\n * @animations\n * | Animation                        | Occurs                               |\n * |----------------------------------|--------------------------------------|\n * | {@link ng.$animate#enter enter}  | when the new element is inserted to the DOM  |\n * | {@link ng.$animate#leave leave}  | when the old element is removed from the DOM |\n *\n * @example\n * <example name=\"ngAnimateSwap-directive\" module=\"ngAnimateSwapExample\"\n *          deps=\"angular-animate.js\"\n *          animations=\"true\" fixBase=\"true\">\n *   <file name=\"index.html\">\n *     <div class=\"container\" ng-controller=\"AppCtrl\">\n *       <div ng-animate-swap=\"number\" class=\"cell swap-animation\" ng-class=\"colorClass(number)\">\n *         {{ number }}\n *       </div>\n *     </div>\n *   </file>\n *   <file name=\"script.js\">\n *     angular.module('ngAnimateSwapExample', ['ngAnimate'])\n *       .controller('AppCtrl', ['$scope', '$interval', function($scope, $interval) {\n *         $scope.number = 0;\n *         $interval(function() {\n *           $scope.number++;\n *         }, 1000);\n *\n *         var colors = ['red','blue','green','yellow','orange'];\n *         $scope.colorClass = function(number) {\n *           return colors[number % colors.length];\n *         };\n *       }]);\n *   </file>\n *  <file name=\"animations.css\">\n *  .container {\n *    height:250px;\n *    width:250px;\n *    position:relative;\n *    overflow:hidden;\n *    border:2px solid black;\n *  }\n *  .container .cell {\n *    font-size:150px;\n *    text-align:center;\n *    line-height:250px;\n *    position:absolute;\n *    top:0;\n *    left:0;\n *    right:0;\n *    border-bottom:2px solid black;\n *  }\n *  .swap-animation.ng-enter, .swap-animation.ng-leave {\n *    transition:0.5s linear all;\n *  }\n *  .swap-animation.ng-enter {\n *    top:-250px;\n *  }\n *  .swap-animation.ng-enter-active {\n *    top:0px;\n *  }\n *  .swap-animation.ng-leave {\n *    top:0px;\n *  }\n *  .swap-animation.ng-leave-active {\n *    top:250px;\n *  }\n *  .red { background:red; }\n *  .green { background:green; }\n *  .blue { background:blue; }\n *  .yellow { background:yellow; }\n *  .orange { background:orange; }\n *  </file>\n * </example>\n */\nvar ngAnimateSwapDirective = ['$animate', '$rootScope', function($animate, $rootScope) {\n  return {\n    restrict: 'A',\n    transclude: 'element',\n    terminal: true,\n    priority: 600, // we use 600 here to ensure that the directive is caught before others\n    link: function(scope, $element, attrs, ctrl, $transclude) {\n      var previousElement, previousScope;\n      scope.$watchCollection(attrs.ngAnimateSwap || attrs['for'], function(value) {\n        if (previousElement) {\n          $animate.leave(previousElement);\n        }\n        if (previousScope) {\n          previousScope.$destroy();\n          previousScope = null;\n        }\n        if (value || value === 0) {\n          previousScope = scope.$new();\n          $transclude(previousScope, function(element) {\n            previousElement = element;\n            $animate.enter(element, null, $element);\n          });\n        }\n      });\n    }\n  };\n}];\n\n/* global angularAnimateModule: true,\n\n   ngAnimateSwapDirective,\n   $$AnimateAsyncRunFactory,\n   $$rAFSchedulerFactory,\n   $$AnimateChildrenDirective,\n   $$AnimateQueueProvider,\n   $$AnimationProvider,\n   $AnimateCssProvider,\n   $$AnimateCssDriverProvider,\n   $$AnimateJsProvider,\n   $$AnimateJsDriverProvider,\n*/\n\n/**\n * @ngdoc module\n * @name ngAnimate\n * @description\n *\n * The `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via\n * callback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an Angular app.\n *\n * <div doc-module-components=\"ngAnimate\"></div>\n *\n * # Usage\n * Simply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based\n * using CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For\n * both CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within\n * the HTML element that the animation will be triggered on.\n *\n * ## Directive Support\n * The following directives are \"animation aware\":\n *\n * | Directive                                                                                                | Supported Animations                                                     |\n * |----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n * | {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |\n * | {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |\n * | {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |\n * | {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |\n * | {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |\n * | {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |\n * | {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |\n * | {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |\n * | {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |\n * | {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |\n *\n * (More information can be found by visiting each the documentation associated with each directive.)\n *\n * ## CSS-based Animations\n *\n * CSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML\n * and CSS code we can create an animation that will be picked up by Angular when an the underlying directive performs an operation.\n *\n * The example below shows how an `enter` animation can be made possible on an element using `ng-if`:\n *\n * ```html\n * <div ng-if=\"bool\" class=\"fade\">\n *    Fade me in out\n * </div>\n * <button ng-click=\"bool=true\">Fade In!</button>\n * <button ng-click=\"bool=false\">Fade Out!</button>\n * ```\n *\n * Notice the CSS class **fade**? We can now create the CSS transition code that references this class:\n *\n * ```css\n * /&#42; The starting CSS styles for the enter animation &#42;/\n * .fade.ng-enter {\n *   transition:0.5s linear all;\n *   opacity:0;\n * }\n *\n * /&#42; The finishing CSS styles for the enter animation &#42;/\n * .fade.ng-enter.ng-enter-active {\n *   opacity:1;\n * }\n * ```\n *\n * The key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two\n * generated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition\n * code **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.\n *\n * If for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:\n *\n * ```css\n * /&#42; now the element will fade out before it is removed from the DOM &#42;/\n * .fade.ng-leave {\n *   transition:0.5s linear all;\n *   opacity:1;\n * }\n * .fade.ng-leave.ng-leave-active {\n *   opacity:0;\n * }\n * ```\n *\n * We can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:\n *\n * ```css\n * /&#42; there is no need to define anything inside of the destination\n * CSS class since the keyframe will take charge of the animation &#42;/\n * .fade.ng-leave {\n *   animation: my_fade_animation 0.5s linear;\n *   -webkit-animation: my_fade_animation 0.5s linear;\n * }\n *\n * @keyframes my_fade_animation {\n *   from { opacity:1; }\n *   to { opacity:0; }\n * }\n *\n * @-webkit-keyframes my_fade_animation {\n *   from { opacity:1; }\n *   to { opacity:0; }\n * }\n * ```\n *\n * Feel free also mix transitions and keyframes together as well as any other CSS classes on the same element.\n *\n * ### CSS Class-based Animations\n *\n * Class-based animations (animations that are triggered via `ngClass`, `ngShow`, `ngHide` and some other directives) have a slightly different\n * naming convention. Class-based animations are basic enough that a standard transition or keyframe can be referenced on the class being added\n * and removed.\n *\n * For example if we wanted to do a CSS animation for `ngHide` then we place an animation on the `.ng-hide` CSS class:\n *\n * ```html\n * <div ng-show=\"bool\" class=\"fade\">\n *   Show and hide me\n * </div>\n * <button ng-click=\"bool=!bool\">Toggle</button>\n *\n * <style>\n * .fade.ng-hide {\n *   transition:0.5s linear all;\n *   opacity:0;\n * }\n * </style>\n * ```\n *\n * All that is going on here with ngShow/ngHide behind the scenes is the `.ng-hide` class is added/removed (when the hidden state is valid). Since\n * ngShow and ngHide are animation aware then we can match up a transition and ngAnimate handles the rest.\n *\n * In addition the addition and removal of the CSS class, ngAnimate also provides two helper methods that we can use to further decorate the animation\n * with CSS styles.\n *\n * ```html\n * <div ng-class=\"{on:onOff}\" class=\"highlight\">\n *   Highlight this box\n * </div>\n * <button ng-click=\"onOff=!onOff\">Toggle</button>\n *\n * <style>\n * .highlight {\n *   transition:0.5s linear all;\n * }\n * .highlight.on-add {\n *   background:white;\n * }\n * .highlight.on {\n *   background:yellow;\n * }\n * .highlight.on-remove {\n *   background:black;\n * }\n * </style>\n * ```\n *\n * We can also make use of CSS keyframes by placing them within the CSS classes.\n *\n *\n * ### CSS Staggering Animations\n * A Staggering animation is a collection of animations that are issued with a slight delay in between each successive operation resulting in a\n * curtain-like effect. The ngAnimate module (versions >=1.2) supports staggering animations and the stagger effect can be\n * performed by creating a **ng-EVENT-stagger** CSS class and attaching that class to the base CSS class used for\n * the animation. The style property expected within the stagger class can either be a **transition-delay** or an\n * **animation-delay** property (or both if your animation contains both transitions and keyframe animations).\n *\n * ```css\n * .my-animation.ng-enter {\n *   /&#42; standard transition code &#42;/\n *   transition: 1s linear all;\n *   opacity:0;\n * }\n * .my-animation.ng-enter-stagger {\n *   /&#42; this will have a 100ms delay between each successive leave animation &#42;/\n *   transition-delay: 0.1s;\n *\n *   /&#42; As of 1.4.4, this must always be set: it signals ngAnimate\n *     to not accidentally inherit a delay property from another CSS class &#42;/\n *   transition-duration: 0s;\n * }\n * .my-animation.ng-enter.ng-enter-active {\n *   /&#42; standard transition styles &#42;/\n *   opacity:1;\n * }\n * ```\n *\n * Staggering animations work by default in ngRepeat (so long as the CSS class is defined). Outside of ngRepeat, to use staggering animations\n * on your own, they can be triggered by firing multiple calls to the same event on $animate. However, the restrictions surrounding this\n * are that each of the elements must have the same CSS className value as well as the same parent element. A stagger operation\n * will also be reset if one or more animation frames have passed since the multiple calls to `$animate` were fired.\n *\n * The following code will issue the **ng-leave-stagger** event on the element provided:\n *\n * ```js\n * var kids = parent.children();\n *\n * $animate.leave(kids[0]); //stagger index=0\n * $animate.leave(kids[1]); //stagger index=1\n * $animate.leave(kids[2]); //stagger index=2\n * $animate.leave(kids[3]); //stagger index=3\n * $animate.leave(kids[4]); //stagger index=4\n *\n * window.requestAnimationFrame(function() {\n *   //stagger has reset itself\n *   $animate.leave(kids[5]); //stagger index=0\n *   $animate.leave(kids[6]); //stagger index=1\n *\n *   $scope.$digest();\n * });\n * ```\n *\n * Stagger animations are currently only supported within CSS-defined animations.\n *\n * ### The `ng-animate` CSS class\n *\n * When ngAnimate is animating an element it will apply the `ng-animate` CSS class to the element for the duration of the animation.\n * This is a temporary CSS class and it will be removed once the animation is over (for both JavaScript and CSS-based animations).\n *\n * Therefore, animations can be applied to an element using this temporary class directly via CSS.\n *\n * ```css\n * .zipper.ng-animate {\n *   transition:0.5s linear all;\n * }\n * .zipper.ng-enter {\n *   opacity:0;\n * }\n * .zipper.ng-enter.ng-enter-active {\n *   opacity:1;\n * }\n * .zipper.ng-leave {\n *   opacity:1;\n * }\n * .zipper.ng-leave.ng-leave-active {\n *   opacity:0;\n * }\n * ```\n *\n * (Note that the `ng-animate` CSS class is reserved and it cannot be applied on an element directly since ngAnimate will always remove\n * the CSS class once an animation has completed.)\n *\n *\n * ### The `ng-[event]-prepare` class\n *\n * This is a special class that can be used to prevent unwanted flickering / flash of content before\n * the actual animation starts. The class is added as soon as an animation is initialized, but removed\n * before the actual animation starts (after waiting for a $digest).\n * It is also only added for *structural* animations (`enter`, `move`, and `leave`).\n *\n * In practice, flickering can appear when nesting elements with structural animations such as `ngIf`\n * into elements that have class-based animations such as `ngClass`.\n *\n * ```html\n * <div ng-class=\"{red: myProp}\">\n *   <div ng-class=\"{blue: myProp}\">\n *     <div class=\"message\" ng-if=\"myProp\"></div>\n *   </div>\n * </div>\n * ```\n *\n * It is possible that during the `enter` animation, the `.message` div will be briefly visible before it starts animating.\n * In that case, you can add styles to the CSS that make sure the element stays hidden before the animation starts:\n *\n * ```css\n * .message.ng-enter-prepare {\n *   opacity: 0;\n * }\n *\n * ```\n *\n * ## JavaScript-based Animations\n *\n * ngAnimate also allows for animations to be consumed by JavaScript code. The approach is similar to CSS-based animations (where there is a shared\n * CSS class that is referenced in our HTML code) but in addition we need to register the JavaScript animation on the module. By making use of the\n * `module.animation()` module function we can register the animation.\n *\n * Let's see an example of a enter/leave animation using `ngRepeat`:\n *\n * ```html\n * <div ng-repeat=\"item in items\" class=\"slide\">\n *   {{ item }}\n * </div>\n * ```\n *\n * See the **slide** CSS class? Let's use that class to define an animation that we'll structure in our module code by using `module.animation`:\n *\n * ```js\n * myModule.animation('.slide', [function() {\n *   return {\n *     // make note that other events (like addClass/removeClass)\n *     // have different function input parameters\n *     enter: function(element, doneFn) {\n *       jQuery(element).fadeIn(1000, doneFn);\n *\n *       // remember to call doneFn so that angular\n *       // knows that the animation has concluded\n *     },\n *\n *     move: function(element, doneFn) {\n *       jQuery(element).fadeIn(1000, doneFn);\n *     },\n *\n *     leave: function(element, doneFn) {\n *       jQuery(element).fadeOut(1000, doneFn);\n *     }\n *   }\n * }]);\n * ```\n *\n * The nice thing about JS-based animations is that we can inject other services and make use of advanced animation libraries such as\n * greensock.js and velocity.js.\n *\n * If our animation code class-based (meaning that something like `ngClass`, `ngHide` and `ngShow` triggers it) then we can still define\n * our animations inside of the same registered animation, however, the function input arguments are a bit different:\n *\n * ```html\n * <div ng-class=\"color\" class=\"colorful\">\n *   this box is moody\n * </div>\n * <button ng-click=\"color='red'\">Change to red</button>\n * <button ng-click=\"color='blue'\">Change to blue</button>\n * <button ng-click=\"color='green'\">Change to green</button>\n * ```\n *\n * ```js\n * myModule.animation('.colorful', [function() {\n *   return {\n *     addClass: function(element, className, doneFn) {\n *       // do some cool animation and call the doneFn\n *     },\n *     removeClass: function(element, className, doneFn) {\n *       // do some cool animation and call the doneFn\n *     },\n *     setClass: function(element, addedClass, removedClass, doneFn) {\n *       // do some cool animation and call the doneFn\n *     }\n *   }\n * }]);\n * ```\n *\n * ## CSS + JS Animations Together\n *\n * AngularJS 1.4 and higher has taken steps to make the amalgamation of CSS and JS animations more flexible. However, unlike earlier versions of Angular,\n * defining CSS and JS animations to work off of the same CSS class will not work anymore. Therefore the example below will only result in **JS animations taking\n * charge of the animation**:\n *\n * ```html\n * <div ng-if=\"bool\" class=\"slide\">\n *   Slide in and out\n * </div>\n * ```\n *\n * ```js\n * myModule.animation('.slide', [function() {\n *   return {\n *     enter: function(element, doneFn) {\n *       jQuery(element).slideIn(1000, doneFn);\n *     }\n *   }\n * }]);\n * ```\n *\n * ```css\n * .slide.ng-enter {\n *   transition:0.5s linear all;\n *   transform:translateY(-100px);\n * }\n * .slide.ng-enter.ng-enter-active {\n *   transform:translateY(0);\n * }\n * ```\n *\n * Does this mean that CSS and JS animations cannot be used together? Do JS-based animations always have higher priority? We can make up for the\n * lack of CSS animations by using the `$animateCss` service to trigger our own tweaked-out, CSS-based animations directly from\n * our own JS-based animation code:\n *\n * ```js\n * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element) {\n*        // this will trigger `.slide.ng-enter` and `.slide.ng-enter-active`.\n *       return $animateCss(element, {\n *         event: 'enter',\n *         structural: true\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * The nice thing here is that we can save bandwidth by sticking to our CSS-based animation code and we don't need to rely on a 3rd-party animation framework.\n *\n * The `$animateCss` service is very powerful since we can feed in all kinds of extra properties that will be evaluated and fed into a CSS transition or\n * keyframe animation. For example if we wanted to animate the height of an element while adding and removing classes then we can do so by providing that\n * data into `$animateCss` directly:\n *\n * ```js\n * myModule.animation('.slide', ['$animateCss', function($animateCss) {\n *   return {\n *     enter: function(element) {\n *       return $animateCss(element, {\n *         event: 'enter',\n *         structural: true,\n *         addClass: 'maroon-setting',\n *         from: { height:0 },\n *         to: { height: 200 }\n *       });\n *     }\n *   }\n * }]);\n * ```\n *\n * Now we can fill in the rest via our transition CSS code:\n *\n * ```css\n * /&#42; the transition tells ngAnimate to make the animation happen &#42;/\n * .slide.ng-enter { transition:0.5s linear all; }\n *\n * /&#42; this extra CSS class will be absorbed into the transition\n * since the $animateCss code is adding the class &#42;/\n * .maroon-setting { background:red; }\n * ```\n *\n * And `$animateCss` will figure out the rest. Just make sure to have the `done()` callback fire the `doneFn` function to signal when the animation is over.\n *\n * To learn more about what's possible be sure to visit the {@link ngAnimate.$animateCss $animateCss service}.\n *\n * ## Animation Anchoring (via `ng-animate-ref`)\n *\n * ngAnimate in AngularJS 1.4 comes packed with the ability to cross-animate elements between\n * structural areas of an application (like views) by pairing up elements using an attribute\n * called `ng-animate-ref`.\n *\n * Let's say for example we have two views that are managed by `ng-view` and we want to show\n * that there is a relationship between two components situated in within these views. By using the\n * `ng-animate-ref` attribute we can identify that the two components are paired together and we\n * can then attach an animation, which is triggered when the view changes.\n *\n * Say for example we have the following template code:\n *\n * ```html\n * <!-- index.html -->\n * <div ng-view class=\"view-animation\">\n * </div>\n *\n * <!-- home.html -->\n * <a href=\"#/banner-page\">\n *   <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n * </a>\n *\n * <!-- banner-page.html -->\n * <img src=\"./banner.jpg\" class=\"banner\" ng-animate-ref=\"banner\">\n * ```\n *\n * Now, when the view changes (once the link is clicked), ngAnimate will examine the\n * HTML contents to see if there is a match reference between any components in the view\n * that is leaving and the view that is entering. It will scan both the view which is being\n * removed (leave) and inserted (enter) to see if there are any paired DOM elements that\n * contain a matching ref value.\n *\n * The two images match since they share the same ref value. ngAnimate will now create a\n * transport element (which is a clone of the first image element) and it will then attempt\n * to animate to the position of the second image element in the next view. For the animation to\n * work a special CSS class called `ng-anchor` will be added to the transported element.\n *\n * We can now attach a transition onto the `.banner.ng-anchor` CSS class and then\n * ngAnimate will handle the entire transition for us as well as the addition and removal of\n * any changes of CSS classes between the elements:\n *\n * ```css\n * .banner.ng-anchor {\n *   /&#42; this animation will last for 1 second since there are\n *          two phases to the animation (an `in` and an `out` phase) &#42;/\n *   transition:0.5s linear all;\n * }\n * ```\n *\n * We also **must** include animations for the views that are being entered and removed\n * (otherwise anchoring wouldn't be possible since the new view would be inserted right away).\n *\n * ```css\n * .view-animation.ng-enter, .view-animation.ng-leave {\n *   transition:0.5s linear all;\n *   position:fixed;\n *   left:0;\n *   top:0;\n *   width:100%;\n * }\n * .view-animation.ng-enter {\n *   transform:translateX(100%);\n * }\n * .view-animation.ng-leave,\n * .view-animation.ng-enter.ng-enter-active {\n *   transform:translateX(0%);\n * }\n * .view-animation.ng-leave.ng-leave-active {\n *   transform:translateX(-100%);\n * }\n * ```\n *\n * Now we can jump back to the anchor animation. When the animation happens, there are two stages that occur:\n * an `out` and an `in` stage. The `out` stage happens first and that is when the element is animated away\n * from its origin. Once that animation is over then the `in` stage occurs which animates the\n * element to its destination. The reason why there are two animations is to give enough time\n * for the enter animation on the new element to be ready.\n *\n * The example above sets up a transition for both the in and out phases, but we can also target the out or\n * in phases directly via `ng-anchor-out` and `ng-anchor-in`.\n *\n * ```css\n * .banner.ng-anchor-out {\n *   transition: 0.5s linear all;\n *\n *   /&#42; the scale will be applied during the out animation,\n *          but will be animated away when the in animation runs &#42;/\n *   transform: scale(1.2);\n * }\n *\n * .banner.ng-anchor-in {\n *   transition: 1s linear all;\n * }\n * ```\n *\n *\n *\n *\n * ### Anchoring Demo\n *\n  <example module=\"anchoringExample\"\n           name=\"anchoringExample\"\n           id=\"anchoringExample\"\n           deps=\"angular-animate.js;angular-route.js\"\n           animations=\"true\">\n    <file name=\"index.html\">\n      <a href=\"#/\">Home</a>\n      <hr />\n      <div class=\"view-container\">\n        <div ng-view class=\"view\"></div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('anchoringExample', ['ngAnimate', 'ngRoute'])\n        .config(['$routeProvider', function($routeProvider) {\n          $routeProvider.when('/', {\n            templateUrl: 'home.html',\n            controller: 'HomeController as home'\n          });\n          $routeProvider.when('/profile/:id', {\n            templateUrl: 'profile.html',\n            controller: 'ProfileController as profile'\n          });\n        }])\n        .run(['$rootScope', function($rootScope) {\n          $rootScope.records = [\n            { id:1, title: \"Miss Beulah Roob\" },\n            { id:2, title: \"Trent Morissette\" },\n            { id:3, title: \"Miss Ava Pouros\" },\n            { id:4, title: \"Rod Pouros\" },\n            { id:5, title: \"Abdul Rice\" },\n            { id:6, title: \"Laurie Rutherford Sr.\" },\n            { id:7, title: \"Nakia McLaughlin\" },\n            { id:8, title: \"Jordon Blanda DVM\" },\n            { id:9, title: \"Rhoda Hand\" },\n            { id:10, title: \"Alexandrea Sauer\" }\n          ];\n        }])\n        .controller('HomeController', [function() {\n          //empty\n        }])\n        .controller('ProfileController', ['$rootScope', '$routeParams', function($rootScope, $routeParams) {\n          var index = parseInt($routeParams.id, 10);\n          var record = $rootScope.records[index - 1];\n\n          this.title = record.title;\n          this.id = record.id;\n        }]);\n    </file>\n    <file name=\"home.html\">\n      <h2>Welcome to the home page</h1>\n      <p>Please click on an element</p>\n      <a class=\"record\"\n         ng-href=\"#/profile/{{ record.id }}\"\n         ng-animate-ref=\"{{ record.id }}\"\n         ng-repeat=\"record in records\">\n        {{ record.title }}\n      </a>\n    </file>\n    <file name=\"profile.html\">\n      <div class=\"profile record\" ng-animate-ref=\"{{ profile.id }}\">\n        {{ profile.title }}\n      </div>\n    </file>\n    <file name=\"animations.css\">\n      .record {\n        display:block;\n        font-size:20px;\n      }\n      .profile {\n        background:black;\n        color:white;\n        font-size:100px;\n      }\n      .view-container {\n        position:relative;\n      }\n      .view-container > .view.ng-animate {\n        position:absolute;\n        top:0;\n        left:0;\n        width:100%;\n        min-height:500px;\n      }\n      .view.ng-enter, .view.ng-leave,\n      .record.ng-anchor {\n        transition:0.5s linear all;\n      }\n      .view.ng-enter {\n        transform:translateX(100%);\n      }\n      .view.ng-enter.ng-enter-active, .view.ng-leave {\n        transform:translateX(0%);\n      }\n      .view.ng-leave.ng-leave-active {\n        transform:translateX(-100%);\n      }\n      .record.ng-anchor-out {\n        background:red;\n      }\n    </file>\n  </example>\n *\n * ### How is the element transported?\n *\n * When an anchor animation occurs, ngAnimate will clone the starting element and position it exactly where the starting\n * element is located on screen via absolute positioning. The cloned element will be placed inside of the root element\n * of the application (where ng-app was defined) and all of the CSS classes of the starting element will be applied. The\n * element will then animate into the `out` and `in` animations and will eventually reach the coordinates and match\n * the dimensions of the destination element. During the entire animation a CSS class of `.ng-animate-shim` will be applied\n * to both the starting and destination elements in order to hide them from being visible (the CSS styling for the class\n * is: `visibility:hidden`). Once the anchor reaches its destination then it will be removed and the destination element\n * will become visible since the shim class will be removed.\n *\n * ### How is the morphing handled?\n *\n * CSS Anchoring relies on transitions and keyframes and the internal code is intelligent enough to figure out\n * what CSS classes differ between the starting element and the destination element. These different CSS classes\n * will be added/removed on the anchor element and a transition will be applied (the transition that is provided\n * in the anchor class). Long story short, ngAnimate will figure out what classes to add and remove which will\n * make the transition of the element as smooth and automatic as possible. Be sure to use simple CSS classes that\n * do not rely on DOM nesting structure so that the anchor element appears the same as the starting element (since\n * the cloned element is placed inside of root element which is likely close to the body element).\n *\n * Note that if the root element is on the `<html>` element then the cloned node will be placed inside of body.\n *\n *\n * ## Using $animate in your directive code\n *\n * So far we've explored how to feed in animations into an Angular application, but how do we trigger animations within our own directives in our application?\n * By injecting the `$animate` service into our directive code, we can trigger structural and class-based hooks which can then be consumed by animations. Let's\n * imagine we have a greeting box that shows and hides itself when the data changes\n *\n * ```html\n * <greeting-box active=\"onOrOff\">Hi there</greeting-box>\n * ```\n *\n * ```js\n * ngModule.directive('greetingBox', ['$animate', function($animate) {\n *   return function(scope, element, attrs) {\n *     attrs.$observe('active', function(value) {\n *       value ? $animate.addClass(element, 'on') : $animate.removeClass(element, 'on');\n *     });\n *   });\n * }]);\n * ```\n *\n * Now the `on` CSS class is added and removed on the greeting box component. Now if we add a CSS class on top of the greeting box element\n * in our HTML code then we can trigger a CSS or JS animation to happen.\n *\n * ```css\n * /&#42; normally we would create a CSS class to reference on the element &#42;/\n * greeting-box.on { transition:0.5s linear all; background:green; color:white; }\n * ```\n *\n * The `$animate` service contains a variety of other methods like `enter`, `leave`, `animate` and `setClass`. To learn more about what's\n * possible be sure to visit the {@link ng.$animate $animate service API page}.\n *\n *\n * ## Callbacks and Promises\n *\n * When `$animate` is called it returns a promise that can be used to capture when the animation has ended. Therefore if we were to trigger\n * an animation (within our directive code) then we can continue performing directive and scope related activities after the animation has\n * ended by chaining onto the returned promise that animation method returns.\n *\n * ```js\n * // somewhere within the depths of the directive\n * $animate.enter(element, parent).then(function() {\n *   //the animation has completed\n * });\n * ```\n *\n * (Note that earlier versions of Angular prior to v1.4 required the promise code to be wrapped using `$scope.$apply(...)`. This is not the case\n * anymore.)\n *\n * In addition to the animation promise, we can also make use of animation-related callbacks within our directives and controller code by registering\n * an event listener using the `$animate` service. Let's say for example that an animation was triggered on our view\n * routing controller to hook into that:\n *\n * ```js\n * ngModule.controller('HomePageController', ['$animate', function($animate) {\n *   $animate.on('enter', ngViewElement, function(element) {\n *     // the animation for this route has completed\n *   }]);\n * }])\n * ```\n *\n * (Note that you will need to trigger a digest within the callback to get angular to notice any scope-related changes.)\n */\n\n/**\n * @ngdoc service\n * @name $animate\n * @kind object\n *\n * @description\n * The ngAnimate `$animate` service documentation is the same for the core `$animate` service.\n *\n * Click here {@link ng.$animate to learn more about animations with `$animate`}.\n */\nangular.module('ngAnimate', [])\n  .directive('ngAnimateSwap', ngAnimateSwapDirective)\n\n  .directive('ngAnimateChildren', $$AnimateChildrenDirective)\n  .factory('$$rAFScheduler', $$rAFSchedulerFactory)\n\n  .provider('$$animateQueue', $$AnimateQueueProvider)\n  .provider('$$animation', $$AnimationProvider)\n\n  .provider('$animateCss', $AnimateCssProvider)\n  .provider('$$animateCssDriver', $$AnimateCssDriverProvider)\n\n  .provider('$$animateJs', $$AnimateJsProvider)\n  .provider('$$animateJsDriver', $$AnimateJsDriverProvider);\n\n\n})(window, window.angular);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-animate/angular-animate.js\n ** module id = 72\n ** module chunks = 1\n **/","require('./carousel.css');\nmodule.exports = require('./index-nocss.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/carousel/index.js\n ** module id = 73\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../css-loader/index.js!./carousel.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../css-loader/index.js!./carousel.css\", function() {\n\t\t\tvar newContent = require(\"!!./../../../css-loader/index.js!./carousel.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/carousel/carousel.css\n ** module id = 74\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../../css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".ng-animate.item:not(.left):not(.right){-webkit-transition:left 0s ease-in-out;transition:left 0s ease-in-out}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/angular-ui-bootstrap/src/carousel/carousel.css\n ** module id = 75\n ** module chunks = 1\n **/","require('../../template/carousel/carousel.html.js');\nrequire('../../template/carousel/slide.html.js');\nrequire('./carousel');\n\nvar MODULE_NAME = 'ui.bootstrap.module.carousel';\n\nangular.module(MODULE_NAME, ['ui.bootstrap.carousel', 'uib/template/carousel/carousel.html', 'uib/template/carousel/slide.html']);\n\nmodule.exports = MODULE_NAME;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/carousel/index-nocss.js\n ** module id = 76\n ** module chunks = 1\n **/","angular.module(\"uib/template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/carousel/carousel.html\",\n    \"<div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"<a role=\\\"button\\\" href class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-class=\\\"{ disabled: isPrevDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">previous</span>\\n\" +\n    \"</a>\\n\" +\n    \"<a role=\\\"button\\\" href class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-class=\\\"{ disabled: isNextDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">next</span>\\n\" +\n    \"</a>\\n\" +\n    \"<ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <li ng-repeat=\\\"slide in slides | orderBy:indexOfSlide track by $index\\\" ng-class=\\\"{ active: isActive(slide) }\\\" ng-click=\\\"select(slide)\\\">\\n\" +\n    \"    <span class=\\\"sr-only\\\">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if=\\\"isActive(slide)\\\">, currently active</span></span>\\n\" +\n    \"  </li>\\n\" +\n    \"</ol>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/carousel/carousel.html.js\n ** module id = 77\n ** module chunks = 1\n **/","angular.module(\"uib/template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/carousel/slide.html\",\n    \"<div class=\\\"text-center\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/template/carousel/slide.html.js\n ** module id = 78\n ** module chunks = 1\n **/","angular.module('ui.bootstrap.carousel', [])\n\n.controller('UibCarouselController', ['$scope', '$element', '$interval', '$timeout', '$animate', function($scope, $element, $interval, $timeout, $animate) {\n  var self = this,\n    slides = self.slides = $scope.slides = [],\n    SLIDE_DIRECTION = 'uib-slideDirection',\n    currentIndex = $scope.active,\n    currentInterval, isPlaying, bufferedTransitions = [];\n\n  var destroyed = false;\n  $element.addClass('carousel');\n\n  self.addSlide = function(slide, element) {\n    slides.push({\n      slide: slide,\n      element: element\n    });\n    slides.sort(function(a, b) {\n      return +a.slide.index - +b.slide.index;\n    });\n    //if this is the first slide or the slide is set to active, select it\n    if (slide.index === $scope.active || slides.length === 1 && !angular.isNumber($scope.active)) {\n      if ($scope.$currentTransition) {\n        $scope.$currentTransition = null;\n      }\n\n      currentIndex = slide.index;\n      $scope.active = slide.index;\n      setActive(currentIndex);\n      self.select(slides[findSlideIndex(slide)]);\n      if (slides.length === 1) {\n        $scope.play();\n      }\n    }\n  };\n\n  self.getCurrentIndex = function() {\n    for (var i = 0; i < slides.length; i++) {\n      if (slides[i].slide.index === currentIndex) {\n        return i;\n      }\n    }\n  };\n\n  self.next = $scope.next = function() {\n    var newIndex = (self.getCurrentIndex() + 1) % slides.length;\n\n    if (newIndex === 0 && $scope.noWrap()) {\n      $scope.pause();\n      return;\n    }\n\n    return self.select(slides[newIndex], 'next');\n  };\n\n  self.prev = $scope.prev = function() {\n    var newIndex = self.getCurrentIndex() - 1 < 0 ? slides.length - 1 : self.getCurrentIndex() - 1;\n\n    if ($scope.noWrap() && newIndex === slides.length - 1) {\n      $scope.pause();\n      return;\n    }\n\n    return self.select(slides[newIndex], 'prev');\n  };\n\n  self.removeSlide = function(slide) {\n    var index = findSlideIndex(slide);\n\n    var bufferedIndex = bufferedTransitions.indexOf(slides[index]);\n    if (bufferedIndex !== -1) {\n      bufferedTransitions.splice(bufferedIndex, 1);\n    }\n\n    //get the index of the slide inside the carousel\n    slides.splice(index, 1);\n    if (slides.length > 0 && currentIndex === index) {\n      if (index >= slides.length) {\n        currentIndex = slides.length - 1;\n        $scope.active = currentIndex;\n        setActive(currentIndex);\n        self.select(slides[slides.length - 1]);\n      } else {\n        currentIndex = index;\n        $scope.active = currentIndex;\n        setActive(currentIndex);\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n      $scope.active = currentIndex;\n    }\n\n    //clean the active value when no more slide\n    if (slides.length === 0) {\n      currentIndex = null;\n      $scope.active = null;\n      clearBufferedTransitions();\n    }\n  };\n\n  /* direction: \"prev\" or \"next\" */\n  self.select = $scope.select = function(nextSlide, direction) {\n    var nextIndex = findSlideIndex(nextSlide.slide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n    }\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (nextSlide.slide.index !== currentIndex &&\n      !$scope.$currentTransition) {\n      goNext(nextSlide.slide, nextIndex, direction);\n    } else if (nextSlide && nextSlide.slide.index !== currentIndex && $scope.$currentTransition) {\n      bufferedTransitions.push(slides[nextIndex]);\n    }\n  };\n\n  /* Allow outside people to call indexOf on slides array */\n  $scope.indexOfSlide = function(slide) {\n    return +slide.slide.index;\n  };\n\n  $scope.isActive = function(slide) {\n    return $scope.active === slide.slide.index;\n  };\n\n  $scope.isPrevDisabled = function() {\n    return $scope.active === 0 && $scope.noWrap();\n  };\n\n  $scope.isNextDisabled = function() {\n    return $scope.active === slides.length - 1 && $scope.noWrap();\n  };\n\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      resetTimer();\n    }\n  };\n\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n\n  $element.on('mouseenter', $scope.pause);\n  $element.on('mouseleave', $scope.play);\n\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n    resetTimer();\n  });\n\n  $scope.$watch('noTransition', function(noTransition) {\n    $animate.enabled($element, !noTransition);\n  });\n\n  $scope.$watch('interval', restartTimer);\n\n  $scope.$watchCollection('slides', resetTransition);\n\n  $scope.$watch('active', function(index) {\n    if (angular.isNumber(index) && currentIndex !== index) {\n      for (var i = 0; i < slides.length; i++) {\n        if (slides[i].slide.index === index) {\n          index = i;\n          break;\n        }\n      }\n\n      var slide = slides[index];\n      if (slide) {\n        setActive(index);\n        self.select(slides[index]);\n        currentIndex = index;\n      }\n    }\n  });\n\n  function clearBufferedTransitions() {\n    while (bufferedTransitions.length) {\n      bufferedTransitions.shift();\n    }\n  }\n\n  function getSlideByIndex(index) {\n    for (var i = 0, l = slides.length; i < l; ++i) {\n      if (slides[i].index === index) {\n        return slides[i];\n      }\n    }\n  }\n\n  function setActive(index) {\n    for (var i = 0; i < slides.length; i++) {\n      slides[i].slide.active = i === index;\n    }\n  }\n\n  function goNext(slide, index, direction) {\n    if (destroyed) {\n      return;\n    }\n\n    angular.extend(slide, {direction: direction});\n    angular.extend(slides[currentIndex].slide || {}, {direction: direction});\n    if ($animate.enabled($element) && !$scope.$currentTransition &&\n      slides[index].element && self.slides.length > 1) {\n      slides[index].element.data(SLIDE_DIRECTION, slide.direction);\n      var currentIdx = self.getCurrentIndex();\n\n      if (angular.isNumber(currentIdx) && slides[currentIdx].element) {\n        slides[currentIdx].element.data(SLIDE_DIRECTION, slide.direction);\n      }\n\n      $scope.$currentTransition = true;\n      $animate.on('addClass', slides[index].element, function(element, phase) {\n        if (phase === 'close') {\n          $scope.$currentTransition = null;\n          $animate.off('addClass', element);\n          if (bufferedTransitions.length) {\n            var nextSlide = bufferedTransitions.pop().slide;\n            var nextIndex = nextSlide.index;\n            var nextDirection = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n            clearBufferedTransitions();\n\n            goNext(nextSlide, nextIndex, nextDirection);\n          }\n        }\n      });\n    }\n\n    $scope.active = slide.index;\n    currentIndex = slide.index;\n    setActive(index);\n\n    //every time you change slides, reset the timer\n    restartTimer();\n  }\n\n  function findSlideIndex(slide) {\n    for (var i = 0; i < slides.length; i++) {\n      if (slides[i].slide === slide) {\n        return i;\n      }\n    }\n  }\n\n  function resetTimer() {\n    if (currentInterval) {\n      $interval.cancel(currentInterval);\n      currentInterval = null;\n    }\n  }\n\n  function resetTransition(slides) {\n    if (!slides.length) {\n      $scope.$currentTransition = null;\n      clearBufferedTransitions();\n    }\n  }\n\n  function restartTimer() {\n    resetTimer();\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval > 0) {\n      currentInterval = $interval(timerFn, interval);\n    }\n  }\n\n  function timerFn() {\n    var interval = +$scope.interval;\n    if (isPlaying && !isNaN(interval) && interval > 0 && slides.length) {\n      $scope.next();\n    } else {\n      $scope.pause();\n    }\n  }\n}])\n\n.directive('uibCarousel', function() {\n  return {\n    transclude: true,\n    controller: 'UibCarouselController',\n    controllerAs: 'carousel',\n    restrict: 'A',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/carousel/carousel.html';\n    },\n    scope: {\n      active: '=',\n      interval: '=',\n      noTransition: '=',\n      noPause: '=',\n      noWrap: '&'\n    }\n  };\n})\n\n.directive('uibSlide', ['$animate', function($animate) {\n  return {\n    require: '^uibCarousel',\n    restrict: 'A',\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/carousel/slide.html';\n    },\n    scope: {\n      actual: '=?',\n      index: '=?'\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      element.addClass('item');\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        $animate[active ? 'addClass' : 'removeClass'](element, 'active');\n      });\n    }\n  };\n}])\n\n.animation('.item', ['$animateCss',\nfunction($animateCss) {\n  var SLIDE_DIRECTION = 'uib-slideDirection';\n\n  function removeClass(element, className, callback) {\n    element.removeClass(className);\n    if (callback) {\n      callback();\n    }\n  }\n\n  return {\n    beforeAddClass: function(element, className, done) {\n      if (className === 'active') {\n        var stopped = false;\n        var direction = element.data(SLIDE_DIRECTION);\n        var directionClass = direction === 'next' ? 'left' : 'right';\n        var removeClassFn = removeClass.bind(this, element,\n          directionClass + ' ' + direction, done);\n        element.addClass(direction);\n\n        $animateCss(element, {addClass: directionClass})\n          .start()\n          .done(removeClassFn);\n\n        return function() {\n          stopped = true;\n        };\n      }\n      done();\n    },\n    beforeRemoveClass: function (element, className, done) {\n      if (className === 'active') {\n        var stopped = false;\n        var direction = element.data(SLIDE_DIRECTION);\n        var directionClass = direction === 'next' ? 'left' : 'right';\n        var removeClassFn = removeClass.bind(this, element, directionClass, done);\n\n        $animateCss(element, {addClass: directionClass})\n          .start()\n          .done(removeClassFn);\n\n        return function() {\n          stopped = true;\n        };\n      }\n      done();\n    }\n  };\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/angular-ui-bootstrap/src/carousel/carousel.js\n ** module id = 79\n ** module chunks = 1\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./carousel.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./carousel.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./carousel.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/carousel/carousel.less\n ** module id = 80\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".carousel,.carousel-inner{position:relative}.carousel-inner{overflow:hidden;width:100%}.carousel-inner>.item{display:none;position:relative;-webkit-transition:left .6s ease-in-out;transition:left .6s ease-in-out}.carousel-inner>.item>a>img,.carousel-inner>.item>img{line-height:1}@media (-webkit-transform-3d),all and (transform-3d){.carousel-inner>.item{-webkit-transition:-webkit-transform .6s ease-in-out;transition:transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-inner>.item.active.right,.carousel-inner>.item.next{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);left:0}.carousel-inner>.item.active.left,.carousel-inner>.item.prev{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0);left:0}.carousel-inner>.item.active,.carousel-inner>.item.next.left,.carousel-inner>.item.prev.right{-webkit-transform:translateZ(0);transform:translateZ(0);left:0}}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;left:0;bottom:0;width:15%;opacity:.5;filter:alpha(opacity=50);font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);background-color:transparent}.carousel-control.left{background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,.0001));background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.0001)));background-image:linear-gradient(90deg,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#80000000\\\",endColorstr=\\\"#00000000\\\",GradientType=1)}.carousel-control.right{left:auto;right:0;background-image:-webkit-linear-gradient(left,rgba(0,0,0,.0001),rgba(0,0,0,.5));background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.0001)),to(rgba(0,0,0,.5)));background-image:linear-gradient(90deg,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5));background-repeat:repeat-x;filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=\\\"#00000000\\\",endColorstr=\\\"#80000000\\\",GradientType=1)}.carousel-control:focus,.carousel-control:hover{outline:0;color:#fff;text-decoration:none;opacity:.9;filter:alpha(opacity=90)}.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;margin-top:-10px;z-index:5;display:inline-block}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-next,.carousel-control .icon-prev{width:20px;height:20px;line-height:1;font-family:serif}.carousel-control .icon-prev:before{content:\\\"\\\\2039\\\"}.carousel-control .icon-next:before{content:\\\"\\\\203A\\\"}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;margin-left:-30%;padding-left:0;list-style:none;text-align:center}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;border:1px solid #fff;border-radius:10px;cursor:pointer;background-color:#000\\\\9;background-color:transparent}.carousel-indicators .active{margin:0;width:12px;height:12px;background-color:#fff}.carousel-caption{position:absolute;left:15%;right:15%;bottom:20px;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media screen and (min-width:768px){.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-10px;font-size:30px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{margin-right:-10px}.carousel-caption{left:20%;right:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/less-loader!./src/carousel/carousel.less\n ** module id = 81\n ** module chunks = 1\n **/","export default function runFunc($templateCache: ng.ITemplateCacheService): void {\n  'ngInject';\n\n  $templateCache.put(\"uib/template/carousel/carousel.html\",\n    \"<div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"<a role=\\\"button\\\" href class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-class=\\\"{ disabled: isPrevDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">previous</span>\\n\" +\n    \"</a>\\n\" +\n    \"<a role=\\\"button\\\" href class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-class=\\\"{ disabled: isNextDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">next</span>\\n\" +\n    \"</a>\\n\" +\n    \"<ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <li ng-repeat=\\\"slide in slides | orderBy:indexOfSlide track by $index\\\" ng-class=\\\"{ active: isActive(slide) }\\\" ng-click=\\\"select(slide)\\\">\\n\" +\n    \"    <span class=\\\"sr-only\\\">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if=\\\"isActive(slide)\\\">, currently active</span></span>\\n\" +\n    \"  </li>\\n\" +\n    \"</ol>\\n\" +\n    \"\");\n\n  $templateCache.put(\"uib/template/carousel/slide.html\",\n    \"<div class=\\\"text-center\\\" ng-transclude></div>\\n\" +\n    \"\");\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/carousel/carousel.run.ts\n **/","import * as angular from 'angular';\nimport { timestampComponent } from './timestamp.component';\n\nconst module: ng.IModule = angular.module('ep.timestamp', []);\nmodule.component('timestamp', timestampComponent);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timestamp/timestamp.module.ts\n **/","import { TimestampController } from './timestamp.controller';\n\nexport const timestampComponent: ng.IComponentOptions = {\n  controller: TimestampController,\n  controllerAs: 'vm',\n  template: require('./timestamp.partial.html'),\n  bindings: {\n    date: '<',\n    format: '<?',\n    timezone: '<?'\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timestamp/timestamp.component.ts\n **/","import * as moment from 'moment';\nimport * as momentTz from 'moment-timezone';\n\nexport class TimestampController {\n  date: string;\n  format: string;\n  timezone: string;\n\n  formattedDate: string;\n\n  constructor() { }\n\n  $onInit(): void {\n    this.initParams();\n    this.formatDate();\n  }\n\n  $onChanges(): void {\n    this.initParams();\n    this.formatDate();\n  }\n\n  private initParams(): void {\n    this.date = this.date || moment().toISOString();\n    this.format = this.format || 'dddd, MMMM Do YYYY, h:mm a';\n  }\n\n  private formatDate(): void {\n    let date: moment.Moment;\n\n    if (this.timezone) {\n      date = momentTz.tz(this.date, this.timezone);\n    } else {\n      date = moment(this.date);\n    }\n\n    this.formattedDate = date.format(this.format);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timestamp/timestamp.controller.ts\n **/","import * as angular from 'angular';\nimport { timestampsRangeComponent } from './timestampsRange.component';\nimport './timestampsRange.less';\n\nconst module: ng.IModule = angular.module('ep.timestampsRange', []);\nmodule.component('timestampsRange', timestampsRangeComponent);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timestampsRange/timestampsRange.module.ts\n **/","import { TimestampsRangeController } from './timestampsRange.controller';\n\nexport const timestampsRangeComponent: ng.IComponentOptions = {\n    template: require('./timestampsRange.partial.html'),\n    controllerAs: 'vm',\n    controller: TimestampsRangeController,\n    bindings: {\n      start: '<',\n      end: '<?',\n      tz: '<?',\n      format: '<?'\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timestampsRange/timestampsRange.component.ts\n **/","import * as moment from 'moment';\nimport * as momentTz from 'moment-timezone';\n\nconst DATE_FORMAT: string = 'ddd, MMM D, YYYY';\nconst TIME_FORMAT: string = 'h:mma';\nconst SHORT_TIME_FORMAT: string = 'ha';\n\nexport class TimestampsRangeController {\n    start: string;\n    end: string;\n    tz: string;\n    format: string;\n\n    dateFormat: string;\n    startTimeFormat: string;\n    endTimeFormat: string;\n    isSameDate: boolean;\n\n  // @ngInject\n  constructor() { }\n\n    $onInit(): void {\n      this.dateFormat = this.format || DATE_FORMAT;\n      this.processDates(this.start, this.end, this.tz);\n    }\n\n    $onChanges(): void {\n      this.processDates(this.start, this.end, this.tz);\n    }\n\n    private processDates(start: string, end: string, tz: string): void {\n      const startMoment: moment.Moment = momentTz.tz(start, tz);\n      const endMoment: moment.Moment = momentTz.tz(end, tz);\n      this.isSameDate = startMoment.isSame(endMoment, 'day');\n      this.startTimeFormat = this.getTimeFormat(startMoment);\n      this.endTimeFormat = this.getTimeFormat(endMoment);\n    }\n\n    private getTimeFormat(moment: moment.Moment): string {\n      return moment.minutes() > 0 ? TIME_FORMAT : SHORT_TIME_FORMAT;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/timestampsRange/timestampsRange.controller.ts\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./timestampsRange.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./timestampsRange.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./timestampsRange.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/timestampsRange/timestampsRange.less\n ** module id = 92\n ** module chunks = 1\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".timestamps-range .bold{font-weight:700}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/less-loader!./src/timestampsRange/timestampsRange.less\n ** module id = 93\n ** module chunks = 1\n **/"],"sourceRoot":""}